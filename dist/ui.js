/******/ (() => { // webpackBootstrap
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
/*!**********************!*\
  !*** ./dist/main.js ***!
  \**********************/
(self.webpackChunkng_figma_plugin_boilerplate=self.webpackChunkng_figma_plugin_boilerplate||[]).push([[179],{195:()=>{function Xt(e){return"function"==typeof e}let Gn=!1;const He={Promise:void 0,set useDeprecatedSynchronousErrorHandling(e){if(e){const t=new Error;console.warn("DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \n"+t.stack)}else Gn&&console.log("RxJS: Back to a better error behavior. Thank you. <3");Gn=e},get useDeprecatedSynchronousErrorHandling(){return Gn}};function Nt(e){setTimeout(()=>{throw e},0)}const Br={closed:!0,next(e){},error(e){if(He.useDeprecatedSynchronousErrorHandling)throw e;Nt(e)},complete(){}},Ig=Array.isArray||(e=>e&&"number"==typeof e.length);function Fu(e){return null!==e&&"object"==typeof e}const Hr=(()=>{function e(t){return Error.call(this),this.message=t?`${t.length} errors occurred during unsubscription:\n${t.map((n,r)=>`${r+1}) ${n.toString()}`).join("\n  ")}`:"",this.name="UnsubscriptionError",this.errors=t,this}return e.prototype=Object.create(Error.prototype),e})();class re{constructor(t){this.closed=!1,this._parentOrParents=null,this._subscriptions=null,t&&(this._ctorUnsubscribe=!0,this._unsubscribe=t)}unsubscribe(){let t;if(this.closed)return;let{_parentOrParents:n,_ctorUnsubscribe:r,_unsubscribe:o,_subscriptions:i}=this;if(this.closed=!0,this._parentOrParents=null,this._subscriptions=null,n instanceof re)n.remove(this);else if(null!==n)for(let s=0;s<n.length;++s)n[s].remove(this);if(Xt(o)){r&&(this._unsubscribe=void 0);try{o.call(this)}catch(s){t=s instanceof Hr?Pu(s.errors):[s]}}if(Ig(i)){let s=-1,a=i.length;for(;++s<a;){const u=i[s];if(Fu(u))try{u.unsubscribe()}catch(c){t=t||[],c instanceof Hr?t=t.concat(Pu(c.errors)):t.push(c)}}}if(t)throw new Hr(t)}add(t){let n=t;if(!t)return re.EMPTY;switch(typeof t){case"function":n=new re(t);case"object":if(n===this||n.closed||"function"!=typeof n.unsubscribe)return n;if(this.closed)return n.unsubscribe(),n;if(!(n instanceof re)){const i=n;n=new re,n._subscriptions=[i]}break;default:throw new Error("unrecognized teardown "+t+" added to Subscription.")}let{_parentOrParents:r}=n;if(null===r)n._parentOrParents=this;else if(r instanceof re){if(r===this)return n;n._parentOrParents=[r,this]}else{if(-1!==r.indexOf(this))return n;r.push(this)}const o=this._subscriptions;return null===o?this._subscriptions=[n]:o.push(n),n}remove(t){const n=this._subscriptions;if(n){const r=n.indexOf(t);-1!==r&&n.splice(r,1)}}}var e;function Pu(e){return e.reduce((t,n)=>t.concat(n instanceof Hr?n.errors:n),[])}re.EMPTY=((e=new re).closed=!0,e);const $r="function"==typeof Symbol?Symbol("rxSubscriber"):"@@rxSubscriber_"+Math.random();class Fe extends re{constructor(t,n,r){switch(super(),this.syncErrorValue=null,this.syncErrorThrown=!1,this.syncErrorThrowable=!1,this.isStopped=!1,arguments.length){case 0:this.destination=Br;break;case 1:if(!t){this.destination=Br;break}if("object"==typeof t){t instanceof Fe?(this.syncErrorThrowable=t.syncErrorThrowable,this.destination=t,t.add(this)):(this.syncErrorThrowable=!0,this.destination=new Ru(this,t));break}default:this.syncErrorThrowable=!0,this.destination=new Ru(this,t,n,r)}}[$r](){return this}static create(t,n,r){const o=new Fe(t,n,r);return o.syncErrorThrowable=!1,o}next(t){this.isStopped||this._next(t)}error(t){this.isStopped||(this.isStopped=!0,this._error(t))}complete(){this.isStopped||(this.isStopped=!0,this._complete())}unsubscribe(){this.closed||(this.isStopped=!0,super.unsubscribe())}_next(t){this.destination.next(t)}_error(t){this.destination.error(t),this.unsubscribe()}_complete(){this.destination.complete(),this.unsubscribe()}_unsubscribeAndRecycle(){const{_parentOrParents:t}=this;return this._parentOrParents=null,this.unsubscribe(),this.closed=!1,this.isStopped=!1,this._parentOrParents=t,this}}class Ru extends Fe{constructor(t,n,r,o){super(),this._parentSubscriber=t;let i,s=this;Xt(n)?i=n:n&&(i=n.next,r=n.error,o=n.complete,n!==Br&&(s=Object.create(n),Xt(s.unsubscribe)&&this.add(s.unsubscribe.bind(s)),s.unsubscribe=this.unsubscribe.bind(this))),this._context=s,this._next=i,this._error=r,this._complete=o}next(t){if(!this.isStopped&&this._next){const{_parentSubscriber:n}=this;He.useDeprecatedSynchronousErrorHandling&&n.syncErrorThrowable?this.__tryOrSetError(n,this._next,t)&&this.unsubscribe():this.__tryOrUnsub(this._next,t)}}error(t){if(!this.isStopped){const{_parentSubscriber:n}=this,{useDeprecatedSynchronousErrorHandling:r}=He;if(this._error)r&&n.syncErrorThrowable?(this.__tryOrSetError(n,this._error,t),this.unsubscribe()):(this.__tryOrUnsub(this._error,t),this.unsubscribe());else if(n.syncErrorThrowable)r?(n.syncErrorValue=t,n.syncErrorThrown=!0):Nt(t),this.unsubscribe();else{if(this.unsubscribe(),r)throw t;Nt(t)}}}complete(){if(!this.isStopped){const{_parentSubscriber:t}=this;if(this._complete){const n=()=>this._complete.call(this._context);He.useDeprecatedSynchronousErrorHandling&&t.syncErrorThrowable?(this.__tryOrSetError(t,n),this.unsubscribe()):(this.__tryOrUnsub(n),this.unsubscribe())}else this.unsubscribe()}}__tryOrUnsub(t,n){try{t.call(this._context,n)}catch(r){if(this.unsubscribe(),He.useDeprecatedSynchronousErrorHandling)throw r;Nt(r)}}__tryOrSetError(t,n,r){if(!He.useDeprecatedSynchronousErrorHandling)throw new Error("bad call");try{n.call(this._context,r)}catch(o){return He.useDeprecatedSynchronousErrorHandling?(t.syncErrorValue=o,t.syncErrorThrown=!0,!0):(Nt(o),!0)}return!1}_unsubscribe(){const{_parentSubscriber:t}=this;this._context=null,this._parentSubscriber=null,t.unsubscribe()}}const zn="function"==typeof Symbol&&Symbol.observable||"@@observable";function Ou(e){return e}let Se=(()=>{class e{constructor(n){this._isScalar=!1,n&&(this._subscribe=n)}lift(n){const r=new e;return r.source=this,r.operator=n,r}subscribe(n,r,o){const{operator:i}=this,s=function Sg(e,t,n){if(e){if(e instanceof Fe)return e;if(e[$r])return e[$r]()}return e||t||n?new Fe(e,t,n):new Fe(Br)}(n,r,o);if(s.add(i?i.call(s,this.source):this.source||He.useDeprecatedSynchronousErrorHandling&&!s.syncErrorThrowable?this._subscribe(s):this._trySubscribe(s)),He.useDeprecatedSynchronousErrorHandling&&s.syncErrorThrowable&&(s.syncErrorThrowable=!1,s.syncErrorThrown))throw s.syncErrorValue;return s}_trySubscribe(n){try{return this._subscribe(n)}catch(r){He.useDeprecatedSynchronousErrorHandling&&(n.syncErrorThrown=!0,n.syncErrorValue=r),function Mg(e){for(;e;){const{closed:t,destination:n,isStopped:r}=e;if(t||r)return!1;e=n&&n instanceof Fe?n:null}return!0}(n)?n.error(r):console.warn(r)}}forEach(n,r){return new(r=ku(r))((o,i)=>{let s;s=this.subscribe(a=>{try{n(a)}catch(u){i(u),s&&s.unsubscribe()}},i,o)})}_subscribe(n){const{source:r}=this;return r&&r.subscribe(n)}[zn](){return this}pipe(...n){return 0===n.length?this:function Lu(e){return 0===e.length?Ou:1===e.length?e[0]:function(n){return e.reduce((r,o)=>o(r),n)}}(n)(this)}toPromise(n){return new(n=ku(n))((r,o)=>{let i;this.subscribe(s=>i=s,s=>o(s),()=>r(i))})}}return e.create=t=>new e(t),e})();function ku(e){if(e||(e=He.Promise||Promise),!e)throw new Error("no Promise impl found");return e}const Wn=(()=>{function e(){return Error.call(this),this.message="object unsubscribed",this.name="ObjectUnsubscribedError",this}return e.prototype=Object.create(Error.prototype),e})();class Tg extends re{constructor(t,n){super(),this.subject=t,this.subscriber=n,this.closed=!1}unsubscribe(){if(this.closed)return;this.closed=!0;const t=this.subject,n=t.observers;if(this.subject=null,!n||0===n.length||t.isStopped||t.closed)return;const r=n.indexOf(this.subscriber);-1!==r&&n.splice(r,1)}}class Vu extends Fe{constructor(t){super(t),this.destination=t}}let Di=(()=>{class e extends Se{constructor(){super(),this.observers=[],this.closed=!1,this.isStopped=!1,this.hasError=!1,this.thrownError=null}[$r](){return new Vu(this)}lift(n){const r=new ju(this,this);return r.operator=n,r}next(n){if(this.closed)throw new Wn;if(!this.isStopped){const{observers:r}=this,o=r.length,i=r.slice();for(let s=0;s<o;s++)i[s].next(n)}}error(n){if(this.closed)throw new Wn;this.hasError=!0,this.thrownError=n,this.isStopped=!0;const{observers:r}=this,o=r.length,i=r.slice();for(let s=0;s<o;s++)i[s].error(n);this.observers.length=0}complete(){if(this.closed)throw new Wn;this.isStopped=!0;const{observers:n}=this,r=n.length,o=n.slice();for(let i=0;i<r;i++)o[i].complete();this.observers.length=0}unsubscribe(){this.isStopped=!0,this.closed=!0,this.observers=null}_trySubscribe(n){if(this.closed)throw new Wn;return super._trySubscribe(n)}_subscribe(n){if(this.closed)throw new Wn;return this.hasError?(n.error(this.thrownError),re.EMPTY):this.isStopped?(n.complete(),re.EMPTY):(this.observers.push(n),new Tg(this,n))}asObservable(){const n=new Se;return n.source=this,n}}return e.create=(t,n)=>new ju(t,n),e})();class ju extends Di{constructor(t,n){super(),this.destination=t,this.source=n}next(t){const{destination:n}=this;n&&n.next&&n.next(t)}error(t){const{destination:n}=this;n&&n.error&&this.destination.error(t)}complete(){const{destination:t}=this;t&&t.complete&&this.destination.complete()}_subscribe(t){const{source:n}=this;return n?this.source.subscribe(t):re.EMPTY}}class xg{constructor(t,n){this.project=t,this.thisArg=n}call(t,n){return n.subscribe(new Fg(t,this.project,this.thisArg))}}class Fg extends Fe{constructor(t,n,r){super(t),this.project=n,this.count=0,this.thisArg=r||this}_next(t){let n;try{n=this.project.call(this.thisArg,t,this.count++)}catch(r){return void this.destination.error(r)}this.destination.next(n)}}const Bu=e=>t=>{for(let n=0,r=e.length;n<r&&!t.closed;n++)t.next(e[n]);t.complete()},Ur=function Rg(){return"function"==typeof Symbol&&Symbol.iterator?Symbol.iterator:"@@iterator"}(),Hu=e=>e&&"number"==typeof e.length&&"function"!=typeof e;function $u(e){return!!e&&"function"!=typeof e.subscribe&&"function"==typeof e.then}const Uu=e=>{if(e&&"function"==typeof e[zn])return(e=>t=>{const n=e[zn]();if("function"!=typeof n.subscribe)throw new TypeError("Provided object does not correctly implement Symbol.observable");return n.subscribe(t)})(e);if(Hu(e))return Bu(e);if($u(e))return(e=>t=>(e.then(n=>{t.closed||(t.next(n),t.complete())},n=>t.error(n)).then(null,Nt),t))(e);if(e&&"function"==typeof e[Ur])return(e=>t=>{const n=e[Ur]();for(;;){let r;try{r=n.next()}catch(o){return t.error(o),t}if(r.done){t.complete();break}if(t.next(r.value),t.closed)break}return"function"==typeof n.return&&t.add(()=>{n.return&&n.return()}),t})(e);{const n=`You provided ${Fu(e)?"an invalid object":`'${e}'`} where a stream was expected. You can provide an Observable, Promise, Array, or Iterable.`;throw new TypeError(n)}};function Gu(e,t){return new Se(n=>{const r=new re;let o=0;return r.add(t.schedule(function(){o!==e.length?(n.next(e[o++]),n.closed||r.add(this.schedule())):n.complete()})),r})}class Gg extends Fe{constructor(t){super(),this.parent=t}_next(t){this.parent.notifyNext(t)}_error(t){this.parent.notifyError(t),this.unsubscribe()}_complete(){this.parent.notifyComplete(),this.unsubscribe()}}class zg extends Fe{notifyNext(t){this.destination.next(t)}notifyError(t){this.destination.error(t)}notifyComplete(){this.destination.complete()}}function zu(e,t,n=Number.POSITIVE_INFINITY){return"function"==typeof t?r=>r.pipe(zu((o,i)=>function Ug(e,t){return t?function $g(e,t){if(null!=e){if(function Bg(e){return e&&"function"==typeof e[zn]}(e))return function kg(e,t){return new Se(n=>{const r=new re;return r.add(t.schedule(()=>{const o=e[zn]();r.add(o.subscribe({next(i){r.add(t.schedule(()=>n.next(i)))},error(i){r.add(t.schedule(()=>n.error(i)))},complete(){r.add(t.schedule(()=>n.complete()))}}))})),r})}(e,t);if($u(e))return function Vg(e,t){return new Se(n=>{const r=new re;return r.add(t.schedule(()=>e.then(o=>{r.add(t.schedule(()=>{n.next(o),r.add(t.schedule(()=>n.complete()))}))},o=>{r.add(t.schedule(()=>n.error(o)))}))),r})}(e,t);if(Hu(e))return Gu(e,t);if(function Hg(e){return e&&"function"==typeof e[Ur]}(e)||"string"==typeof e)return function jg(e,t){if(!e)throw new Error("Iterable cannot be null");return new Se(n=>{const r=new re;let o;return r.add(()=>{o&&"function"==typeof o.return&&o.return()}),r.add(t.schedule(()=>{o=e[Ur](),r.add(t.schedule(function(){if(n.closed)return;let i,s;try{const a=o.next();i=a.value,s=a.done}catch(a){return void n.error(a)}s?n.complete():(n.next(i),this.schedule())}))})),r})}(e,t)}throw new TypeError((null!==e&&typeof e||e)+" is not observable")}(e,t):e instanceof Se?e:new Se(Uu(e))}(e(o,i)).pipe(function Ng(e,t){return function(r){if("function"!=typeof e)throw new TypeError("argument is not a function. Are you looking for `mapTo()`?");return r.lift(new xg(e,t))}}((s,a)=>t(o,s,i,a))),n)):("number"==typeof t&&(n=t),r=>r.lift(new qg(e,n)))}class qg{constructor(t,n=Number.POSITIVE_INFINITY){this.project=t,this.concurrent=n}call(t,n){return n.subscribe(new Qg(t,this.project,this.concurrent))}}class Qg extends zg{constructor(t,n,r=Number.POSITIVE_INFINITY){super(t),this.project=n,this.concurrent=r,this.hasCompleted=!1,this.buffer=[],this.active=0,this.index=0}_next(t){this.active<this.concurrent?this._tryNext(t):this.buffer.push(t)}_tryNext(t){let n;const r=this.index++;try{n=this.project(t,r)}catch(o){return void this.destination.error(o)}this.active++,this._innerSub(n)}_innerSub(t){const n=new Gg(this),r=this.destination;r.add(n);const o=function Wg(e,t){if(t.closed)return;if(e instanceof Se)return e.subscribe(t);let n;try{n=Uu(e)(t)}catch(r){t.error(r)}return n}(t,n);o!==n&&r.add(o)}_complete(){this.hasCompleted=!0,0===this.active&&0===this.buffer.length&&this.destination.complete(),this.unsubscribe()}notifyNext(t){this.destination.next(t)}notifyComplete(){const t=this.buffer;this.active--,t.length>0?this._next(t.shift()):0===this.active&&this.hasCompleted&&this.destination.complete()}}function Wu(){return function(t){return t.lift(new Jg(t))}}class Jg{constructor(t){this.connectable=t}call(t,n){const{connectable:r}=this;r._refCount++;const o=new Xg(t,r),i=n.subscribe(o);return o.closed||(o.connection=r.connect()),i}}class Xg extends Fe{constructor(t,n){super(t),this.connectable=n}_unsubscribe(){const{connectable:t}=this;if(!t)return void(this.connection=null);this.connectable=null;const n=t._refCount;if(n<=0)return void(this.connection=null);if(t._refCount=n-1,n>1)return void(this.connection=null);const{connection:r}=this,o=t._connection;this.connection=null,o&&(!r||o===r)&&o.unsubscribe()}}class em extends Se{constructor(t,n){super(),this.source=t,this.subjectFactory=n,this._refCount=0,this._isComplete=!1}_subscribe(t){return this.getSubject().subscribe(t)}getSubject(){const t=this._subject;return(!t||t.isStopped)&&(this._subject=this.subjectFactory()),this._subject}connect(){let t=this._connection;return t||(this._isComplete=!1,t=this._connection=new re,t.add(this.source.subscribe(new nm(this.getSubject(),this))),t.closed&&(this._connection=null,t=re.EMPTY)),t}refCount(){return Wu()(this)}}const tm=(()=>{const e=em.prototype;return{operator:{value:null},_refCount:{value:0,writable:!0},_subject:{value:null,writable:!0},_connection:{value:null,writable:!0},_subscribe:{value:e._subscribe},_isComplete:{value:e._isComplete,writable:!0},getSubject:{value:e.getSubject},connect:{value:e.connect},refCount:{value:e.refCount}}})();class nm extends Vu{constructor(t,n){super(t),this.connectable=n}_error(t){this._unsubscribe(),super._error(t)}_complete(){this.connectable._isComplete=!0,this._unsubscribe(),super._complete()}_unsubscribe(){const t=this.connectable;if(t){this.connectable=null;const n=t._connection;t._refCount=0,t._subject=null,t._connection=null,n&&n.unsubscribe()}}}class im{constructor(t,n){this.subjectFactory=t,this.selector=n}call(t,n){const{selector:r}=this,o=this.subjectFactory(),i=r(o).subscribe(t);return i.add(n.subscribe(o)),i}}function sm(){return new Di}function z(e){for(let t in e)if(e[t]===z)return t;throw Error("Could not find renamed property on target object.")}function W(e){if("string"==typeof e)return e;if(Array.isArray(e))return"["+e.map(W).join(", ")+"]";if(null==e)return""+e;if(e.overriddenName)return`${e.overriddenName}`;if(e.name)return`${e.name}`;const t=e.toString();if(null==t)return""+t;const n=t.indexOf("\n");return-1===n?t:t.substring(0,n)}function wi(e,t){return null==e||""===e?null===t?"":t:null==t||""===t?e:e+" "+t}const um=z({__forward_ref__:z});function _i(e){return e.__forward_ref__=_i,e.toString=function(){return W(this())},e}function S(e){return function Ei(e){return"function"==typeof e&&e.hasOwnProperty(um)&&e.__forward_ref__===_i}(e)?e():e}class I extends Error{constructor(t,n){super(function Gr(e,t){return`NG0${Math.abs(e)}${t?": "+t.trim():""}`}(t,n)),this.code=t}}function B(e){return"function"==typeof e?e.name||e.toString():"object"==typeof e&&null!=e&&"function"==typeof e.type?e.type.name||e.type.toString():function N(e){return"string"==typeof e?e:null==e?"":String(e)}(e)}function zr(e,t){throw new I(-201,!1)}function Re(e,t){null==e&&function $(e,t,n,r){throw new Error(`ASSERTION ERROR: ${e}`+(null==r?"":` [Expected=> ${n} ${r} ${t} <=Actual]`))}(t,e,null,"!=")}function Y(e){return{token:e.token,providedIn:e.providedIn||null,factory:e.factory,value:void 0}}function en(e){return{providers:e.providers||[],imports:e.imports||[]}}function Wr(e){return qu(e,qr)||qu(e,Zu)}function qu(e,t){return e.hasOwnProperty(t)?e[t]:null}function Qu(e){return e&&(e.hasOwnProperty(Ci)||e.hasOwnProperty(mm))?e[Ci]:null}const qr=z({\u0275prov:z}),Ci=z({\u0275inj:z}),Zu=z({ngInjectableDef:z}),mm=z({ngInjectorDef:z});var T=(()=>((T=T||{})[T.Default=0]="Default",T[T.Host=1]="Host",T[T.Self=2]="Self",T[T.SkipSelf=4]="SkipSelf",T[T.Optional=8]="Optional",T))();let bi;function $e(e){const t=bi;return bi=e,t}function Yu(e,t,n){const r=Wr(e);return r&&"root"==r.providedIn?void 0===r.value?r.value=r.factory():r.value:n&T.Optional?null:void 0!==t?t:void zr(W(e))}function xt(e){return{toString:e}.toString()}var Ye=(()=>((Ye=Ye||{})[Ye.OnPush=0]="OnPush",Ye[Ye.Default=1]="Default",Ye))(),at=(()=>(function(e){e[e.Emulated=0]="Emulated",e[e.None=2]="None",e[e.ShadowDom=3]="ShadowDom"}(at||(at={})),at))();const q=(()=>typeof globalThis<"u"&&globalThis|| true&&({})||0||0)(),tn={},H=[],Qr=z({\u0275cmp:z}),Ii=z({\u0275dir:z}),Mi=z({\u0275pipe:z}),Ku=z({\u0275mod:z}),mt=z({\u0275fac:z}),qn=z({__NG_ELEMENT_ID__:z});let Dm=0;function Si(e){return xt(()=>{const n=!0===e.standalone,r={},o={type:e.type,providersResolver:null,decls:e.decls,vars:e.vars,factory:null,template:e.template||null,consts:e.consts||null,ngContentSelectors:e.ngContentSelectors,hostBindings:e.hostBindings||null,hostVars:e.hostVars||0,hostAttrs:e.hostAttrs||null,contentQueries:e.contentQueries||null,declaredInputs:r,inputs:null,outputs:null,exportAs:e.exportAs||null,onPush:e.changeDetection===Ye.OnPush,directiveDefs:null,pipeDefs:null,standalone:n,dependencies:n&&e.dependencies||null,getStandaloneInjector:null,selectors:e.selectors||H,viewQuery:e.viewQuery||null,features:e.features||null,data:e.data||{},encapsulation:e.encapsulation||at.Emulated,id:"c"+Dm++,styles:e.styles||H,_:null,setInput:null,schemas:e.schemas||null,tView:null},i=e.dependencies,s=e.features;return o.inputs=ec(e.inputs,r),o.outputs=ec(e.outputs),s&&s.forEach(a=>a(o)),o.directiveDefs=i?()=>("function"==typeof i?i():i).map(Ju).filter(Xu):null,o.pipeDefs=i?()=>("function"==typeof i?i():i).map(_e).filter(Xu):null,o})}function Ju(e){return G(e)||we(e)}function Xu(e){return null!==e}function Qn(e){return xt(()=>({type:e.type,bootstrap:e.bootstrap||H,declarations:e.declarations||H,imports:e.imports||H,exports:e.exports||H,transitiveCompileScopes:null,schemas:e.schemas||null,id:e.id||null}))}function ec(e,t){if(null==e)return tn;const n={};for(const r in e)if(e.hasOwnProperty(r)){let o=e[r],i=o;Array.isArray(o)&&(i=o[1],o=o[0]),n[o]=r,t&&(t[o]=i)}return n}function G(e){return e[Qr]||null}function we(e){return e[Ii]||null}function _e(e){return e[Mi]||null}const R=11,Q=22;function Ae(e){return Array.isArray(e)&&"object"==typeof e[1]}function Je(e){return Array.isArray(e)&&!0===e[1]}function Ni(e){return 0!=(8&e.flags)}function Xr(e){return 1==(1&e.flags)}function Xe(e){return null!==e.template}function bm(e){return 0!=(256&e[2])}function Gt(e,t){return e.hasOwnProperty(mt)?e[mt]:null}class Sm{constructor(t,n,r){this.previousValue=t,this.currentValue=n,this.firstChange=r}isFirstChange(){return this.firstChange}}function rc(e){return e.type.prototype.ngOnChanges&&(e.setInput=Am),Tm}function Tm(){const e=ic(this),t=e?.current;if(t){const n=e.previous;if(n===tn)e.previous=t;else for(let r in t)n[r]=t[r];e.current=null,this.ngOnChanges(t)}}function Am(e,t,n,r){const o=ic(e)||function Nm(e,t){return e[oc]=t}(e,{previous:tn,current:null}),i=o.current||(o.current={}),s=o.previous,a=this.declaredInputs[n],u=s[a];i[a]=new Sm(u&&u.currentValue,t,s===tn),e[r]=t}const oc="__ngSimpleChanges__";function ic(e){return e[oc]||null}function ie(e){for(;Array.isArray(e);)e=e[0];return e}function We(e,t){return ie(t[e.index])}function ke(e,t){const n=t[e];return Ae(n)?n:n[0]}function no(e){return 64==(64&e[2])}function Ft(e,t){return null==t?null:e[t]}function sc(e){e[18]=0}function Li(e,t){e[5]+=t;let n=e,r=e[3];for(;null!==r&&(1===t&&1===n[5]||-1===t&&0===n[5]);)r[5]+=t,n=r,r=r[3]}const A={lFrame:mc(null),bindingsEnabled:!0};function uc(){return A.bindingsEnabled}function m(){return A.lFrame.lView}function V(){return A.lFrame.tView}function ce(){let e=cc();for(;null!==e&&64===e.type;)e=e.parent;return e}function cc(){return A.lFrame.currentTNode}function ut(e,t){const n=A.lFrame;n.currentTNode=e,n.isParent=t}function ki(){return A.lFrame.isParent}function qm(e,t){const n=A.lFrame;n.bindingIndex=n.bindingRootIndex=e,ji(t)}function ji(e){A.lFrame.currentDirectiveIndex=e}function Hi(e){A.lFrame.currentQueryIndex=e}function Zm(e){const t=e[1];return 2===t.type?t.declTNode:1===t.type?e[6]:null}function pc(e,t,n){if(n&T.SkipSelf){let o=t,i=e;for(;!(o=o.parent,null!==o||n&T.Host||(o=Zm(i),null===o||(i=i[15],10&o.type))););if(null===o)return!1;t=o,e=i}const r=A.lFrame=gc();return r.currentTNode=t,r.lView=e,!0}function $i(e){const t=gc(),n=e[1];A.lFrame=t,t.currentTNode=n.firstChild,t.lView=e,t.tView=n,t.contextLView=e,t.bindingIndex=n.bindingStartIndex,t.inI18n=!1}function gc(){const e=A.lFrame,t=null===e?null:e.child;return null===t?mc(e):t}function mc(e){const t={currentTNode:null,isParent:!0,lView:null,tView:null,selectedIndex:-1,contextLView:null,elementDepthCount:0,currentNamespace:null,currentDirectiveIndex:-1,bindingRootIndex:-1,bindingIndex:-1,currentQueryIndex:0,parent:e,child:null,inI18n:!1};return null!==e&&(e.child=t),t}function yc(){const e=A.lFrame;return A.lFrame=e.parent,e.currentTNode=null,e.lView=null,e}const Dc=yc;function Ui(){const e=yc();e.isParent=!0,e.tView=null,e.selectedIndex=-1,e.contextLView=null,e.elementDepthCount=0,e.currentDirectiveIndex=-1,e.currentNamespace=null,e.bindingRootIndex=-1,e.bindingIndex=-1,e.currentQueryIndex=0}function Pt(e){A.lFrame.selectedIndex=e}function ro(e,t){for(let n=t.directiveStart,r=t.directiveEnd;n<r;n++){const i=e.data[n].type.prototype,{ngAfterContentInit:s,ngAfterContentChecked:a,ngAfterViewInit:u,ngAfterViewChecked:c,ngOnDestroy:l}=i;s&&(e.contentHooks||(e.contentHooks=[])).push(-n,s),a&&((e.contentHooks||(e.contentHooks=[])).push(n,a),(e.contentCheckHooks||(e.contentCheckHooks=[])).push(n,a)),u&&(e.viewHooks||(e.viewHooks=[])).push(-n,u),c&&((e.viewHooks||(e.viewHooks=[])).push(n,c),(e.viewCheckHooks||(e.viewCheckHooks=[])).push(n,c)),null!=l&&(e.destroyHooks||(e.destroyHooks=[])).push(n,l)}}function oo(e,t,n){vc(e,t,3,n)}function io(e,t,n,r){(3&e[2])===n&&vc(e,t,n,r)}function Gi(e,t){let n=e[2];(3&n)===t&&(n&=2047,n+=1,e[2]=n)}function vc(e,t,n,r){const i=r??-1,s=t.length-1;let a=0;for(let u=void 0!==r?65535&e[18]:0;u<s;u++)if("number"==typeof t[u+1]){if(a=t[u],null!=r&&a>=r)break}else t[u]<0&&(e[18]+=65536),(a<i||-1==i)&&(oy(e,n,t,u),e[18]=(4294901760&e[18])+u+2),u++}function oy(e,t,n,r){const o=n[r]<0,i=n[r+1],a=e[o?-n[r]:n[r]];if(o){if(e[2]>>11<e[18]>>16&&(3&e[2])===t){e[2]+=2048;try{i.call(a)}finally{}}}else try{i.call(a)}finally{}}class tr{constructor(t,n,r){this.factory=t,this.resolving=!1,this.canSeeViewProviders=n,this.injectImpl=r}}function so(e,t,n){let r=0;for(;r<n.length;){const o=n[r];if("number"==typeof o){if(0!==o)break;r++;const i=n[r++],s=n[r++],a=n[r++];e.setAttribute(t,s,a,i)}else{const i=o,s=n[++r];_c(i)?e.setProperty(t,i,s):e.setAttribute(t,i,s),r++}}return r}function wc(e){return 3===e||4===e||6===e}function _c(e){return 64===e.charCodeAt(0)}function ao(e,t){if(null!==t&&0!==t.length)if(null===e||0===e.length)e=t.slice();else{let n=-1;for(let r=0;r<t.length;r++){const o=t[r];"number"==typeof o?n=o:0===n||Ec(e,n,o,null,-1===n||2===n?t[++r]:null)}}return e}function Ec(e,t,n,r,o){let i=0,s=e.length;if(-1===t)s=-1;else for(;i<e.length;){const a=e[i++];if("number"==typeof a){if(a===t){s=-1;break}if(a>t){s=i-1;break}}}for(;i<e.length;){const a=e[i];if("number"==typeof a)break;if(a===n){if(null===r)return void(null!==o&&(e[i+1]=o));if(r===e[i+1])return void(e[i+2]=o)}i++,null!==r&&i++,null!==o&&i++}-1!==s&&(e.splice(s,0,t),i=s+1),e.splice(i++,0,n),null!==r&&e.splice(i++,0,r),null!==o&&e.splice(i++,0,o)}function un(e){return 32767&e}function cn(e,t){let n=function cy(e){return e>>16}(e),r=t;for(;n>0;)r=r[15],n--;return r}let Wi=!0;function uo(e){const t=Wi;return Wi=e,t}let ly=0;const ct={};function rr(e,t){const n=Qi(e,t);if(-1!==n)return n;const r=t[1];r.firstCreatePass&&(e.injectorIndex=t.length,qi(r.data,e),qi(t,null),qi(r.blueprint,null));const o=co(e,t),i=e.injectorIndex;if(function Cc(e){return-1!==e}(o)){const s=un(o),a=cn(o,t),u=a[1].data;for(let c=0;c<8;c++)t[i+c]=a[s+c]|u[s+c]}return t[i+8]=o,i}function qi(e,t){e.push(0,0,0,0,0,0,0,0,t)}function Qi(e,t){return-1===e.injectorIndex||e.parent&&e.parent.injectorIndex===e.injectorIndex||null===t[e.injectorIndex+8]?-1:e.injectorIndex}function co(e,t){if(e.parent&&-1!==e.parent.injectorIndex)return e.parent.injectorIndex;let n=0,r=null,o=t;for(;null!==o;){if(r=Fc(o),null===r)return-1;if(n++,o=o[15],-1!==r.injectorIndex)return r.injectorIndex|n<<16}return-1}function lo(e,t,n){!function dy(e,t,n){let r;"string"==typeof n?r=n.charCodeAt(0)||0:n.hasOwnProperty(qn)&&(r=n[qn]),null==r&&(r=n[qn]=ly++);const o=255&r;t.data[e+(o>>5)]|=1<<o}(e,t,n)}function Mc(e,t,n){if(n&T.Optional||void 0!==e)return e;zr()}function Sc(e,t,n,r){if(n&T.Optional&&void 0===r&&(r=null),0==(n&(T.Self|T.Host))){const o=e[9],i=$e(void 0);try{return o?o.get(t,r,n&T.Optional):Yu(t,r,n&T.Optional)}finally{$e(i)}}return Mc(r,0,n)}function Tc(e,t,n,r=T.Default,o){if(null!==e){if(1024&t[2]){const s=function yy(e,t,n,r,o){let i=e,s=t;for(;null!==i&&null!==s&&1024&s[2]&&!(256&s[2]);){const a=Ac(i,s,n,r|T.Self,ct);if(a!==ct)return a;let u=i.parent;if(!u){const c=s[21];if(c){const l=c.get(n,ct,r);if(l!==ct)return l}u=Fc(s),s=s[15]}i=u}return o}(e,t,n,r,ct);if(s!==ct)return s}const i=Ac(e,t,n,r,ct);if(i!==ct)return i}return Sc(t,n,r,o)}function Ac(e,t,n,r,o){const i=function py(e){if("string"==typeof e)return e.charCodeAt(0)||0;const t=e.hasOwnProperty(qn)?e[qn]:void 0;return"number"==typeof t?t>=0?255&t:gy:t}(n);if("function"==typeof i){if(!pc(t,e,r))return r&T.Host?Mc(o,0,r):Sc(t,n,r,o);try{const s=i(r);if(null!=s||r&T.Optional)return s;zr()}finally{Dc()}}else if("number"==typeof i){let s=null,a=Qi(e,t),u=-1,c=r&T.Host?t[16][6]:null;for((-1===a||r&T.SkipSelf)&&(u=-1===a?co(e,t):t[a+8],-1!==u&&xc(r,!1)?(s=t[1],a=un(u),t=cn(u,t)):a=-1);-1!==a;){const l=t[1];if(Nc(i,a,l.data)){const d=hy(a,t,n,s,r,c);if(d!==ct)return d}u=t[a+8],-1!==u&&xc(r,t[1].data[a+8]===c)&&Nc(i,a,t)?(s=l,a=un(u),t=cn(u,t)):a=-1}}return o}function hy(e,t,n,r,o,i){const s=t[1],a=s.data[e+8],l=function fo(e,t,n,r,o){const i=e.providerIndexes,s=t.data,a=1048575&i,u=e.directiveStart,l=i>>20,f=o?a+l:e.directiveEnd;for(let h=r?a:a+l;h<f;h++){const p=s[h];if(h<u&&n===p||h>=u&&p.type===n)return h}if(o){const h=s[u];if(h&&Xe(h)&&h.type===n)return u}return null}(a,s,n,null==r?function Jr(e){return 2==(2&e.flags)}(a)&&Wi:r!=s&&0!=(3&a.type),o&T.Host&&i===a);return null!==l?or(t,s,l,a):ct}function or(e,t,n,r){let o=e[n];const i=t.data;if(function iy(e){return e instanceof tr}(o)){const s=o;s.resolving&&function cm(e,t){const n=t?`. Dependency path: ${t.join(" > ")} > ${e}`:"";throw new I(-200,`Circular dependency in DI detected for ${e}${n}`)}(B(i[n]));const a=uo(s.canSeeViewProviders);s.resolving=!0;const u=s.injectImpl?$e(s.injectImpl):null;pc(e,r,T.Default);try{o=e[n]=s.factory(void 0,i,e,r),t.firstCreatePass&&n>=r.directiveStart&&function ry(e,t,n){const{ngOnChanges:r,ngOnInit:o,ngDoCheck:i}=t.type.prototype;if(r){const s=rc(t);(n.preOrderHooks||(n.preOrderHooks=[])).push(e,s),(n.preOrderCheckHooks||(n.preOrderCheckHooks=[])).push(e,s)}o&&(n.preOrderHooks||(n.preOrderHooks=[])).push(0-e,o),i&&((n.preOrderHooks||(n.preOrderHooks=[])).push(e,i),(n.preOrderCheckHooks||(n.preOrderCheckHooks=[])).push(e,i))}(n,i[n],t)}finally{null!==u&&$e(u),uo(a),s.resolving=!1,Dc()}}return o}function Nc(e,t,n){return!!(n[t+(e>>5)]&1<<e)}function xc(e,t){return!(e&T.Self||e&T.Host&&t)}class ln{constructor(t,n){this._tNode=t,this._lView=n}get(t,n,r){return Tc(this._tNode,this._lView,t,r,n)}}function gy(){return new ln(ce(),m())}function Fc(e){const t=e[1],n=t.type;return 2===n?t.declTNode:1===n?e[6]:null}class L{constructor(t,n){this._desc=t,this.ngMetadataName="InjectionToken",this.\u0275prov=void 0,"number"==typeof n?this.__NG_ELEMENT_ID__=n:void 0!==n&&(this.\u0275prov=Y({token:this,providedIn:n.providedIn||"root",factory:n.factory}))}get multi(){return this}toString(){return`InjectionToken ${this._desc}`}}function vt(e,t){e.forEach(n=>Array.isArray(n)?vt(n,t):t(n))}function ho(e,t){return t>=e.length-1?e.pop():e.splice(t,1)[0]}const ur={},go="ngTempTokenPath",Ay=/\n/gm,Vc="__source";let cr,os;function mn(e){const t=cr;return cr=e,t}function xy(e,t=T.Default){if(void 0===cr)throw new I(-203,!1);return null===cr?Yu(e,void 0,t):cr.get(e,t&T.Optional?null:void 0,t)}function U(e,t=T.Default){return(function ym(){return bi}()||xy)(S(e),t)}function ns(e){const t=[];for(let n=0;n<e.length;n++){const r=S(e[n]);if(Array.isArray(r)){if(0===r.length)throw new I(900,!1);let o,i=T.Default;for(let s=0;s<r.length;s++){const a=r[s],u=Py(a);"number"==typeof u?-1===u?o=a.token:i|=u:o=a}t.push(U(o,i))}else t.push(U(r))}return t}function Py(e){return e.__NG_DI_FLAG__}const sl=new L("ENVIRONMENT_INITIALIZER"),al=new L("INJECTOR",-1),ul=new L("INJECTOR_DEF_TYPES");class cl{get(t,n=ur){if(n===ur){const r=new Error(`NullInjectorError: No provider for ${W(t)}!`);throw r.name="NullInjectorError",r}return n}}function yD(...e){return{\u0275providers:ll(0,e)}}function ll(e,...t){const n=[],r=new Set;let o;return vt(t,i=>{const s=i;ds(s,n,[],r)&&(o||(o=[]),o.push(s))}),void 0!==o&&dl(o,n),n}function dl(e,t){for(let n=0;n<e.length;n++){const{providers:o}=e[n];vt(o,i=>{t.push(i)})}}function ds(e,t,n,r){if(!(e=S(e)))return!1;let o=null,i=Qu(e);const s=!i&&G(e);if(i||s){if(s&&!s.standalone)return!1;o=e}else{const u=e.ngModule;if(i=Qu(u),!i)return!1;o=u}const a=r.has(o);if(s){if(a)return!1;if(r.add(o),s.dependencies){const u="function"==typeof s.dependencies?s.dependencies():s.dependencies;for(const c of u)ds(c,t,n,r)}}else{if(!i)return!1;{if(null!=i.imports&&!a){let c;r.add(o);try{vt(i.imports,l=>{ds(l,t,n,r)&&(c||(c=[]),c.push(l))})}finally{}void 0!==c&&dl(c,t)}if(!a){const c=Gt(o)||(()=>new o);t.push({provide:o,useFactory:c,deps:H},{provide:ul,useValue:o,multi:!0},{provide:sl,useValue:()=>U(o),multi:!0})}const u=i.providers;null==u||a||vt(u,l=>{t.push(l)})}}return o!==e&&void 0!==e.providers}const DD=z({provide:String,useValue:z});function fs(e){return null!==e&&"object"==typeof e&&DD in e}function zt(e){return"function"==typeof e}const hs=new L("Set Injector scope."),Co={},wD={};let ps;function bo(){return void 0===ps&&(ps=new cl),ps}class vn{}class pl extends vn{constructor(t,n,r,o){super(),this.parent=n,this.source=r,this.scopes=o,this.records=new Map,this._ngOnDestroyHooks=new Set,this._onDestroyHooks=[],this._destroyed=!1,ms(t,s=>this.processProvider(s)),this.records.set(al,wn(void 0,this)),o.has("environment")&&this.records.set(vn,wn(void 0,this));const i=this.records.get(hs);null!=i&&"string"==typeof i.value&&this.scopes.add(i.value),this.injectorDefTypes=new Set(this.get(ul.multi,H,T.Self))}get destroyed(){return this._destroyed}destroy(){this.assertNotDestroyed(),this._destroyed=!0;try{for(const t of this._ngOnDestroyHooks)t.ngOnDestroy();for(const t of this._onDestroyHooks)t()}finally{this.records.clear(),this._ngOnDestroyHooks.clear(),this.injectorDefTypes.clear(),this._onDestroyHooks.length=0}}onDestroy(t){this._onDestroyHooks.push(t)}runInContext(t){this.assertNotDestroyed();const n=mn(this),r=$e(void 0);try{return t()}finally{mn(n),$e(r)}}get(t,n=ur,r=T.Default){this.assertNotDestroyed();const o=mn(this),i=$e(void 0);try{if(!(r&T.SkipSelf)){let a=this.records.get(t);if(void 0===a){const u=function ID(e){return"function"==typeof e||"object"==typeof e&&e instanceof L}(t)&&Wr(t);a=u&&this.injectableDefInScope(u)?wn(gs(t),Co):null,this.records.set(t,a)}if(null!=a)return this.hydrate(t,a)}return(r&T.Self?bo():this.parent).get(t,n=r&T.Optional&&n===ur?null:n)}catch(s){if("NullInjectorError"===s.name){if((s[go]=s[go]||[]).unshift(W(t)),o)throw s;return function Ry(e,t,n,r){const o=e[go];throw t[Vc]&&o.unshift(t[Vc]),e.message=function Oy(e,t,n,r=null){e=e&&"\n"===e.charAt(0)&&"\u0275"==e.charAt(1)?e.slice(2):e;let o=W(t);if(Array.isArray(t))o=t.map(W).join(" -> ");else if("object"==typeof t){let i=[];for(let s in t)if(t.hasOwnProperty(s)){let a=t[s];i.push(s+":"+("string"==typeof a?JSON.stringify(a):W(a)))}o=`{${i.join(", ")}}`}return`${n}${r?"("+r+")":""}[${o}]: ${e.replace(Ay,"\n  ")}`}("\n"+e.message,o,n,r),e.ngTokenPath=o,e[go]=null,e}(s,t,"R3InjectorError",this.source)}throw s}finally{$e(i),mn(o)}}resolveInjectorInitializers(){const t=mn(this),n=$e(void 0);try{const r=this.get(sl.multi,H,T.Self);for(const o of r)o()}finally{mn(t),$e(n)}}toString(){const t=[],n=this.records;for(const r of n.keys())t.push(W(r));return`R3Injector[${t.join(", ")}]`}assertNotDestroyed(){if(this._destroyed)throw new I(205,!1)}processProvider(t){let n=zt(t=S(t))?t:S(t&&t.provide);const r=function ED(e){return fs(e)?wn(void 0,e.useValue):wn(function gl(e,t,n){let r;if(zt(e)){const o=S(e);return Gt(o)||gs(o)}if(fs(e))r=()=>S(e.useValue);else if(function hl(e){return!(!e||!e.useFactory)}(e))r=()=>e.useFactory(...ns(e.deps||[]));else if(function fl(e){return!(!e||!e.useExisting)}(e))r=()=>U(S(e.useExisting));else{const o=S(e&&(e.useClass||e.provide));if(!function CD(e){return!!e.deps}(e))return Gt(o)||gs(o);r=()=>new o(...ns(e.deps))}return r}(e),Co)}(t);if(zt(t)||!0!==t.multi)this.records.get(n);else{let o=this.records.get(n);o||(o=wn(void 0,Co,!0),o.factory=()=>ns(o.multi),this.records.set(n,o)),n=t,o.multi.push(t)}this.records.set(n,r)}hydrate(t,n){return n.value===Co&&(n.value=wD,n.value=n.factory()),"object"==typeof n.value&&n.value&&function bD(e){return null!==e&&"object"==typeof e&&"function"==typeof e.ngOnDestroy}(n.value)&&this._ngOnDestroyHooks.add(n.value),n.value}injectableDefInScope(t){if(!t.providedIn)return!1;const n=S(t.providedIn);return"string"==typeof n?"any"===n||this.scopes.has(n):this.injectorDefTypes.has(n)}}function gs(e){const t=Wr(e),n=null!==t?t.factory:Gt(e);if(null!==n)return n;if(e instanceof L)throw new I(204,!1);if(e instanceof Function)return function _D(e){const t=e.length;if(t>0)throw function ar(e,t){const n=[];for(let r=0;r<e;r++)n.push(t);return n}(t,"?"),new I(204,!1);const n=function pm(e){const t=e&&(e[qr]||e[Zu]);if(t){const n=function gm(e){if(e.hasOwnProperty("name"))return e.name;const t=(""+e).match(/^function\s*([^\s(]+)/);return null===t?"":t[1]}(e);return console.warn(`DEPRECATED: DI is instantiating a token "${n}" that inherits its @Injectable decorator but does not provide one itself.\nThis will become an error in a future version of Angular. Please add @Injectable() to the "${n}" class.`),t}return null}(e);return null!==n?()=>n.factory(e):()=>new e}(e);throw new I(204,!1)}function wn(e,t,n=!1){return{factory:e,value:t,multi:n?[]:void 0}}function MD(e){return!!e.\u0275providers}function ms(e,t){for(const n of e)Array.isArray(n)?ms(n,t):MD(n)?ms(n.\u0275providers,t):t(n)}class ml{}class AD{resolveComponentFactory(t){throw function TD(e){const t=Error(`No component factory found for ${W(e)}. Did you add it to @NgModule.entryComponents?`);return t.ngComponent=e,t}(t)}}let Io=(()=>{class e{}return e.NULL=new AD,e})();function ND(){return _n(ce(),m())}function _n(e,t){return new En(We(e,t))}let En=(()=>{class e{constructor(n){this.nativeElement=n}}return e.__NG_ELEMENT_ID__=ND,e})();class Dl{}let PD=(()=>{class e{}return e.\u0275prov=Y({token:e,providedIn:"root",factory:()=>null}),e})();class ys{constructor(t){this.full=t,this.major=t.split(".")[0],this.minor=t.split(".")[1],this.patch=t.split(".").slice(2).join(".")}}const RD=new ys("14.2.10"),Ds={};function Cs(e){return e.ngOriginalError}class Cn{constructor(){this._console=console}handleError(t){const n=this._findOriginalError(t);this._console.error("ERROR",t),n&&this._console.error("ORIGINAL ERROR",n)}_findOriginalError(t){let n=t&&Cs(t);for(;n&&Cs(n);)n=Cs(n);return n||null}}const bs=new Map;let WD=0;const Ms="__ngContext__";function me(e,t){Ae(t)?(e[Ms]=t[20],function QD(e){bs.set(e[20],e)}(t)):e[Ms]=t}var Ne=(()=>((Ne=Ne||{})[Ne.Important=1]="Important",Ne[Ne.DashCase=2]="DashCase",Ne))();function Ts(e,t){return undefined(e,t)}function yr(e){const t=e[3];return Je(t)?t[3]:t}function As(e){return Pl(e[13])}function Ns(e){return Pl(e[4])}function Pl(e){for(;null!==e&&!Je(e);)e=e[4];return e}function In(e,t,n,r,o){if(null!=r){let i,s=!1;Je(r)?i=r:Ae(r)&&(s=!0,r=r[0]);const a=ie(r);0===e&&null!==n?null==o?jl(t,n,a):Wt(t,n,a,o||null,!0):1===e&&null!==n?Wt(t,n,a,o||null,!0):2===e?function Wl(e,t,n){const r=function Mo(e,t){return e.parentNode(t)}(e,t);r&&function _v(e,t,n,r){e.removeChild(t,n,r)}(e,r,t,n)}(t,a,s):3===e&&t.destroyNode(a),null!=i&&function bv(e,t,n,r,o){const i=n[7];i!==ie(n)&&In(t,e,r,i,o);for(let a=10;a<n.length;a++){const u=n[a];Dr(u[1],u,e,t,r,i)}}(t,e,i,n,o)}}function Fs(e,t,n){return e.createElement(t,n)}function Ol(e,t){const n=e[9],r=n.indexOf(t),o=t[3];512&t[2]&&(t[2]&=-513,Li(o,-1)),n.splice(r,1)}function Rs(e,t){if(!(128&t[2])){t[2]&=-65,t[2]|=128,function wv(e,t){let n;if(null!=e&&null!=(n=e.destroyHooks))for(let r=0;r<n.length;r+=2){const o=t[n[r]];if(!(o instanceof tr)){const i=n[r+1];if(Array.isArray(i))for(let s=0;s<i.length;s+=2){const a=o[i[s]],u=i[s+1];try{u.call(a)}finally{}}else try{i.call(o)}finally{}}}}(e,t),function vv(e,t){const n=e.cleanup,r=t[7];let o=-1;if(null!==n)for(let i=0;i<n.length-1;i+=2)if("string"==typeof n[i]){const s=n[i+1],a="function"==typeof s?s(t):ie(t[s]),u=r[o=n[i+2]],c=n[i+3];"boolean"==typeof c?a.removeEventListener(n[i],u,c):c>=0?r[o=c]():r[o=-c].unsubscribe(),i+=2}else{const s=r[o=n[i+1]];n[i].call(s)}if(null!==r){for(let i=o+1;i<r.length;i++)(0,r[i])();t[7]=null}}(e,t),1===t[1].type&&t[R].destroy();const n=t[17];if(null!==n&&Je(t[3])){n!==t[3]&&Ol(n,t);const r=t[19];null!==r&&r.detachView(e)}!function ZD(e){bs.delete(e[20])}(t)}}function kl(e,t,n){return function Vl(e,t,n){let r=t;for(;null!==r&&40&r.type;)r=(t=r).parent;if(null===r)return n[0];if(2&r.flags){const o=e.data[r.directiveStart].encapsulation;if(o===at.None||o===at.Emulated)return null}return We(r,n)}(e,t.parent,n)}function Wt(e,t,n,r,o){e.insertBefore(t,n,r,o)}function jl(e,t,n){e.appendChild(t,n)}function Bl(e,t,n,r,o){null!==r?Wt(e,t,n,r,o):jl(e,t,n)}let Ul=function $l(e,t,n){return 40&e.type?We(e,n):null};function So(e,t,n,r){const o=kl(e,r,t),i=t[R],a=function Hl(e,t,n){return Ul(e,t,n)}(r.parent||t[6],r,t);if(null!=o)if(Array.isArray(n))for(let u=0;u<n.length;u++)Bl(i,o,n[u],a,!1);else Bl(i,o,n,a,!1)}function zl(e,t){return null!==t?e[16][6].projection[t.projection]:null}function ks(e,t,n,r,o,i,s){for(;null!=n;){const a=r[n.index],u=n.type;if(s&&0===t&&(a&&me(ie(a),r),n.flags|=4),64!=(64&n.flags))if(8&u)ks(e,t,n.child,r,o,i,!1),In(t,e,o,a,i);else if(32&u){const c=Ts(n,r);let l;for(;l=c();)In(t,e,o,l,i);In(t,e,o,a,i)}else 16&u?ql(e,t,r,n,o,i):In(t,e,o,a,i);n=s?n.projectionNext:n.next}}function Dr(e,t,n,r,o,i){ks(n,r,e.firstChild,t,o,i,!1)}function ql(e,t,n,r,o,i){const s=n[16],u=s[6].projection[r.projection];if(Array.isArray(u))for(let c=0;c<u.length;c++)In(t,e,o,u[c],i);else ks(e,t,u,s[3],o,i,!0)}function Ql(e,t,n){e.setAttribute(t,"style",n)}function Vs(e,t,n){""===n?e.removeAttribute(t,"class"):e.setAttribute(t,"class",n)}function Zl(e,t,n){let r=e.length;for(;;){const o=e.indexOf(t,n);if(-1===o)return o;if(0===o||e.charCodeAt(o-1)<=32){const i=t.length;if(o+i===r||e.charCodeAt(o+i)<=32)return o}n=o+1}}const Yl="ng-template";function Mv(e,t,n){let r=0;for(;r<e.length;){let o=e[r++];if(n&&"class"===o){if(o=e[r],-1!==Zl(o.toLowerCase(),t,0))return!0}else if(1===o){for(;r<e.length&&"string"==typeof(o=e[r++]);)if(o.toLowerCase()===t)return!0;return!1}}return!1}function Kl(e){return 4===e.type&&e.value!==Yl}function Sv(e,t,n){return t===(4!==e.type||n?e.value:Yl)}function Tv(e,t,n){let r=4;const o=e.attrs||[],i=function xv(e){for(let t=0;t<e.length;t++)if(wc(e[t]))return t;return e.length}(o);let s=!1;for(let a=0;a<t.length;a++){const u=t[a];if("number"!=typeof u){if(!s)if(4&r){if(r=2|1&r,""!==u&&!Sv(e,u,n)||""===u&&1===t.length){if(et(r))return!1;s=!0}}else{const c=8&r?u:t[++a];if(8&r&&null!==e.attrs){if(!Mv(e.attrs,c,n)){if(et(r))return!1;s=!0}continue}const d=Av(8&r?"class":u,o,Kl(e),n);if(-1===d){if(et(r))return!1;s=!0;continue}if(""!==c){let f;f=d>i?"":o[d+1].toLowerCase();const h=8&r?f:null;if(h&&-1!==Zl(h,c,0)||2&r&&c!==f){if(et(r))return!1;s=!0}}}}else{if(!s&&!et(r)&&!et(u))return!1;if(s&&et(u))continue;s=!1,r=u|1&r}}return et(r)||s}function et(e){return 0==(1&e)}function Av(e,t,n,r){if(null===t)return-1;let o=0;if(r||!n){let i=!1;for(;o<t.length;){const s=t[o];if(s===e)return o;if(3===s||6===s)i=!0;else{if(1===s||2===s){let a=t[++o];for(;"string"==typeof a;)a=t[++o];continue}if(4===s)break;if(0===s){o+=4;continue}}o+=i?1:2}return-1}return function Fv(e,t){let n=e.indexOf(4);if(n>-1)for(n++;n<e.length;){const r=e[n];if("number"==typeof r)return-1;if(r===t)return n;n++}return-1}(t,e)}function Jl(e,t,n=!1){for(let r=0;r<t.length;r++)if(Tv(e,t[r],n))return!0;return!1}function Xl(e,t){return e?":not("+t.trim()+")":t}function Rv(e){let t=e[0],n=1,r=2,o="",i=!1;for(;n<e.length;){let s=e[n];if("string"==typeof s)if(2&r){const a=e[++n];o+="["+s+(a.length>0?'="'+a+'"':"")+"]"}else 8&r?o+="."+s:4&r&&(o+=" "+s);else""!==o&&!et(s)&&(t+=Xl(i,o),o=""),r=s,i=i||!et(r);n++}return""!==o&&(t+=Xl(i,o)),t}const x={};function od(e,t=null,n=null,r){const o=id(e,t,n,r);return o.resolveInjectorInitializers(),o}function id(e,t=null,n=null,r,o=new Set){const i=[n||H,yD(e)];return r=r||("object"==typeof e?void 0:W(e)),new pl(i,t||bo(),r||null,o)}let qt=(()=>{class e{static create(n,r){if(Array.isArray(n))return od({name:""},r,n,"");{const o=n.name??"";return od({name:o},n.parent,n.providers,o)}}}return e.THROW_IF_NOT_FOUND=ur,e.NULL=new cl,e.\u0275prov=Y({token:e,providedIn:"any",factory:()=>U(al)}),e.__NG_ELEMENT_ID__=-1,e})();function O(e,t=T.Default){const n=m();return null===n?U(e,t):Tc(ce(),n,S(e),t)}function Ed(e,t){const n=e.contentQueries;if(null!==n)for(let r=0;r<n.length;r+=2){const o=n[r],i=n[r+1];if(-1!==i){const s=e.data[i];Hi(o),s.contentQueries(2,t[i],i)}}}function Po(e,t,n,r,o,i,s,a,u,c,l){const d=t.blueprint.slice();return d[0]=o,d[2]=76|r,(null!==l||e&&1024&e[2])&&(d[2]|=1024),sc(d),d[3]=d[15]=e,d[8]=n,d[10]=s||e&&e[10],d[R]=a||e&&e[R],d[12]=u||e&&e[12]||null,d[9]=c||e&&e[9]||null,d[6]=i,d[20]=function qD(){return WD++}(),d[21]=l,d[16]=2==t.type?e[16]:d,d}function Sn(e,t,n,r,o){let i=e.data[t];if(null===i)i=function Xs(e,t,n,r,o){const i=cc(),s=ki(),u=e.data[t]=function Dw(e,t,n,r,o,i){return{type:n,index:r,insertBeforeIndex:null,injectorIndex:t?t.injectorIndex:-1,directiveStart:-1,directiveEnd:-1,directiveStylingLast:-1,propertyBindings:null,flags:0,providerIndexes:0,value:o,attrs:i,mergedAttrs:null,localNames:null,initialInputs:void 0,inputs:null,outputs:null,tViews:null,next:null,projectionNext:null,child:null,parent:t,projection:null,styles:null,stylesWithoutHost:null,residualStyles:void 0,classes:null,classesWithoutHost:null,residualClasses:void 0,classBindings:0,styleBindings:0}}(0,s?i:i&&i.parent,n,t,r,o);return null===e.firstChild&&(e.firstChild=u),null!==i&&(s?null==i.child&&null!==u.parent&&(i.child=u):null===i.next&&(i.next=u)),u}(e,t,n,r,o),function Wm(){return A.lFrame.inI18n}()&&(i.flags|=64);else if(64&i.type){i.type=n,i.value=r,i.attrs=o;const s=function er(){const e=A.lFrame,t=e.currentTNode;return e.isParent?t:t.parent}();i.injectorIndex=null===s?-1:s.injectorIndex}return ut(i,!0),i}function Tn(e,t,n,r){if(0===n)return-1;const o=t.length;for(let i=0;i<n;i++)t.push(r),e.blueprint.push(r),e.data.push(null);return o}function ea(e,t,n){$i(t);try{const r=e.viewQuery;null!==r&&ua(1,r,n);const o=e.template;null!==o&&Cd(e,t,o,1,n),e.firstCreatePass&&(e.firstCreatePass=!1),e.staticContentQueries&&Ed(e,t),e.staticViewQueries&&ua(2,e.viewQuery,n);const i=e.components;null!==i&&function gw(e,t){for(let n=0;n<t.length;n++)Rw(e,t[n])}(t,i)}catch(r){throw e.firstCreatePass&&(e.incompleteFirstPass=!0,e.firstCreatePass=!1),r}finally{t[2]&=-5,Ui()}}function Ro(e,t,n,r){const o=t[2];if(128!=(128&o)){$i(t);try{sc(t),function dc(e){return A.lFrame.bindingIndex=e}(e.bindingStartIndex),null!==n&&Cd(e,t,n,2,r);const s=3==(3&o);if(s){const c=e.preOrderCheckHooks;null!==c&&oo(t,c,null)}else{const c=e.preOrderHooks;null!==c&&io(t,c,0,null),Gi(t,0)}if(function Fw(e){for(let t=As(e);null!==t;t=Ns(t)){if(!t[2])continue;const n=t[9];for(let r=0;r<n.length;r++){const o=n[r],i=o[3];0==(512&o[2])&&Li(i,1),o[2]|=512}}}(t),function xw(e){for(let t=As(e);null!==t;t=Ns(t))for(let n=10;n<t.length;n++){const r=t[n],o=r[1];no(r)&&Ro(o,r,o.template,r[8])}}(t),null!==e.contentQueries&&Ed(e,t),s){const c=e.contentCheckHooks;null!==c&&oo(t,c)}else{const c=e.contentHooks;null!==c&&io(t,c,1),Gi(t,1)}!function hw(e,t){const n=e.hostBindingOpCodes;if(null!==n)try{for(let r=0;r<n.length;r++){const o=n[r];if(o<0)Pt(~o);else{const i=o,s=n[++r],a=n[++r];qm(s,i),a(2,t[i])}}}finally{Pt(-1)}}(e,t);const a=e.components;null!==a&&function pw(e,t){for(let n=0;n<t.length;n++)Pw(e,t[n])}(t,a);const u=e.viewQuery;if(null!==u&&ua(2,u,r),s){const c=e.viewCheckHooks;null!==c&&oo(t,c)}else{const c=e.viewHooks;null!==c&&io(t,c,2),Gi(t,2)}!0===e.firstUpdatePass&&(e.firstUpdatePass=!1),t[2]&=-41,512&t[2]&&(t[2]&=-513,Li(t[3],-1))}finally{Ui()}}}function Cd(e,t,n,r,o){const i=function Ce(){return A.lFrame.selectedIndex}(),s=2&r;try{Pt(-1),s&&t.length>Q&&function ed(e,t,n,r){if(!r)if(3==(3&t[2])){const i=e.preOrderCheckHooks;null!==i&&oo(t,i,n)}else{const i=e.preOrderHooks;null!==i&&io(t,i,0,n)}Pt(n)}(e,t,Q,!1),n(r,o)}finally{Pt(i)}}function Id(e){const t=e.tView;return null===t||t.incompleteFirstPass?e.tView=ra(1,null,e.template,e.decls,e.vars,e.directiveDefs,e.pipeDefs,e.viewQuery,e.schemas,e.consts):t}function ra(e,t,n,r,o,i,s,a,u,c){const l=Q+r,d=l+o,f=function mw(e,t){const n=[];for(let r=0;r<t;r++)n.push(r<e?null:x);return n}(l,d),h="function"==typeof c?c():c;return f[1]={type:e,blueprint:f,template:n,queries:null,viewQuery:a,declTNode:t,data:f.slice().fill(null,l),bindingStartIndex:l,expandoStartIndex:d,hostBindingOpCodes:null,firstCreatePass:!0,firstUpdatePass:!0,staticViewQueries:!1,staticContentQueries:!1,preOrderHooks:null,preOrderCheckHooks:null,contentHooks:null,contentCheckHooks:null,viewHooks:null,viewCheckHooks:null,destroyHooks:null,cleanup:null,contentQueries:null,components:null,directiveRegistry:"function"==typeof i?i():i,pipeRegistry:"function"==typeof s?s():s,firstChild:null,schemas:u,consts:h,incompleteFirstPass:!1}}function Sd(e,t,n){for(let r in e)if(e.hasOwnProperty(r)){const o=e[r];(n=null===n?{}:n).hasOwnProperty(r)?n[r].push(t,o):n[r]=[t,o]}return n}function Td(e,t){const r=t.directiveEnd,o=e.data,i=t.attrs,s=[];let a=null,u=null;for(let c=t.directiveStart;c<r;c++){const l=o[c],d=l.inputs,f=null===i||Kl(t)?null:Nw(d,i);s.push(f),a=Sd(d,c,a),u=Sd(l.outputs,c,u)}null!==a&&(a.hasOwnProperty("class")&&(t.flags|=16),a.hasOwnProperty("style")&&(t.flags|=32)),t.initialInputs=s,t.inputs=a,t.outputs=u}function Nd(e,t,n,r,o,i){const s=i.hostBindings;if(s){let a=e.hostBindingOpCodes;null===a&&(a=e.hostBindingOpCodes=[]);const u=~t.index;(function Ew(e){let t=e.length;for(;t>0;){const n=e[--t];if("number"==typeof n&&n<0)return n}return 0})(a)!=u&&a.push(u),a.push(r,o,s)}}function xd(e,t){null!==e.hostBindings&&e.hostBindings(1,t)}function Fd(e,t){t.flags|=2,(e.components||(e.components=[])).push(t.index)}function Sw(e,t,n){if(n){if(t.exportAs)for(let r=0;r<t.exportAs.length;r++)n[t.exportAs[r]]=e;Xe(t)&&(n[""]=e)}}function Pd(e,t,n){e.flags|=1,e.directiveStart=t,e.directiveEnd=t+n,e.providerIndexes=t}function Rd(e,t,n,r,o){e.data[r]=o;const i=o.factory||(o.factory=Gt(o.type)),s=new tr(i,Xe(o),O);e.blueprint[r]=s,n[r]=s,Nd(e,t,0,r,Tn(e,n,o.hostVars,x),o)}function Tw(e,t,n){const r=We(t,e),o=Id(n),i=e[10],s=Oo(e,Po(e,o,null,n.onPush?32:16,r,t,i,i.createRenderer(r,n),null,null,null));e[t.index]=s}function Aw(e,t,n,r,o,i){const s=i[t];if(null!==s){const a=r.setInput;for(let u=0;u<s.length;){const c=s[u++],l=s[u++],d=s[u++];null!==a?r.setInput(n,d,c,l):n[l]=d}}}function Nw(e,t){let n=null,r=0;for(;r<t.length;){const o=t[r];if(0!==o)if(5!==o){if("number"==typeof o)break;e.hasOwnProperty(o)&&(null===n&&(n=[]),n.push(o,e[o],t[r+1])),r+=2}else r+=2;else r+=4}return n}function Pw(e,t){const n=ke(t,e);if(no(n)){const r=n[1];48&n[2]?Ro(r,n,r.template,n[8]):n[5]>0&&sa(n)}}function sa(e){for(let r=As(e);null!==r;r=Ns(r))for(let o=10;o<r.length;o++){const i=r[o];if(no(i))if(512&i[2]){const s=i[1];Ro(s,i,s.template,i[8])}else i[5]>0&&sa(i)}const n=e[1].components;if(null!==n)for(let r=0;r<n.length;r++){const o=ke(n[r],e);no(o)&&o[5]>0&&sa(o)}}function Rw(e,t){const n=ke(t,e),r=n[1];(function Ow(e,t){for(let n=t.length;n<e.blueprint.length;n++)t.push(e.blueprint[n])})(r,n),ea(r,n,n[8])}function Oo(e,t){return e[13]?e[14][4]=t:e[13]=t,e[14]=t,t}function aa(e){for(;e;){e[2]|=32;const t=yr(e);if(bm(e)&&!t)return e;e=t}return null}function Lo(e,t,n,r=!0){const o=t[10];o.begin&&o.begin();try{Ro(e,t,e.template,n)}catch(s){throw r&&jd(t,s),s}finally{o.end&&o.end()}}function ua(e,t,n){Hi(0),t(e,n)}function Ld(e){return e[7]||(e[7]=[])}function kd(e){return e.cleanup||(e.cleanup=[])}function jd(e,t){const n=e[9],r=n?n.get(Cn,null):null;r&&r.handleError(t)}function ca(e,t,n,r,o){for(let i=0;i<n.length;){const s=n[i++],a=n[i++],u=t[s],c=e.data[s];null!==c.setInput?c.setInput(u,o,r,a):u[a]=o}}function ko(e,t,n){let r=n?e.styles:null,o=n?e.classes:null,i=0;if(null!==t)for(let s=0;s<t.length;s++){const a=t[s];"number"==typeof a?i=a:1==i?o=wi(o,a):2==i&&(r=wi(r,a+": "+t[++s]+";"))}n?e.styles=r:e.stylesWithoutHost=r,n?e.classes=o:e.classesWithoutHost=o}function Vo(e,t,n,r,o=!1){for(;null!==n;){const i=t[n.index];if(null!==i&&r.push(ie(i)),Je(i))for(let a=10;a<i.length;a++){const u=i[a],c=u[1].firstChild;null!==c&&Vo(u[1],u,c,r)}const s=n.type;if(8&s)Vo(e,t,n.child,r);else if(32&s){const a=Ts(n,t);let u;for(;u=a();)r.push(u)}else if(16&s){const a=zl(t,n);if(Array.isArray(a))r.push(...a);else{const u=yr(t[16]);Vo(u[1],u,a,r,!0)}}n=o?n.projectionNext:n.next}return r}class Lw extends class vr{constructor(t,n){this._lView=t,this._cdRefInjectingView=n,this._appRef=null,this._attachedToViewContainer=!1}get rootNodes(){const t=this._lView,n=t[1];return Vo(n,t,n.firstChild,[])}get context(){return this._lView[8]}set context(t){this._lView[8]=t}get destroyed(){return 128==(128&this._lView[2])}destroy(){if(this._appRef)this._appRef.detachView(this);else if(this._attachedToViewContainer){const t=this._lView[3];if(Je(t)){const n=t[8],r=n?n.indexOf(this):-1;r>-1&&(function Ps(e,t){if(e.length<=10)return;const n=10+t,r=e[n];if(r){const o=r[17];null!==o&&o!==e&&Ol(o,r),t>0&&(e[n-1][4]=r[4]);const i=ho(e,10+t);!function hv(e,t){Dr(e,t,t[R],2,null,null),t[0]=null,t[6]=null}(r[1],r);const s=i[19];null!==s&&s.detachView(i[1]),r[3]=null,r[4]=null,r[2]&=-65}return r}(t,r),ho(n,r))}this._attachedToViewContainer=!1}!function Ll(e,t){if(!(128&t[2])){const n=t[R];n.destroyNode&&Dr(e,t,n,3,null,null),function mv(e){let t=e[13];if(!t)return Rs(e[1],e);for(;t;){let n=null;if(Ae(t))n=t[13];else{const r=t[10];r&&(n=r)}if(!n){for(;t&&!t[4]&&t!==e;)Ae(t)&&Rs(t[1],t),t=t[3];null===t&&(t=e),Ae(t)&&Rs(t[1],t),n=t&&t[4]}t=n}}(t)}}(this._lView[1],this._lView)}onDestroy(t){!function Md(e,t,n,r){const o=Ld(t);null===n?o.push(r):(o.push(n),e.firstCreatePass&&kd(e).push(r,o.length-1))}(this._lView[1],this._lView,null,t)}markForCheck(){aa(this._cdRefInjectingView||this._lView)}detach(){this._lView[2]&=-65}reattach(){this._lView[2]|=64}detectChanges(){Lo(this._lView[1],this._lView,this.context)}checkNoChanges(){}attachToViewContainerRef(){if(this._appRef)throw new I(902,!1);this._attachedToViewContainer=!0}detachFromAppRef(){this._appRef=null,function gv(e,t){Dr(e,t,t[R],2,null,null)}(this._lView[1],this._lView)}attachToAppRef(t){if(this._attachedToViewContainer)throw new I(902,!1);this._appRef=t}}{constructor(t){super(t),this._view=t}detectChanges(){const t=this._view;Lo(t[1],t,t[8],!1)}checkNoChanges(){}get context(){return null}}class la extends Io{constructor(t){super(),this.ngModule=t}resolveComponentFactory(t){const n=G(t);return new wr(n,this.ngModule)}}function Bd(e){const t=[];for(let n in e)e.hasOwnProperty(n)&&t.push({propName:e[n],templateName:n});return t}class Vw{constructor(t,n){this.injector=t,this.parentInjector=n}get(t,n,r){const o=this.injector.get(t,Ds,r);return o!==Ds||n===Ds?o:this.parentInjector.get(t,n,r)}}class wr extends ml{constructor(t,n){super(),this.componentDef=t,this.ngModule=n,this.componentType=t.type,this.selector=function Ov(e){return e.map(Rv).join(",")}(t.selectors),this.ngContentSelectors=t.ngContentSelectors?t.ngContentSelectors:[],this.isBoundToModule=!!n}get inputs(){return Bd(this.componentDef.inputs)}get outputs(){return Bd(this.componentDef.outputs)}create(t,n,r,o){let i=(o=o||this.ngModule)instanceof vn?o:o?.injector;i&&null!==this.componentDef.getStandaloneInjector&&(i=this.componentDef.getStandaloneInjector(i)||i);const s=i?new Vw(t,i):t,a=s.get(Dl,null);if(null===a)throw new I(407,!1);const u=s.get(PD,null),c=a.createRenderer(null,this.componentDef),l=this.componentDef.selectors[0][0]||"div",d=r?function yw(e,t,n){return e.selectRootElement(t,n===at.ShadowDom)}(c,r,this.componentDef.encapsulation):Fs(c,l,function kw(e){const t=e.toLowerCase();return"svg"===t?"svg":"math"===t?"math":null}(l)),f=this.componentDef.onPush?288:272,h=ra(0,null,null,1,0,null,null,null,null,null),p=Po(null,h,null,f,null,null,a,c,u,s,null);let y,D;$i(p);try{const _=function Hw(e,t,n,r,o,i){const s=n[1];n[22]=e;const u=Sn(s,22,2,"#host",null),c=u.mergedAttrs=t.hostAttrs;null!==c&&(ko(u,c,!0),null!==e&&(so(o,e,c),null!==u.classes&&Vs(o,e,u.classes),null!==u.styles&&Ql(o,e,u.styles)));const l=r.createRenderer(e,t),d=Po(n,Id(t),null,t.onPush?32:16,n[22],u,r,l,i||null,null,null);return s.firstCreatePass&&(lo(rr(u,n),s,t.type),Fd(s,u),Pd(u,n.length,1)),Oo(n,d),n[22]=d}(d,this.componentDef,p,a,c);if(d)if(r)so(c,d,["ng-version",RD.full]);else{const{attrs:E,classes:g}=function Lv(e){const t=[],n=[];let r=1,o=2;for(;r<e.length;){let i=e[r];if("string"==typeof i)2===o?""!==i&&t.push(i,e[++r]):8===o&&n.push(i);else{if(!et(o))break;o=i}r++}return{attrs:t,classes:n}}(this.componentDef.selectors[0]);E&&so(c,d,E),g&&g.length>0&&Vs(c,d,g.join(" "))}if(D=function Oi(e,t){return e.data[t]}(h,Q),void 0!==n){const E=D.projection=[];for(let g=0;g<this.ngContentSelectors.length;g++){const C=n[g];E.push(null!=C?Array.from(C):null)}}y=function $w(e,t,n,r){const o=n[1],i=function _w(e,t,n){const r=ce();e.firstCreatePass&&(n.providersResolver&&n.providersResolver(n),Rd(e,r,t,Tn(e,t,1,null),n),Td(e,r));const o=or(t,e,r.directiveStart,r);me(o,t);const i=We(r,t);return i&&me(i,t),o}(o,n,t);if(e[8]=n[8]=i,null!==r)for(const a of r)a(i,t);if(t.contentQueries){const a=ce();t.contentQueries(1,i,a.directiveStart)}const s=ce();return!o.firstCreatePass||null===t.hostBindings&&null===t.hostAttrs||(Pt(s.index),Nd(n[1],s,0,s.directiveStart,s.directiveEnd,t),xd(t,i)),i}(_,this.componentDef,p,[Uw]),ea(h,p,null)}finally{Ui()}return new Bw(this.componentType,y,_n(D,p),p,D)}}class Bw extends class SD{}{constructor(t,n,r,o,i){super(),this.location=r,this._rootLView=o,this._tNode=i,this.instance=n,this.hostView=this.changeDetectorRef=new Lw(o),this.componentType=t}setInput(t,n){const r=this._tNode.inputs;let o;if(null!==r&&(o=r[t])){const i=this._rootLView;ca(i[1],i,o,t,n),function Ad(e,t){const n=ke(t,e);16&n[2]||(n[2]|=32)}(i,this._tNode.index)}}get injector(){return new ln(this._tNode,this._rootLView)}destroy(){this.hostView.destroy()}onDestroy(t){this.hostView.onDestroy(t)}}function Uw(){const e=ce();ro(m()[1],e)}function ha(e,t,n,r,o){const s=o?"class":"style";ca(e,n,t.inputs[s],s,r)}function Ho(e,t,n,r){const o=m(),i=V(),s=Q+e,a=o[R],u=o[s]=Fs(a,t,function ny(){return A.lFrame.currentNamespace}()),c=i.firstCreatePass?function i_(e,t,n,r,o,i,s){const a=t.consts,c=Sn(t,e,2,o,Ft(a,i));return function oa(e,t,n,r){let o=!1;if(uc()){const i=function Iw(e,t,n){const r=e.directiveRegistry;let o=null;if(r)for(let i=0;i<r.length;i++){const s=r[i];Jl(n,s.selectors,!1)&&(o||(o=[]),lo(rr(n,t),e,s.type),Xe(s)?(Fd(e,n),o.unshift(s)):o.push(s))}return o}(e,t,n),s=null===r?null:{"":-1};if(null!==i){o=!0,Pd(n,e.data.length,i.length);for(let l=0;l<i.length;l++){const d=i[l];d.providersResolver&&d.providersResolver(d)}let a=!1,u=!1,c=Tn(e,t,i.length,null);for(let l=0;l<i.length;l++){const d=i[l];n.mergedAttrs=ao(n.mergedAttrs,d.hostAttrs),Rd(e,n,t,c,d),Sw(c,d,s),null!==d.contentQueries&&(n.flags|=8),(null!==d.hostBindings||null!==d.hostAttrs||0!==d.hostVars)&&(n.flags|=128);const f=d.type.prototype;!a&&(f.ngOnChanges||f.ngOnInit||f.ngDoCheck)&&((e.preOrderHooks||(e.preOrderHooks=[])).push(n.index),a=!0),!u&&(f.ngOnChanges||f.ngDoCheck)&&((e.preOrderCheckHooks||(e.preOrderCheckHooks=[])).push(n.index),u=!0),c++}Td(e,n)}s&&function Mw(e,t,n){if(t){const r=e.localNames=[];for(let o=0;o<t.length;o+=2){const i=n[t[o+1]];if(null==i)throw new I(-301,!1);r.push(t[o],i)}}}(n,r,s)}return n.mergedAttrs=ao(n.mergedAttrs,n.attrs),o}(t,n,c,Ft(a,s)),null!==c.attrs&&ko(c,c.attrs,!1),null!==c.mergedAttrs&&ko(c,c.mergedAttrs,!0),null!==t.queries&&t.queries.elementStart(t,c),c}(s,i,o,0,t,n,r):i.data[s];ut(c,!0);const l=c.mergedAttrs;null!==l&&so(a,u,l);const d=c.classes;null!==d&&Vs(a,u,d);const f=c.styles;return null!==f&&Ql(a,u,f),64!=(64&c.flags)&&So(i,o,u,c),0===function Vm(){return A.lFrame.elementDepthCount}()&&me(u,o),function jm(){A.lFrame.elementDepthCount++}(),Xr(c)&&(function ta(e,t,n){!uc()||(function Cw(e,t,n,r){const o=n.directiveStart,i=n.directiveEnd;e.firstCreatePass||rr(n,t),me(r,t);const s=n.initialInputs;for(let a=o;a<i;a++){const u=e.data[a],c=Xe(u);c&&Tw(t,n,u);const l=or(t,e,a,n);me(l,t),null!==s&&Aw(0,a-o,l,u,0,s),c&&(ke(n.index,t)[8]=l)}}(e,t,n,We(n,t)),128==(128&n.flags)&&function bw(e,t,n){const r=n.directiveStart,o=n.directiveEnd,i=n.index,s=function Qm(){return A.lFrame.currentDirectiveIndex}();try{Pt(i);for(let a=r;a<o;a++){const u=e.data[a],c=t[a];ji(a),(null!==u.hostBindings||0!==u.hostVars||null!==u.hostAttrs)&&xd(u,c)}}finally{Pt(-1),ji(s)}}(e,t,n))}(i,o,c),function bd(e,t,n){if(Ni(t)){const o=t.directiveEnd;for(let i=t.directiveStart;i<o;i++){const s=e.data[i];s.contentQueries&&s.contentQueries(1,n[i],i)}}}(i,c,o)),null!==r&&function na(e,t,n=We){const r=t.localNames;if(null!==r){let o=t.index+1;for(let i=0;i<r.length;i+=2){const s=r[i+1],a=-1===s?n(t,e):e[s];e[o++]=a}}}(o,c),Ho}function $o(){let e=ce();ki()?function Vi(){A.lFrame.isParent=!1}():(e=e.parent,ut(e,!1));const t=e;!function Bm(){A.lFrame.elementDepthCount--}();const n=V();return n.firstCreatePass&&(ro(n,e),Ni(e)&&n.queries.elementEnd(e)),null!=t.classesWithoutHost&&function ay(e){return 0!=(16&e.flags)}(t)&&ha(n,t,m(),t.classesWithoutHost,!0),null!=t.stylesWithoutHost&&function uy(e){return 0!=(32&e.flags)}(t)&&ha(n,t,m(),t.stylesWithoutHost,!1),$o}function ma(e){return!!e&&"function"==typeof e.then}const u_=function nf(e){return!!e&&"function"==typeof e.subscribe};function ya(e,t,n,r){const o=m(),i=V(),s=ce();return function of(e,t,n,r,o,i,s,a){const u=Xr(r),l=e.firstCreatePass&&kd(e),d=t[8],f=Ld(t);let h=!0;if(3&r.type||a){const D=We(r,t),_=a?a(D):D,E=f.length,g=a?j=>a(ie(j[r.index])):r.index;let C=null;if(!a&&u&&(C=function c_(e,t,n,r){const o=e.cleanup;if(null!=o)for(let i=0;i<o.length-1;i+=2){const s=o[i];if(s===n&&o[i+1]===r){const a=t[7],u=o[i+2];return a.length>u?a[u]:null}"string"==typeof s&&(i+=2)}return null}(e,t,o,r.index)),null!==C)(C.__ngLastListenerFn__||C).__ngNextListenerFn__=i,C.__ngLastListenerFn__=i,h=!1;else{i=af(r,t,d,i,!1);const j=n.listen(_,o,i);f.push(i,j),l&&l.push(o,g,E,E+1)}}else i=af(r,t,d,i,!1);const p=r.outputs;let y;if(h&&null!==p&&(y=p[o])){const D=y.length;if(D)for(let _=0;_<D;_+=2){const J=t[y[_]][y[_+1]].subscribe(i),Jt=f.length;f.push(i,J),l&&l.push(o,r.index,Jt,-(Jt+1))}}}(i,o,o[R],s,e,t,0,r),ya}function sf(e,t,n,r){try{return!1!==n(r)}catch(o){return jd(e,o),!1}}function af(e,t,n,r,o){return function i(s){if(s===Function)return r;aa(2&e.flags?ke(e.index,t):t);let u=sf(t,0,r,s),c=i.__ngNextListenerFn__;for(;c;)u=sf(t,0,c,s)&&u,c=c.__ngNextListenerFn__;return o&&!1===u&&(s.preventDefault(),s.returnValue=!1),u}}const Bn="en-US";let th=Bn;class Hn{}class Sh extends Hn{constructor(t,n){super(),this._parent=n,this._bootstrapComponents=[],this.destroyCbs=[],this.componentFactoryResolver=new la(this);const r=function Oe(e,t){const n=e[Ku]||null;if(!n&&!0===t)throw new Error(`Type ${W(e)} does not have '\u0275mod' property.`);return n}(t);this._bootstrapComponents=function _t(e){return e instanceof Function?e():e}(r.bootstrap),this._r3Injector=id(t,n,[{provide:Hn,useValue:this},{provide:Io,useValue:this.componentFactoryResolver}],W(t),new Set(["environment"])),this._r3Injector.resolveInjectorInitializers(),this.instance=this._r3Injector.get(t)}get injector(){return this._r3Injector}destroy(){const t=this._r3Injector;!t.destroyed&&t.destroy(),this.destroyCbs.forEach(n=>n()),this.destroyCbs=null}onDestroy(t){this.destroyCbs.push(t)}}class Sa extends class KE{}{constructor(t){super(),this.moduleType=t}create(t){return new Sh(this.moduleType,t)}}function Aa(e){return t=>{setTimeout(e,void 0,t)}}const bt=class SC extends Di{constructor(t=!1){super(),this.__isAsync=t}emit(t){super.next(t)}subscribe(t,n,r){let o=t,i=n||(()=>null),s=r;if(t&&"object"==typeof t){const u=t;o=u.next?.bind(u),i=u.error?.bind(u),s=u.complete?.bind(u)}this.__isAsync&&(i=Aa(i),o&&(o=Aa(o)),s&&(s=Aa(s)));const a=super.subscribe({next:o,error:i,complete:s});return t instanceof re&&t.add(a),a}};function Yo(...e){}const fp=new L("Application Initializer");let Ko=(()=>{class e{constructor(n){this.appInits=n,this.resolve=Yo,this.reject=Yo,this.initialized=!1,this.done=!1,this.donePromise=new Promise((r,o)=>{this.resolve=r,this.reject=o})}runInitializers(){if(this.initialized)return;const n=[],r=()=>{this.done=!0,this.resolve()};if(this.appInits)for(let o=0;o<this.appInits.length;o++){const i=this.appInits[o]();if(ma(i))n.push(i);else if(u_(i)){const s=new Promise((a,u)=>{i.subscribe({complete:a,error:u})});n.push(s)}}Promise.all(n).then(()=>{r()}).catch(o=>{this.reject(o)}),0===n.length&&r(),this.initialized=!0}}return e.\u0275fac=function(n){return new(n||e)(U(fp,8))},e.\u0275prov=Y({token:e,factory:e.\u0275fac,providedIn:"root"}),e})();const Fr=new L("AppId",{providedIn:"root",factory:function hp(){return`${Ha()}${Ha()}${Ha()}`}});function Ha(){return String.fromCharCode(97+Math.floor(25*Math.random()))}const pp=new L("Platform Initializer"),gp=new L("Platform ID",{providedIn:"platform",factory:()=>"unknown"}),fb=new L("appBootstrapListener"),Mt=new L("LocaleId",{providedIn:"root",factory:()=>function Fy(e,t=T.Default){return"number"!=typeof t&&(t=0|(t.optional&&8)|(t.host&&1)|(t.self&&2)|(t.skipSelf&&4)),U(e,t)}(Mt,T.Optional|T.SkipSelf)||function hb(){return typeof $localize<"u"&&$localize.locale||Bn}()}),Db=(()=>Promise.resolve(0))();function $a(e){typeof Zone>"u"?Db.then(()=>{e&&e.apply(null,null)}):Zone.current.scheduleMicroTask("scheduleMicrotask",e)}class De{constructor({enableLongStackTrace:t=!1,shouldCoalesceEventChangeDetection:n=!1,shouldCoalesceRunChangeDetection:r=!1}){if(this.hasPendingMacrotasks=!1,this.hasPendingMicrotasks=!1,this.isStable=!0,this.onUnstable=new bt(!1),this.onMicrotaskEmpty=new bt(!1),this.onStable=new bt(!1),this.onError=new bt(!1),typeof Zone>"u")throw new I(908,!1);Zone.assertZonePatched();const o=this;if(o._nesting=0,o._outer=o._inner=Zone.current,Zone.AsyncStackTaggingZoneSpec){const i=Zone.AsyncStackTaggingZoneSpec;o._inner=o._inner.fork(new i("Angular"))}Zone.TaskTrackingZoneSpec&&(o._inner=o._inner.fork(new Zone.TaskTrackingZoneSpec)),t&&Zone.longStackTraceZoneSpec&&(o._inner=o._inner.fork(Zone.longStackTraceZoneSpec)),o.shouldCoalesceEventChangeDetection=!r&&n,o.shouldCoalesceRunChangeDetection=r,o.lastRequestAnimationFrameId=-1,o.nativeRequestAnimationFrame=function vb(){let e=q.requestAnimationFrame,t=q.cancelAnimationFrame;if(typeof Zone<"u"&&e&&t){const n=e[Zone.__symbol__("OriginalDelegate")];n&&(e=n);const r=t[Zone.__symbol__("OriginalDelegate")];r&&(t=r)}return{nativeRequestAnimationFrame:e,nativeCancelAnimationFrame:t}}().nativeRequestAnimationFrame,function Eb(e){const t=()=>{!function _b(e){e.isCheckStableRunning||-1!==e.lastRequestAnimationFrameId||(e.lastRequestAnimationFrameId=e.nativeRequestAnimationFrame.call(q,()=>{e.fakeTopEventTask||(e.fakeTopEventTask=Zone.root.scheduleEventTask("fakeTopEventTask",()=>{e.lastRequestAnimationFrameId=-1,Ga(e),e.isCheckStableRunning=!0,Ua(e),e.isCheckStableRunning=!1},void 0,()=>{},()=>{})),e.fakeTopEventTask.invoke()}),Ga(e))}(e)};e._inner=e._inner.fork({name:"angular",properties:{isAngularZone:!0},onInvokeTask:(n,r,o,i,s,a)=>{try{return Dp(e),n.invokeTask(o,i,s,a)}finally{(e.shouldCoalesceEventChangeDetection&&"eventTask"===i.type||e.shouldCoalesceRunChangeDetection)&&t(),vp(e)}},onInvoke:(n,r,o,i,s,a,u)=>{try{return Dp(e),n.invoke(o,i,s,a,u)}finally{e.shouldCoalesceRunChangeDetection&&t(),vp(e)}},onHasTask:(n,r,o,i)=>{n.hasTask(o,i),r===o&&("microTask"==i.change?(e._hasPendingMicrotasks=i.microTask,Ga(e),Ua(e)):"macroTask"==i.change&&(e.hasPendingMacrotasks=i.macroTask))},onHandleError:(n,r,o,i)=>(n.handleError(o,i),e.runOutsideAngular(()=>e.onError.emit(i)),!1)})}(o)}static isInAngularZone(){return typeof Zone<"u"&&!0===Zone.current.get("isAngularZone")}static assertInAngularZone(){if(!De.isInAngularZone())throw new I(909,!1)}static assertNotInAngularZone(){if(De.isInAngularZone())throw new I(909,!1)}run(t,n,r){return this._inner.run(t,n,r)}runTask(t,n,r,o){const i=this._inner,s=i.scheduleEventTask("NgZoneEvent: "+o,t,wb,Yo,Yo);try{return i.runTask(s,n,r)}finally{i.cancelTask(s)}}runGuarded(t,n,r){return this._inner.runGuarded(t,n,r)}runOutsideAngular(t){return this._outer.run(t)}}const wb={};function Ua(e){if(0==e._nesting&&!e.hasPendingMicrotasks&&!e.isStable)try{e._nesting++,e.onMicrotaskEmpty.emit(null)}finally{if(e._nesting--,!e.hasPendingMicrotasks)try{e.runOutsideAngular(()=>e.onStable.emit(null))}finally{e.isStable=!0}}}function Ga(e){e.hasPendingMicrotasks=!!(e._hasPendingMicrotasks||(e.shouldCoalesceEventChangeDetection||e.shouldCoalesceRunChangeDetection)&&-1!==e.lastRequestAnimationFrameId)}function Dp(e){e._nesting++,e.isStable&&(e.isStable=!1,e.onUnstable.emit(null))}function vp(e){e._nesting--,Ua(e)}class Cb{constructor(){this.hasPendingMicrotasks=!1,this.hasPendingMacrotasks=!1,this.isStable=!0,this.onUnstable=new bt,this.onMicrotaskEmpty=new bt,this.onStable=new bt,this.onError=new bt}run(t,n,r){return t.apply(n,r)}runGuarded(t,n,r){return t.apply(n,r)}runOutsideAngular(t){return t()}runTask(t,n,r,o){return t.apply(n,r)}}const wp=new L(""),Jo=new L("");let qa,za=(()=>{class e{constructor(n,r,o){this._ngZone=n,this.registry=r,this._pendingCount=0,this._isZoneStable=!0,this._didWork=!1,this._callbacks=[],this.taskTrackingZone=null,qa||(function bb(e){qa=e}(o),o.addToWindow(r)),this._watchAngularEvents(),n.run(()=>{this.taskTrackingZone=typeof Zone>"u"?null:Zone.current.get("TaskTrackingZone")})}_watchAngularEvents(){this._ngZone.onUnstable.subscribe({next:()=>{this._didWork=!0,this._isZoneStable=!1}}),this._ngZone.runOutsideAngular(()=>{this._ngZone.onStable.subscribe({next:()=>{De.assertNotInAngularZone(),$a(()=>{this._isZoneStable=!0,this._runCallbacksIfReady()})}})})}increasePendingRequestCount(){return this._pendingCount+=1,this._didWork=!0,this._pendingCount}decreasePendingRequestCount(){if(this._pendingCount-=1,this._pendingCount<0)throw new Error("pending async requests below zero");return this._runCallbacksIfReady(),this._pendingCount}isStable(){return this._isZoneStable&&0===this._pendingCount&&!this._ngZone.hasPendingMacrotasks}_runCallbacksIfReady(){if(this.isStable())$a(()=>{for(;0!==this._callbacks.length;){let n=this._callbacks.pop();clearTimeout(n.timeoutId),n.doneCb(this._didWork)}this._didWork=!1});else{let n=this.getPendingTasks();this._callbacks=this._callbacks.filter(r=>!r.updateCb||!r.updateCb(n)||(clearTimeout(r.timeoutId),!1)),this._didWork=!0}}getPendingTasks(){return this.taskTrackingZone?this.taskTrackingZone.macroTasks.map(n=>({source:n.source,creationLocation:n.creationLocation,data:n.data})):[]}addCallback(n,r,o){let i=-1;r&&r>0&&(i=setTimeout(()=>{this._callbacks=this._callbacks.filter(s=>s.timeoutId!==i),n(this._didWork,this.getPendingTasks())},r)),this._callbacks.push({doneCb:n,timeoutId:i,updateCb:o})}whenStable(n,r,o){if(o&&!this.taskTrackingZone)throw new Error('Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?');this.addCallback(n,r,o),this._runCallbacksIfReady()}getPendingRequestCount(){return this._pendingCount}registerApplication(n){this.registry.registerApplication(n,this)}unregisterApplication(n){this.registry.unregisterApplication(n)}findProviders(n,r,o){return[]}}return e.\u0275fac=function(n){return new(n||e)(U(De),U(Wa),U(Jo))},e.\u0275prov=Y({token:e,factory:e.\u0275fac}),e})(),Wa=(()=>{class e{constructor(){this._applications=new Map}registerApplication(n,r){this._applications.set(n,r)}unregisterApplication(n){this._applications.delete(n)}unregisterAllApplications(){this._applications.clear()}getTestability(n){return this._applications.get(n)||null}getAllTestabilities(){return Array.from(this._applications.values())}getAllRootElements(){return Array.from(this._applications.keys())}findTestabilityInTree(n,r=!0){return qa?.findTestabilityInTree(this,n,r)??null}}return e.\u0275fac=function(n){return new(n||e)},e.\u0275prov=Y({token:e,factory:e.\u0275fac,providedIn:"platform"}),e})(),Vt=null;const _p=new L("AllowMultipleToken"),Qa=new L("PlatformDestroyListeners");function Cp(e,t,n=[]){const r=`Platform: ${t}`,o=new L(r);return(i=[])=>{let s=Za();if(!s||s.injector.get(_p,!1)){const a=[...n,...i,{provide:o,useValue:!0}];e?e(a):function Sb(e){if(Vt&&!Vt.get(_p,!1))throw new I(400,!1);Vt=e;const t=e.get(Ip);(function Ep(e){const t=e.get(pp,null);t&&t.forEach(n=>n())})(e)}(function bp(e=[],t){return qt.create({name:t,providers:[{provide:hs,useValue:"platform"},{provide:Qa,useValue:new Set([()=>Vt=null])},...e]})}(a,r))}return function Ab(e){const t=Za();if(!t)throw new I(401,!1);return t}()}}function Za(){return Vt?.get(Ip)??null}let Ip=(()=>{class e{constructor(n){this._injector=n,this._modules=[],this._destroyListeners=[],this._destroyed=!1}bootstrapModuleFactory(n,r){const o=function Sp(e,t){let n;return n="noop"===e?new Cb:("zone.js"===e?void 0:e)||new De(t),n}(r?.ngZone,function Mp(e){return{enableLongStackTrace:!1,shouldCoalesceEventChangeDetection:!(!e||!e.ngZoneEventCoalescing)||!1,shouldCoalesceRunChangeDetection:!(!e||!e.ngZoneRunCoalescing)||!1}}(r)),i=[{provide:De,useValue:o}];return o.run(()=>{const s=qt.create({providers:i,parent:this.injector,name:n.moduleType.name}),a=n.create(s),u=a.injector.get(Cn,null);if(!u)throw new I(402,!1);return o.runOutsideAngular(()=>{const c=o.onError.subscribe({next:l=>{u.handleError(l)}});a.onDestroy(()=>{Xo(this._modules,a),c.unsubscribe()})}),function Tp(e,t,n){try{const r=n();return ma(r)?r.catch(o=>{throw t.runOutsideAngular(()=>e.handleError(o)),o}):r}catch(r){throw t.runOutsideAngular(()=>e.handleError(r)),r}}(u,o,()=>{const c=a.injector.get(Ko);return c.runInitializers(),c.donePromise.then(()=>(function nh(e){Re(e,"Expected localeId to be defined"),"string"==typeof e&&(th=e.toLowerCase().replace(/_/g,"-"))}(a.injector.get(Mt,Bn)||Bn),this._moduleDoBootstrap(a),a))})})}bootstrapModule(n,r=[]){const o=Ap({},r);return function Ib(e,t,n){const r=new Sa(n);return Promise.resolve(r)}(0,0,n).then(i=>this.bootstrapModuleFactory(i,o))}_moduleDoBootstrap(n){const r=n.injector.get(Ya);if(n._bootstrapComponents.length>0)n._bootstrapComponents.forEach(o=>r.bootstrap(o));else{if(!n.instance.ngDoBootstrap)throw new I(403,!1);n.instance.ngDoBootstrap(r)}this._modules.push(n)}onDestroy(n){this._destroyListeners.push(n)}get injector(){return this._injector}destroy(){if(this._destroyed)throw new I(404,!1);this._modules.slice().forEach(r=>r.destroy()),this._destroyListeners.forEach(r=>r());const n=this._injector.get(Qa,null);n&&(n.forEach(r=>r()),n.clear()),this._destroyed=!0}get destroyed(){return this._destroyed}}return e.\u0275fac=function(n){return new(n||e)(U(qt))},e.\u0275prov=Y({token:e,factory:e.\u0275fac,providedIn:"platform"}),e})();function Ap(e,t){return Array.isArray(t)?t.reduce(Ap,e):{...e,...t}}let Ya=(()=>{class e{constructor(n,r,o){this._zone=n,this._injector=r,this._exceptionHandler=o,this._bootstrapListeners=[],this._views=[],this._runningTick=!1,this._stable=!0,this._destroyed=!1,this._destroyListeners=[],this.componentTypes=[],this.components=[],this._onMicrotaskEmptySubscription=this._zone.onMicrotaskEmpty.subscribe({next:()=>{this._zone.run(()=>{this.tick()})}});const i=new Se(a=>{this._stable=this._zone.isStable&&!this._zone.hasPendingMacrotasks&&!this._zone.hasPendingMicrotasks,this._zone.runOutsideAngular(()=>{a.next(this._stable),a.complete()})}),s=new Se(a=>{let u;this._zone.runOutsideAngular(()=>{u=this._zone.onStable.subscribe(()=>{De.assertNotInAngularZone(),$a(()=>{!this._stable&&!this._zone.hasPendingMacrotasks&&!this._zone.hasPendingMicrotasks&&(this._stable=!0,a.next(!0))})})});const c=this._zone.onUnstable.subscribe(()=>{De.assertInAngularZone(),this._stable&&(this._stable=!1,this._zone.runOutsideAngular(()=>{a.next(!1)}))});return()=>{u.unsubscribe(),c.unsubscribe()}});this.isStable=function Kg(...e){let t=Number.POSITIVE_INFINITY,n=null,r=e[e.length-1];return function Ag(e){return e&&"function"==typeof e.schedule}(r)?(n=e.pop(),e.length>1&&"number"==typeof e[e.length-1]&&(t=e.pop())):"number"==typeof r&&(t=e.pop()),null===n&&1===e.length&&e[0]instanceof Se?e[0]:function Zg(e=Number.POSITIVE_INFINITY){return zu(Ou,e)}(t)(function Yg(e,t){return t?Gu(e,t):new Se(Bu(e))}(e,n))}(i,s.pipe(function am(){return e=>Wu()(function om(e,t){return function(r){let o;if(o="function"==typeof e?e:function(){return e},"function"==typeof t)return r.lift(new im(o,t));const i=Object.create(r,tm);return i.source=r,i.subjectFactory=o,i}}(sm)(e))}()))}get destroyed(){return this._destroyed}get injector(){return this._injector}bootstrap(n,r){const o=n instanceof ml;if(!this._injector.get(Ko).done)throw!o&&function Zn(e){const t=G(e)||we(e)||_e(e);return null!==t&&t.standalone}(n),new I(405,false);let s;s=o?n:this._injector.get(Io).resolveComponentFactory(n),this.componentTypes.push(s.componentType);const a=function Mb(e){return e.isBoundToModule}(s)?void 0:this._injector.get(Hn),c=s.create(qt.NULL,[],r||s.selector,a),l=c.location.nativeElement,d=c.injector.get(wp,null);return d?.registerApplication(l),c.onDestroy(()=>{this.detachView(c.hostView),Xo(this.components,c),d?.unregisterApplication(l)}),this._loadComponent(c),c}tick(){if(this._runningTick)throw new I(101,!1);try{this._runningTick=!0;for(let n of this._views)n.detectChanges()}catch(n){this._zone.runOutsideAngular(()=>this._exceptionHandler.handleError(n))}finally{this._runningTick=!1}}attachView(n){const r=n;this._views.push(r),r.attachToAppRef(this)}detachView(n){const r=n;Xo(this._views,r),r.detachFromAppRef()}_loadComponent(n){this.attachView(n.hostView),this.tick(),this.components.push(n),this._injector.get(fb,[]).concat(this._bootstrapListeners).forEach(o=>o(n))}ngOnDestroy(){if(!this._destroyed)try{this._destroyListeners.forEach(n=>n()),this._views.slice().forEach(n=>n.destroy()),this._onMicrotaskEmptySubscription.unsubscribe()}finally{this._destroyed=!0,this._views=[],this._bootstrapListeners=[],this._destroyListeners=[]}}onDestroy(n){return this._destroyListeners.push(n),()=>Xo(this._destroyListeners,n)}destroy(){if(this._destroyed)throw new I(406,!1);const n=this._injector;n.destroy&&!n.destroyed&&n.destroy()}get viewCount(){return this._views.length}warnIfDestroyed(){}}return e.\u0275fac=function(n){return new(n||e)(U(De),U(vn),U(Cn))},e.\u0275prov=Y({token:e,factory:e.\u0275fac,providedIn:"root"}),e})();function Xo(e,t){const n=e.indexOf(t);n>-1&&e.splice(n,1)}let xp=!0;const qb=Cp(null,"core",[]);let Qb=(()=>{class e{constructor(n){}}return e.\u0275fac=function(n){return new(n||e)(U(Ya))},e.\u0275mod=Qn({type:e}),e.\u0275inj=en({}),e})(),ri=null;function Rr(){return ri}const Tt=new L("DocumentToken");let mM=(()=>{class e{}return e.\u0275fac=function(n){return new(n||e)},e.\u0275mod=Qn({type:e}),e.\u0275inj=en({}),e})();class mu extends class jM extends class Kb{}{constructor(){super(...arguments),this.supportsDOMEvents=!0}}{static makeCurrent(){!function Yb(e){ri||(ri=e)}(new mu)}onAndCancel(t,n,r){return t.addEventListener(n,r,!1),()=>{t.removeEventListener(n,r,!1)}}dispatchEvent(t,n){t.dispatchEvent(n)}remove(t){t.parentNode&&t.parentNode.removeChild(t)}createElement(t,n){return(n=n||this.getDefaultDocument()).createElement(t)}createHtmlDocument(){return document.implementation.createHTMLDocument("fakeTitle")}getDefaultDocument(){return document}isElementNode(t){return t.nodeType===Node.ELEMENT_NODE}isShadowRoot(t){return t instanceof DocumentFragment}getGlobalEventTarget(t,n){return"window"===n?window:"document"===n?t:"body"===n?t.body:null}getBaseHref(t){const n=function BM(){return Vr=Vr||document.querySelector("base"),Vr?Vr.getAttribute("href"):null}();return null==n?null:function HM(e){pi=pi||document.createElement("a"),pi.setAttribute("href",e);const t=pi.pathname;return"/"===t.charAt(0)?t:`/${t}`}(n)}resetBaseElement(){Vr=null}getUserAgent(){return window.navigator.userAgent}getCookie(t){return function LI(e,t){t=encodeURIComponent(t);for(const n of e.split(";")){const r=n.indexOf("="),[o,i]=-1==r?[n,""]:[n.slice(0,r),n.slice(r+1)];if(o.trim()===t)return decodeURIComponent(i)}return null}(document.cookie,t)}}let pi,Vr=null;const ug=new L("TRANSITION_ID"),UM=[{provide:fp,useFactory:function $M(e,t,n){return()=>{n.get(Ko).donePromise.then(()=>{const r=Rr(),o=t.querySelectorAll(`style[ng-transition="${e}"]`);for(let i=0;i<o.length;i++)r.remove(o[i])})}},deps:[ug,Tt,qt],multi:!0}];let zM=(()=>{class e{build(){return new XMLHttpRequest}}return e.\u0275fac=function(n){return new(n||e)},e.\u0275prov=Y({token:e,factory:e.\u0275fac}),e})();const gi=new L("EventManagerPlugins");let mi=(()=>{class e{constructor(n,r){this._zone=r,this._eventNameToPlugin=new Map,n.forEach(o=>o.manager=this),this._plugins=n.slice().reverse()}addEventListener(n,r,o){return this._findPluginFor(r).addEventListener(n,r,o)}addGlobalEventListener(n,r,o){return this._findPluginFor(r).addGlobalEventListener(n,r,o)}getZone(){return this._zone}_findPluginFor(n){const r=this._eventNameToPlugin.get(n);if(r)return r;const o=this._plugins;for(let i=0;i<o.length;i++){const s=o[i];if(s.supports(n))return this._eventNameToPlugin.set(n,s),s}throw new Error(`No event manager plugin found for event ${n}`)}}return e.\u0275fac=function(n){return new(n||e)(U(gi),U(De))},e.\u0275prov=Y({token:e,factory:e.\u0275fac}),e})();class cg{constructor(t){this._doc=t}addGlobalEventListener(t,n,r){const o=Rr().getGlobalEventTarget(this._doc,t);if(!o)throw new Error(`Unsupported event target ${o} for event ${n}`);return this.addEventListener(o,n,r)}}let lg=(()=>{class e{constructor(){this._stylesSet=new Set}addStyles(n){const r=new Set;n.forEach(o=>{this._stylesSet.has(o)||(this._stylesSet.add(o),r.add(o))}),this.onStylesAdded(r)}onStylesAdded(n){}getAllStyles(){return Array.from(this._stylesSet)}}return e.\u0275fac=function(n){return new(n||e)},e.\u0275prov=Y({token:e,factory:e.\u0275fac}),e})(),jr=(()=>{class e extends lg{constructor(n){super(),this._doc=n,this._hostNodes=new Map,this._hostNodes.set(n.head,[])}_addStylesToHost(n,r,o){n.forEach(i=>{const s=this._doc.createElement("style");s.textContent=i,o.push(r.appendChild(s))})}addHost(n){const r=[];this._addStylesToHost(this._stylesSet,n,r),this._hostNodes.set(n,r)}removeHost(n){const r=this._hostNodes.get(n);r&&r.forEach(dg),this._hostNodes.delete(n)}onStylesAdded(n){this._hostNodes.forEach((r,o)=>{this._addStylesToHost(n,o,r)})}ngOnDestroy(){this._hostNodes.forEach(n=>n.forEach(dg))}}return e.\u0275fac=function(n){return new(n||e)(U(Tt))},e.\u0275prov=Y({token:e,factory:e.\u0275fac}),e})();function dg(e){Rr().remove(e)}const yu={svg:"http://www.w3.org/2000/svg",xhtml:"http://www.w3.org/1999/xhtml",xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/",math:"http://www.w3.org/1998/MathML/"},Du=/%COMP%/g;function yi(e,t,n){for(let r=0;r<t.length;r++){let o=t[r];Array.isArray(o)?yi(e,o,n):(o=o.replace(Du,e),n.push(o))}return n}function pg(e){return t=>{if("__ngUnwrap__"===t)return e;!1===e(t)&&(t.preventDefault(),t.returnValue=!1)}}let vu=(()=>{class e{constructor(n,r,o){this.eventManager=n,this.sharedStylesHost=r,this.appId=o,this.rendererByCompId=new Map,this.defaultRenderer=new wu(n)}createRenderer(n,r){if(!n||!r)return this.defaultRenderer;switch(r.encapsulation){case at.Emulated:{let o=this.rendererByCompId.get(r.id);return o||(o=new KM(this.eventManager,this.sharedStylesHost,r,this.appId),this.rendererByCompId.set(r.id,o)),o.applyToHost(n),o}case 1:case at.ShadowDom:return new JM(this.eventManager,this.sharedStylesHost,n,r);default:if(!this.rendererByCompId.has(r.id)){const o=yi(r.id,r.styles,[]);this.sharedStylesHost.addStyles(o),this.rendererByCompId.set(r.id,this.defaultRenderer)}return this.defaultRenderer}}begin(){}end(){}}return e.\u0275fac=function(n){return new(n||e)(U(mi),U(jr),U(Fr))},e.\u0275prov=Y({token:e,factory:e.\u0275fac}),e})();class wu{constructor(t){this.eventManager=t,this.data=Object.create(null),this.destroyNode=null}destroy(){}createElement(t,n){return n?document.createElementNS(yu[n]||n,t):document.createElement(t)}createComment(t){return document.createComment(t)}createText(t){return document.createTextNode(t)}appendChild(t,n){(mg(t)?t.content:t).appendChild(n)}insertBefore(t,n,r){t&&(mg(t)?t.content:t).insertBefore(n,r)}removeChild(t,n){t&&t.removeChild(n)}selectRootElement(t,n){let r="string"==typeof t?document.querySelector(t):t;if(!r)throw new Error(`The selector "${t}" did not match any elements`);return n||(r.textContent=""),r}parentNode(t){return t.parentNode}nextSibling(t){return t.nextSibling}setAttribute(t,n,r,o){if(o){n=o+":"+n;const i=yu[o];i?t.setAttributeNS(i,n,r):t.setAttribute(n,r)}else t.setAttribute(n,r)}removeAttribute(t,n,r){if(r){const o=yu[r];o?t.removeAttributeNS(o,n):t.removeAttribute(`${r}:${n}`)}else t.removeAttribute(n)}addClass(t,n){t.classList.add(n)}removeClass(t,n){t.classList.remove(n)}setStyle(t,n,r,o){o&(Ne.DashCase|Ne.Important)?t.style.setProperty(n,r,o&Ne.Important?"important":""):t.style[n]=r}removeStyle(t,n,r){r&Ne.DashCase?t.style.removeProperty(n):t.style[n]=""}setProperty(t,n,r){t[n]=r}setValue(t,n){t.nodeValue=n}listen(t,n,r){return"string"==typeof t?this.eventManager.addGlobalEventListener(t,n,pg(r)):this.eventManager.addEventListener(t,n,pg(r))}}function mg(e){return"TEMPLATE"===e.tagName&&void 0!==e.content}class KM extends wu{constructor(t,n,r,o){super(t),this.component=r;const i=yi(o+"-"+r.id,r.styles,[]);n.addStyles(i),this.contentAttr=function QM(e){return"_ngcontent-%COMP%".replace(Du,e)}(o+"-"+r.id),this.hostAttr=function ZM(e){return"_nghost-%COMP%".replace(Du,e)}(o+"-"+r.id)}applyToHost(t){super.setAttribute(t,this.hostAttr,"")}createElement(t,n){const r=super.createElement(t,n);return super.setAttribute(r,this.contentAttr,""),r}}class JM extends wu{constructor(t,n,r,o){super(t),this.sharedStylesHost=n,this.hostEl=r,this.shadowRoot=r.attachShadow({mode:"open"}),this.sharedStylesHost.addHost(this.shadowRoot);const i=yi(o.id,o.styles,[]);for(let s=0;s<i.length;s++){const a=document.createElement("style");a.textContent=i[s],this.shadowRoot.appendChild(a)}}nodeOrShadowRoot(t){return t===this.hostEl?this.shadowRoot:t}destroy(){this.sharedStylesHost.removeHost(this.shadowRoot)}appendChild(t,n){return super.appendChild(this.nodeOrShadowRoot(t),n)}insertBefore(t,n,r){return super.insertBefore(this.nodeOrShadowRoot(t),n,r)}removeChild(t,n){return super.removeChild(this.nodeOrShadowRoot(t),n)}parentNode(t){return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(t)))}}let XM=(()=>{class e extends cg{constructor(n){super(n)}supports(n){return!0}addEventListener(n,r,o){return n.addEventListener(r,o,!1),()=>this.removeEventListener(n,r,o)}removeEventListener(n,r,o){return n.removeEventListener(r,o)}}return e.\u0275fac=function(n){return new(n||e)(U(Tt))},e.\u0275prov=Y({token:e,factory:e.\u0275fac}),e})();const yg=["alt","control","meta","shift"],e0={"\b":"Backspace","\t":"Tab","\x7f":"Delete","\x1b":"Escape",Del:"Delete",Esc:"Escape",Left:"ArrowLeft",Right:"ArrowRight",Up:"ArrowUp",Down:"ArrowDown",Menu:"ContextMenu",Scroll:"ScrollLock",Win:"OS"},t0={alt:e=>e.altKey,control:e=>e.ctrlKey,meta:e=>e.metaKey,shift:e=>e.shiftKey};let n0=(()=>{class e extends cg{constructor(n){super(n)}supports(n){return null!=e.parseEventName(n)}addEventListener(n,r,o){const i=e.parseEventName(r),s=e.eventCallback(i.fullKey,o,this.manager.getZone());return this.manager.getZone().runOutsideAngular(()=>Rr().onAndCancel(n,i.domEventName,s))}static parseEventName(n){const r=n.toLowerCase().split("."),o=r.shift();if(0===r.length||"keydown"!==o&&"keyup"!==o)return null;const i=e._normalizeKey(r.pop());let s="",a=r.indexOf("code");if(a>-1&&(r.splice(a,1),s="code."),yg.forEach(c=>{const l=r.indexOf(c);l>-1&&(r.splice(l,1),s+=c+".")}),s+=i,0!=r.length||0===i.length)return null;const u={};return u.domEventName=o,u.fullKey=s,u}static matchEventFullKeyCode(n,r){let o=e0[n.key]||n.key,i="";return r.indexOf("code.")>-1&&(o=n.code,i="code."),!(null==o||!o)&&(o=o.toLowerCase()," "===o?o="space":"."===o&&(o="dot"),yg.forEach(s=>{s!==o&&(0,t0[s])(n)&&(i+=s+".")}),i+=o,i===r)}static eventCallback(n,r,o){return i=>{e.matchEventFullKeyCode(i,n)&&o.runGuarded(()=>r(i))}}static _normalizeKey(n){return"esc"===n?"escape":n}}return e.\u0275fac=function(n){return new(n||e)(U(Tt))},e.\u0275prov=Y({token:e,factory:e.\u0275fac}),e})();const vg=[{provide:gp,useValue:"browser"},{provide:pp,useValue:function r0(){mu.makeCurrent()},multi:!0},{provide:Tt,useFactory:function s0(){return function zy(e){os=e}(document),document},deps:[]}],a0=Cp(qb,"browser",vg),wg=new L(""),_g=[{provide:Jo,useClass:class GM{addToWindow(t){q.getAngularTestability=(r,o=!0)=>{const i=t.findTestabilityInTree(r,o);if(null==i)throw new Error("Could not find testability for element.");return i},q.getAllAngularTestabilities=()=>t.getAllTestabilities(),q.getAllAngularRootElements=()=>t.getAllRootElements(),q.frameworkStabilizers||(q.frameworkStabilizers=[]),q.frameworkStabilizers.push(r=>{const o=q.getAllAngularTestabilities();let i=o.length,s=!1;const a=function(u){s=s||u,i--,0==i&&r(s)};o.forEach(function(u){u.whenStable(a)})})}findTestabilityInTree(t,n,r){return null==n?null:t.getTestability(n)??(r?Rr().isShadowRoot(n)?this.findTestabilityInTree(t,n.host,!0):this.findTestabilityInTree(t,n.parentElement,!0):null)}},deps:[]},{provide:wp,useClass:za,deps:[De,Wa,Jo]},{provide:za,useClass:za,deps:[De,Wa,Jo]}],Eg=[{provide:hs,useValue:"root"},{provide:Cn,useFactory:function o0(){return new Cn},deps:[]},{provide:gi,useClass:XM,multi:!0,deps:[Tt,De,gp]},{provide:gi,useClass:n0,multi:!0,deps:[Tt]},{provide:vu,useClass:vu,deps:[mi,jr,Fr]},{provide:Dl,useExisting:vu},{provide:lg,useExisting:jr},{provide:jr,useClass:jr,deps:[Tt]},{provide:mi,useClass:mi,deps:[gi,De]},{provide:class _M{},useClass:zM,deps:[]},[]];let u0=(()=>{class e{constructor(n){}static withServerTransition(n){return{ngModule:e,providers:[{provide:Fr,useValue:n.appId},{provide:ug,useExisting:Fr},UM]}}}return e.\u0275fac=function(n){return new(n||e)(U(wg,12))},e.\u0275mod=Qn({type:e}),e.\u0275inj=en({providers:[...Eg,..._g],imports:[mM,Qb]}),e})();typeof window<"u"&&window;let D0=(()=>{class e{constructor(){this.title="Teste",this.target="https://www.figma.com",this.handleMessage=n=>{if("https://www.figma.com"===n.origin&&(console.log("Message received from Figma plugin:",n.data),n.data.pluginMessage)){const{type:r,data:o}=n.data.pluginMessage;switch(r){case"selection-changed":this.handleSelectionChanged(o);break;case"node-created":this.handleNodeCreated(o);break;case"plugin-data":this.handlePluginData(o);break;default:console.log("Unknown message type:",r)}}}}ngOnInit(){console.log("AppComponent initialized"),this.setupMessageListener()}ngOnDestroy(){window.removeEventListener("message",this.handleMessage)}setupMessageListener(){window.addEventListener("message",this.handleMessage.bind(this))}handleSelectionChanged(n){console.log("Selection changed:",n)}handleNodeCreated(n){console.log("Node created:",n)}handlePluginData(n){console.log("Plugin data received:",n)}testeClick(){console.log("Button clicked, sending message to Figma plugin"),parent.postMessage({pluginMessage:{type:"create-rectangles",count:10}},this.target)}}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=Si({type:e,selectors:[["app-root"]],decls:2,vars:0,consts:[[3,"click"]],template:function(n,r){1&n&&(Ho(0,"button",0),ya("click",function(){return r.testeClick()}),function Ff(e,t=""){const n=m(),r=V(),o=e+Q,i=r.firstCreatePass?Sn(r,o,1,t,null):r.data[o],s=n[o]=function xs(e,t){return e.createText(t)}(n[R],t);So(r,n,s,i),ut(i,!1)}(1,"Toggle"),$o())}}),e})(),v0=(()=>{class e{}return e.\u0275fac=function(n){return new(n||e)},e.\u0275mod=Qn({type:e,bootstrap:[D0]}),e.\u0275inj=en({imports:[u0]}),e})();(function xb(){xp=!1})(),a0().bootstrapModule(v0).catch(e=>console.error(e))}},Xt=>{Xt(Xt.s=195)}]);
})();

// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
/*!***************************!*\
  !*** ./dist/polyfills.js ***!
  \***************************/
(self.webpackChunkng_figma_plugin_boilerplate=self.webpackChunkng_figma_plugin_boilerplate||[]).push([[429],{435:(ie,Ee,de)=>{de(583)},583:()=>{!function(e){const n=e.performance;function i(M){n&&n.mark&&n.mark(M)}function o(M,E){n&&n.measure&&n.measure(M,E)}i("Zone");const c=e.__Zone_symbol_prefix||"__zone_symbol__";function a(M){return c+M}const y=!0===e[a("forceDuplicateZoneCheck")];if(e.Zone){if(y||"function"!=typeof e.Zone.__symbol__)throw new Error("Zone already loaded.");return e.Zone}let d=(()=>{class M{constructor(t,r){this._parent=t,this._name=r?r.name||"unnamed":"<root>",this._properties=r&&r.properties||{},this._zoneDelegate=new v(this,this._parent&&this._parent._zoneDelegate,r)}static assertZonePatched(){if(e.Promise!==oe.ZoneAwarePromise)throw new Error("Zone.js has detected that ZoneAwarePromise `(window|global).Promise` has been overwritten.\nMost likely cause is that a Promise polyfill has been loaded after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. If you must load one, do so before loading zone.js.)")}static get root(){let t=M.current;for(;t.parent;)t=t.parent;return t}static get current(){return U.zone}static get currentTask(){return re}static __load_patch(t,r,k=!1){if(oe.hasOwnProperty(t)){if(!k&&y)throw Error("Already loaded patch: "+t)}else if(!e["__Zone_disable_"+t]){const C="Zone:"+t;i(C),oe[t]=r(e,M,z),o(C,C)}}get parent(){return this._parent}get name(){return this._name}get(t){const r=this.getZoneWith(t);if(r)return r._properties[t]}getZoneWith(t){let r=this;for(;r;){if(r._properties.hasOwnProperty(t))return r;r=r._parent}return null}fork(t){if(!t)throw new Error("ZoneSpec required!");return this._zoneDelegate.fork(this,t)}wrap(t,r){if("function"!=typeof t)throw new Error("Expecting function got: "+t);const k=this._zoneDelegate.intercept(this,t,r),C=this;return function(){return C.runGuarded(k,this,arguments,r)}}run(t,r,k,C){U={parent:U,zone:this};try{return this._zoneDelegate.invoke(this,t,r,k,C)}finally{U=U.parent}}runGuarded(t,r=null,k,C){U={parent:U,zone:this};try{try{return this._zoneDelegate.invoke(this,t,r,k,C)}catch($){if(this._zoneDelegate.handleError(this,$))throw $}}finally{U=U.parent}}runTask(t,r,k){if(t.zone!=this)throw new Error("A task can only be run in the zone of creation! (Creation: "+(t.zone||K).name+"; Execution: "+this.name+")");if(t.state===x&&(t.type===Q||t.type===w))return;const C=t.state!=p;C&&t._transitionTo(p,j),t.runCount++;const $=re;re=t,U={parent:U,zone:this};try{t.type==w&&t.data&&!t.data.isPeriodic&&(t.cancelFn=void 0);try{return this._zoneDelegate.invokeTask(this,t,r,k)}catch(l){if(this._zoneDelegate.handleError(this,l))throw l}}finally{t.state!==x&&t.state!==h&&(t.type==Q||t.data&&t.data.isPeriodic?C&&t._transitionTo(j,p):(t.runCount=0,this._updateTaskCount(t,-1),C&&t._transitionTo(x,p,x))),U=U.parent,re=$}}scheduleTask(t){if(t.zone&&t.zone!==this){let k=this;for(;k;){if(k===t.zone)throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${t.zone.name}`);k=k.parent}}t._transitionTo(X,x);const r=[];t._zoneDelegates=r,t._zone=this;try{t=this._zoneDelegate.scheduleTask(this,t)}catch(k){throw t._transitionTo(h,X,x),this._zoneDelegate.handleError(this,k),k}return t._zoneDelegates===r&&this._updateTaskCount(t,1),t.state==X&&t._transitionTo(j,X),t}scheduleMicroTask(t,r,k,C){return this.scheduleTask(new m(I,t,r,k,C,void 0))}scheduleMacroTask(t,r,k,C,$){return this.scheduleTask(new m(w,t,r,k,C,$))}scheduleEventTask(t,r,k,C,$){return this.scheduleTask(new m(Q,t,r,k,C,$))}cancelTask(t){if(t.zone!=this)throw new Error("A task can only be cancelled in the zone of creation! (Creation: "+(t.zone||K).name+"; Execution: "+this.name+")");t._transitionTo(G,j,p);try{this._zoneDelegate.cancelTask(this,t)}catch(r){throw t._transitionTo(h,G),this._zoneDelegate.handleError(this,r),r}return this._updateTaskCount(t,-1),t._transitionTo(x,G),t.runCount=0,t}_updateTaskCount(t,r){const k=t._zoneDelegates;-1==r&&(t._zoneDelegates=null);for(let C=0;C<k.length;C++)k[C]._updateTaskCount(t.type,r)}}return M.__symbol__=a,M})();const P={name:"",onHasTask:(M,E,t,r)=>M.hasTask(t,r),onScheduleTask:(M,E,t,r)=>M.scheduleTask(t,r),onInvokeTask:(M,E,t,r,k,C)=>M.invokeTask(t,r,k,C),onCancelTask:(M,E,t,r)=>M.cancelTask(t,r)};class v{constructor(E,t,r){this._taskCounts={microTask:0,macroTask:0,eventTask:0},this.zone=E,this._parentDelegate=t,this._forkZS=r&&(r&&r.onFork?r:t._forkZS),this._forkDlgt=r&&(r.onFork?t:t._forkDlgt),this._forkCurrZone=r&&(r.onFork?this.zone:t._forkCurrZone),this._interceptZS=r&&(r.onIntercept?r:t._interceptZS),this._interceptDlgt=r&&(r.onIntercept?t:t._interceptDlgt),this._interceptCurrZone=r&&(r.onIntercept?this.zone:t._interceptCurrZone),this._invokeZS=r&&(r.onInvoke?r:t._invokeZS),this._invokeDlgt=r&&(r.onInvoke?t:t._invokeDlgt),this._invokeCurrZone=r&&(r.onInvoke?this.zone:t._invokeCurrZone),this._handleErrorZS=r&&(r.onHandleError?r:t._handleErrorZS),this._handleErrorDlgt=r&&(r.onHandleError?t:t._handleErrorDlgt),this._handleErrorCurrZone=r&&(r.onHandleError?this.zone:t._handleErrorCurrZone),this._scheduleTaskZS=r&&(r.onScheduleTask?r:t._scheduleTaskZS),this._scheduleTaskDlgt=r&&(r.onScheduleTask?t:t._scheduleTaskDlgt),this._scheduleTaskCurrZone=r&&(r.onScheduleTask?this.zone:t._scheduleTaskCurrZone),this._invokeTaskZS=r&&(r.onInvokeTask?r:t._invokeTaskZS),this._invokeTaskDlgt=r&&(r.onInvokeTask?t:t._invokeTaskDlgt),this._invokeTaskCurrZone=r&&(r.onInvokeTask?this.zone:t._invokeTaskCurrZone),this._cancelTaskZS=r&&(r.onCancelTask?r:t._cancelTaskZS),this._cancelTaskDlgt=r&&(r.onCancelTask?t:t._cancelTaskDlgt),this._cancelTaskCurrZone=r&&(r.onCancelTask?this.zone:t._cancelTaskCurrZone),this._hasTaskZS=null,this._hasTaskDlgt=null,this._hasTaskDlgtOwner=null,this._hasTaskCurrZone=null;const k=r&&r.onHasTask;(k||t&&t._hasTaskZS)&&(this._hasTaskZS=k?r:P,this._hasTaskDlgt=t,this._hasTaskDlgtOwner=this,this._hasTaskCurrZone=E,r.onScheduleTask||(this._scheduleTaskZS=P,this._scheduleTaskDlgt=t,this._scheduleTaskCurrZone=this.zone),r.onInvokeTask||(this._invokeTaskZS=P,this._invokeTaskDlgt=t,this._invokeTaskCurrZone=this.zone),r.onCancelTask||(this._cancelTaskZS=P,this._cancelTaskDlgt=t,this._cancelTaskCurrZone=this.zone))}fork(E,t){return this._forkZS?this._forkZS.onFork(this._forkDlgt,this.zone,E,t):new d(E,t)}intercept(E,t,r){return this._interceptZS?this._interceptZS.onIntercept(this._interceptDlgt,this._interceptCurrZone,E,t,r):t}invoke(E,t,r,k,C){return this._invokeZS?this._invokeZS.onInvoke(this._invokeDlgt,this._invokeCurrZone,E,t,r,k,C):t.apply(r,k)}handleError(E,t){return!this._handleErrorZS||this._handleErrorZS.onHandleError(this._handleErrorDlgt,this._handleErrorCurrZone,E,t)}scheduleTask(E,t){let r=t;if(this._scheduleTaskZS)this._hasTaskZS&&r._zoneDelegates.push(this._hasTaskDlgtOwner),r=this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt,this._scheduleTaskCurrZone,E,t),r||(r=t);else if(t.scheduleFn)t.scheduleFn(t);else{if(t.type!=I)throw new Error("Task is missing scheduleFn.");R(t)}return r}invokeTask(E,t,r,k){return this._invokeTaskZS?this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt,this._invokeTaskCurrZone,E,t,r,k):t.callback.apply(r,k)}cancelTask(E,t){let r;if(this._cancelTaskZS)r=this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt,this._cancelTaskCurrZone,E,t);else{if(!t.cancelFn)throw Error("Task is not cancelable");r=t.cancelFn(t)}return r}hasTask(E,t){try{this._hasTaskZS&&this._hasTaskZS.onHasTask(this._hasTaskDlgt,this._hasTaskCurrZone,E,t)}catch(r){this.handleError(E,r)}}_updateTaskCount(E,t){const r=this._taskCounts,k=r[E],C=r[E]=k+t;if(C<0)throw new Error("More tasks executed then were scheduled.");0!=k&&0!=C||this.hasTask(this.zone,{microTask:r.microTask>0,macroTask:r.macroTask>0,eventTask:r.eventTask>0,change:E})}}class m{constructor(E,t,r,k,C,$){if(this._zone=null,this.runCount=0,this._zoneDelegates=null,this._state="notScheduled",this.type=E,this.source=t,this.data=k,this.scheduleFn=C,this.cancelFn=$,!r)throw new Error("callback is not defined");this.callback=r;const l=this;this.invoke=E===Q&&k&&k.useG?m.invokeTask:function(){return m.invokeTask.call(e,l,this,arguments)}}static invokeTask(E,t,r){E||(E=this),ee++;try{return E.runCount++,E.zone.runTask(E,t,r)}finally{1==ee&&_(),ee--}}get zone(){return this._zone}get state(){return this._state}cancelScheduleRequest(){this._transitionTo(x,X)}_transitionTo(E,t,r){if(this._state!==t&&this._state!==r)throw new Error(`${this.type} '${this.source}': can not transition to '${E}', expecting state '${t}'${r?" or '"+r+"'":""}, was '${this._state}'.`);this._state=E,E==x&&(this._zoneDelegates=null)}toString(){return this.data&&typeof this.data.handleId<"u"?this.data.handleId.toString():Object.prototype.toString.call(this)}toJSON(){return{type:this.type,state:this.state,source:this.source,zone:this.zone.name,runCount:this.runCount}}}const L=a("setTimeout"),Z=a("Promise"),N=a("then");let J,B=[],H=!1;function q(M){if(J||e[Z]&&(J=e[Z].resolve(0)),J){let E=J[N];E||(E=J.then),E.call(J,M)}else e[L](M,0)}function R(M){0===ee&&0===B.length&&q(_),M&&B.push(M)}function _(){if(!H){for(H=!0;B.length;){const M=B;B=[];for(let E=0;E<M.length;E++){const t=M[E];try{t.zone.runTask(t,null,null)}catch(r){z.onUnhandledError(r)}}}z.microtaskDrainDone(),H=!1}}const K={name:"NO ZONE"},x="notScheduled",X="scheduling",j="scheduled",p="running",G="canceling",h="unknown",I="microTask",w="macroTask",Q="eventTask",oe={},z={symbol:a,currentZoneFrame:()=>U,onUnhandledError:W,microtaskDrainDone:W,scheduleMicroTask:R,showUncaughtError:()=>!d[a("ignoreConsoleErrorUncaughtError")],patchEventTarget:()=>[],patchOnProperties:W,patchMethod:()=>W,bindArguments:()=>[],patchThen:()=>W,patchMacroTask:()=>W,patchEventPrototype:()=>W,isIEOrEdge:()=>!1,getGlobalObjects:()=>{},ObjectDefineProperty:()=>W,ObjectGetOwnPropertyDescriptor:()=>{},ObjectCreate:()=>{},ArraySlice:()=>[],patchClass:()=>W,wrapWithCurrentZone:()=>W,filterProperties:()=>[],attachOriginToPatched:()=>W,_redefineProperty:()=>W,patchCallbacks:()=>W,nativeScheduleMicroTask:q};let U={parent:null,zone:new d(null,null)},re=null,ee=0;function W(){}o("Zone","Zone"),e.Zone=d}(typeof window<"u"&&window||typeof self<"u"&&self||({}));const ie=Object.getOwnPropertyDescriptor,Ee=Object.defineProperty,de=Object.getPrototypeOf,ge=Object.create,Ve=Array.prototype.slice,Oe="addEventListener",Se="removeEventListener",Ze=Zone.__symbol__(Oe),Ne=Zone.__symbol__(Se),ce="true",ae="false",ke=Zone.__symbol__("");function Ie(e,n){return Zone.current.wrap(e,n)}function Me(e,n,i,o,c){return Zone.current.scheduleMacroTask(e,n,i,o,c)}const A=Zone.__symbol__,Pe=typeof window<"u",Te=Pe?window:void 0,Y=Pe&&Te||"object"==typeof self&&self||({});function Le(e,n){for(let i=e.length-1;i>=0;i--)"function"==typeof e[i]&&(e[i]=Ie(e[i],n+"_"+i));return e}function Fe(e){return!e||!1!==e.writable&&!("function"==typeof e.get&&typeof e.set>"u")}const Be=typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope,we=!("nw"in Y)&&typeof Y.process<"u"&&"[object process]"==={}.toString.call(Y.process),je=!we&&!Be&&!(!Pe||!Te.HTMLElement),Ue=typeof Y.process<"u"&&"[object process]"==={}.toString.call(Y.process)&&!Be&&!(!Pe||!Te.HTMLElement),Re={},We=function(e){if(!(e=e||Y.event))return;let n=Re[e.type];n||(n=Re[e.type]=A("ON_PROPERTY"+e.type));const i=this||e.target||Y,o=i[n];let c;if(je&&i===Te&&"error"===e.type){const a=e;c=o&&o.call(this,a.message,a.filename,a.lineno,a.colno,a.error),!0===c&&e.preventDefault()}else c=o&&o.apply(this,arguments),null!=c&&!c&&e.preventDefault();return c};function qe(e,n,i){let o=ie(e,n);if(!o&&i&&ie(i,n)&&(o={enumerable:!0,configurable:!0}),!o||!o.configurable)return;const c=A("on"+n+"patched");if(e.hasOwnProperty(c)&&e[c])return;delete o.writable,delete o.value;const a=o.get,y=o.set,d=n.slice(2);let P=Re[d];P||(P=Re[d]=A("ON_PROPERTY"+d)),o.set=function(v){let m=this;!m&&e===Y&&(m=Y),m&&("function"==typeof m[P]&&m.removeEventListener(d,We),y&&y.call(m,null),m[P]=v,"function"==typeof v&&m.addEventListener(d,We,!1))},o.get=function(){let v=this;if(!v&&e===Y&&(v=Y),!v)return null;const m=v[P];if(m)return m;if(a){let L=a.call(this);if(L)return o.set.call(this,L),"function"==typeof v.removeAttribute&&v.removeAttribute(n),L}return null},Ee(e,n,o),e[c]=!0}function Xe(e,n,i){if(n)for(let o=0;o<n.length;o++)qe(e,"on"+n[o],i);else{const o=[];for(const c in e)"on"==c.slice(0,2)&&o.push(c);for(let c=0;c<o.length;c++)qe(e,o[c],i)}}const ne=A("originalInstance");function ve(e){const n=Y[e];if(!n)return;Y[A(e)]=n,Y[e]=function(){const c=Le(arguments,e);switch(c.length){case 0:this[ne]=new n;break;case 1:this[ne]=new n(c[0]);break;case 2:this[ne]=new n(c[0],c[1]);break;case 3:this[ne]=new n(c[0],c[1],c[2]);break;case 4:this[ne]=new n(c[0],c[1],c[2],c[3]);break;default:throw new Error("Arg list too long.")}},ue(Y[e],n);const i=new n(function(){});let o;for(o in i)"XMLHttpRequest"===e&&"responseBlob"===o||function(c){"function"==typeof i[c]?Y[e].prototype[c]=function(){return this[ne][c].apply(this[ne],arguments)}:Ee(Y[e].prototype,c,{set:function(a){"function"==typeof a?(this[ne][c]=Ie(a,e+"."+c),ue(this[ne][c],a)):this[ne][c]=a},get:function(){return this[ne][c]}})}(o);for(o in n)"prototype"!==o&&n.hasOwnProperty(o)&&(Y[e][o]=n[o])}function le(e,n,i){let o=e;for(;o&&!o.hasOwnProperty(n);)o=de(o);!o&&e[n]&&(o=e);const c=A(n);let a=null;if(o&&(!(a=o[c])||!o.hasOwnProperty(c))&&(a=o[c]=o[n],Fe(o&&ie(o,n)))){const d=i(a,c,n);o[n]=function(){return d(this,arguments)},ue(o[n],a)}return a}function lt(e,n,i){let o=null;function c(a){const y=a.data;return y.args[y.cbIdx]=function(){a.invoke.apply(this,arguments)},o.apply(y.target,y.args),a}o=le(e,n,a=>function(y,d){const P=i(y,d);return P.cbIdx>=0&&"function"==typeof d[P.cbIdx]?Me(P.name,d[P.cbIdx],P,c):a.apply(y,d)})}function ue(e,n){e[A("OriginalDelegate")]=n}let ze=!1,Ae=!1;function ft(){if(ze)return Ae;ze=!0;try{const e=Te.navigator.userAgent;(-1!==e.indexOf("MSIE ")||-1!==e.indexOf("Trident/")||-1!==e.indexOf("Edge/"))&&(Ae=!0)}catch{}return Ae}Zone.__load_patch("ZoneAwarePromise",(e,n,i)=>{const o=Object.getOwnPropertyDescriptor,c=Object.defineProperty,y=i.symbol,d=[],P=!0===e[y("DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION")],v=y("Promise"),m=y("then");i.onUnhandledError=l=>{if(i.showUncaughtError()){const u=l&&l.rejection;u?console.error("Unhandled Promise rejection:",u instanceof Error?u.message:u,"; Zone:",l.zone.name,"; Task:",l.task&&l.task.source,"; Value:",u,u instanceof Error?u.stack:void 0):console.error(l)}},i.microtaskDrainDone=()=>{for(;d.length;){const l=d.shift();try{l.zone.runGuarded(()=>{throw l.throwOriginal?l.rejection:l})}catch(u){N(u)}}};const Z=y("unhandledPromiseRejectionHandler");function N(l){i.onUnhandledError(l);try{const u=n[Z];"function"==typeof u&&u.call(this,l)}catch{}}function B(l){return l&&l.then}function H(l){return l}function J(l){return t.reject(l)}const q=y("state"),R=y("value"),_=y("finally"),K=y("parentPromiseValue"),x=y("parentPromiseState"),j=null,p=!0,G=!1;function I(l,u){return s=>{try{z(l,u,s)}catch(f){z(l,!1,f)}}}const w=function(){let l=!1;return function(s){return function(){l||(l=!0,s.apply(null,arguments))}}},oe=y("currentTaskTrace");function z(l,u,s){const f=w();if(l===s)throw new TypeError("Promise resolved with itself");if(l[q]===j){let g=null;try{("object"==typeof s||"function"==typeof s)&&(g=s&&s.then)}catch(b){return f(()=>{z(l,!1,b)})(),l}if(u!==G&&s instanceof t&&s.hasOwnProperty(q)&&s.hasOwnProperty(R)&&s[q]!==j)re(s),z(l,s[q],s[R]);else if(u!==G&&"function"==typeof g)try{g.call(s,f(I(l,u)),f(I(l,!1)))}catch(b){f(()=>{z(l,!1,b)})()}else{l[q]=u;const b=l[R];if(l[R]=s,l[_]===_&&u===p&&(l[q]=l[x],l[R]=l[K]),u===G&&s instanceof Error){const T=n.currentTask&&n.currentTask.data&&n.currentTask.data.__creationTrace__;T&&c(s,oe,{configurable:!0,enumerable:!1,writable:!0,value:T})}for(let T=0;T<b.length;)ee(l,b[T++],b[T++],b[T++],b[T++]);if(0==b.length&&u==G){l[q]=0;let T=s;try{throw new Error("Uncaught (in promise): "+function a(l){return l&&l.toString===Object.prototype.toString?(l.constructor&&l.constructor.name||"")+": "+JSON.stringify(l):l?l.toString():Object.prototype.toString.call(l)}(s)+(s&&s.stack?"\n"+s.stack:""))}catch(D){T=D}P&&(T.throwOriginal=!0),T.rejection=s,T.promise=l,T.zone=n.current,T.task=n.currentTask,d.push(T),i.scheduleMicroTask()}}}return l}const U=y("rejectionHandledHandler");function re(l){if(0===l[q]){try{const u=n[U];u&&"function"==typeof u&&u.call(this,{rejection:l[R],promise:l})}catch{}l[q]=G;for(let u=0;u<d.length;u++)l===d[u].promise&&d.splice(u,1)}}function ee(l,u,s,f,g){re(l);const b=l[q],T=b?"function"==typeof f?f:H:"function"==typeof g?g:J;u.scheduleMicroTask("Promise.then",()=>{try{const D=l[R],O=!!s&&_===s[_];O&&(s[K]=D,s[x]=b);const S=u.run(T,void 0,O&&T!==J&&T!==H?[]:[D]);z(s,!0,S)}catch(D){z(s,!1,D)}},s)}const M=function(){},E=e.AggregateError;class t{static toString(){return"function ZoneAwarePromise() { [native code] }"}static resolve(u){return z(new this(null),p,u)}static reject(u){return z(new this(null),G,u)}static any(u){if(!u||"function"!=typeof u[Symbol.iterator])return Promise.reject(new E([],"All promises were rejected"));const s=[];let f=0;try{for(let T of u)f++,s.push(t.resolve(T))}catch{return Promise.reject(new E([],"All promises were rejected"))}if(0===f)return Promise.reject(new E([],"All promises were rejected"));let g=!1;const b=[];return new t((T,D)=>{for(let O=0;O<s.length;O++)s[O].then(S=>{g||(g=!0,T(S))},S=>{b.push(S),f--,0===f&&(g=!0,D(new E(b,"All promises were rejected")))})})}static race(u){let s,f,g=new this((D,O)=>{s=D,f=O});function b(D){s(D)}function T(D){f(D)}for(let D of u)B(D)||(D=this.resolve(D)),D.then(b,T);return g}static all(u){return t.allWithCallback(u)}static allSettled(u){return(this&&this.prototype instanceof t?this:t).allWithCallback(u,{thenCallback:f=>({status:"fulfilled",value:f}),errorCallback:f=>({status:"rejected",reason:f})})}static allWithCallback(u,s){let f,g,b=new this((S,V)=>{f=S,g=V}),T=2,D=0;const O=[];for(let S of u){B(S)||(S=this.resolve(S));const V=D;try{S.then(F=>{O[V]=s?s.thenCallback(F):F,T--,0===T&&f(O)},F=>{s?(O[V]=s.errorCallback(F),T--,0===T&&f(O)):g(F)})}catch(F){g(F)}T++,D++}return T-=2,0===T&&f(O),b}constructor(u){const s=this;if(!(s instanceof t))throw new Error("Must be an instanceof Promise.");s[q]=j,s[R]=[];try{const f=w();u&&u(f(I(s,p)),f(I(s,G)))}catch(f){z(s,!1,f)}}get[Symbol.toStringTag](){return"Promise"}get[Symbol.species](){return t}then(u,s){var f;let g=null===(f=this.constructor)||void 0===f?void 0:f[Symbol.species];(!g||"function"!=typeof g)&&(g=this.constructor||t);const b=new g(M),T=n.current;return this[q]==j?this[R].push(T,b,u,s):ee(this,T,b,u,s),b}catch(u){return this.then(null,u)}finally(u){var s;let f=null===(s=this.constructor)||void 0===s?void 0:s[Symbol.species];(!f||"function"!=typeof f)&&(f=t);const g=new f(M);g[_]=_;const b=n.current;return this[q]==j?this[R].push(b,g,u,u):ee(this,b,g,u,u),g}}t.resolve=t.resolve,t.reject=t.reject,t.race=t.race,t.all=t.all;const r=e[v]=e.Promise;e.Promise=t;const k=y("thenPatched");function C(l){const u=l.prototype,s=o(u,"then");if(s&&(!1===s.writable||!s.configurable))return;const f=u.then;u[m]=f,l.prototype.then=function(g,b){return new t((D,O)=>{f.call(this,D,O)}).then(g,b)},l[k]=!0}return i.patchThen=C,r&&(C(r),le(e,"fetch",l=>function $(l){return function(u,s){let f=l.apply(u,s);if(f instanceof t)return f;let g=f.constructor;return g[k]||C(g),f}}(l))),Promise[n.__symbol__("uncaughtPromiseErrors")]=d,t}),Zone.__load_patch("toString",e=>{const n=Function.prototype.toString,i=A("OriginalDelegate"),o=A("Promise"),c=A("Error"),a=function(){if("function"==typeof this){const v=this[i];if(v)return"function"==typeof v?n.call(v):Object.prototype.toString.call(v);if(this===Promise){const m=e[o];if(m)return n.call(m)}if(this===Error){const m=e[c];if(m)return n.call(m)}}return n.call(this)};a[i]=n,Function.prototype.toString=a;const y=Object.prototype.toString;Object.prototype.toString=function(){return"function"==typeof Promise&&this instanceof Promise?"[object Promise]":y.call(this)}});let ye=!1;if(typeof window<"u")try{const e=Object.defineProperty({},"passive",{get:function(){ye=!0}});window.addEventListener("test",e,e),window.removeEventListener("test",e,e)}catch{ye=!1}const ht={useG:!0},te={},Ye={},$e=new RegExp("^"+ke+"(\\w+)(true|false)$"),Ke=A("propagationStopped");function Je(e,n){const i=(n?n(e):e)+ae,o=(n?n(e):e)+ce,c=ke+i,a=ke+o;te[e]={},te[e][ae]=c,te[e][ce]=a}function dt(e,n,i,o){const c=o&&o.add||Oe,a=o&&o.rm||Se,y=o&&o.listeners||"eventListeners",d=o&&o.rmAll||"removeAllListeners",P=A(c),v="."+c+":",Z=function(R,_,K){if(R.isRemoved)return;const x=R.callback;let X;"object"==typeof x&&x.handleEvent&&(R.callback=p=>x.handleEvent(p),R.originalDelegate=x);try{R.invoke(R,_,[K])}catch(p){X=p}const j=R.options;return j&&"object"==typeof j&&j.once&&_[a].call(_,K.type,R.originalDelegate?R.originalDelegate:R.callback,j),X};function N(R,_,K){if(!(_=_||e.event))return;const x=R||_.target||e,X=x[te[_.type][K?ce:ae]];if(X){const j=[];if(1===X.length){const p=Z(X[0],x,_);p&&j.push(p)}else{const p=X.slice();for(let G=0;G<p.length&&(!_||!0!==_[Ke]);G++){const h=Z(p[G],x,_);h&&j.push(h)}}if(1===j.length)throw j[0];for(let p=0;p<j.length;p++){const G=j[p];n.nativeScheduleMicroTask(()=>{throw G})}}}const B=function(R){return N(this,R,!1)},H=function(R){return N(this,R,!0)};function J(R,_){if(!R)return!1;let K=!0;_&&void 0!==_.useG&&(K=_.useG);const x=_&&_.vh;let X=!0;_&&void 0!==_.chkDup&&(X=_.chkDup);let j=!1;_&&void 0!==_.rt&&(j=_.rt);let p=R;for(;p&&!p.hasOwnProperty(c);)p=de(p);if(!p&&R[c]&&(p=R),!p||p[P])return!1;const G=_&&_.eventNameToString,h={},I=p[P]=p[c],w=p[A(a)]=p[a],Q=p[A(y)]=p[y],oe=p[A(d)]=p[d];let z;function U(s,f){return!ye&&"object"==typeof s&&s?!!s.capture:ye&&f?"boolean"==typeof s?{capture:s,passive:!0}:s?"object"==typeof s&&!1!==s.passive?Object.assign(Object.assign({},s),{passive:!0}):s:{passive:!0}:s}_&&_.prepend&&(z=p[A(_.prepend)]=p[_.prepend]);const t=K?function(s){if(!h.isExisting)return I.call(h.target,h.eventName,h.capture?H:B,h.options)}:function(s){return I.call(h.target,h.eventName,s.invoke,h.options)},r=K?function(s){if(!s.isRemoved){const f=te[s.eventName];let g;f&&(g=f[s.capture?ce:ae]);const b=g&&s.target[g];if(b)for(let T=0;T<b.length;T++)if(b[T]===s){b.splice(T,1),s.isRemoved=!0,0===b.length&&(s.allRemoved=!0,s.target[g]=null);break}}if(s.allRemoved)return w.call(s.target,s.eventName,s.capture?H:B,s.options)}:function(s){return w.call(s.target,s.eventName,s.invoke,s.options)},C=_&&_.diff?_.diff:function(s,f){const g=typeof f;return"function"===g&&s.callback===f||"object"===g&&s.originalDelegate===f},$=Zone[A("UNPATCHED_EVENTS")],l=e[A("PASSIVE_EVENTS")],u=function(s,f,g,b,T=!1,D=!1){return function(){const O=this||e;let S=arguments[0];_&&_.transferEventName&&(S=_.transferEventName(S));let V=arguments[1];if(!V)return s.apply(this,arguments);if(we&&"uncaughtException"===S)return s.apply(this,arguments);let F=!1;if("function"!=typeof V){if(!V.handleEvent)return s.apply(this,arguments);F=!0}if(x&&!x(s,V,O,arguments))return;const fe=ye&&!!l&&-1!==l.indexOf(S),se=U(arguments[2],fe);if($)for(let _e=0;_e<$.length;_e++)if(S===$[_e])return fe?s.call(O,S,V,se):s.apply(this,arguments);const xe=!!se&&("boolean"==typeof se||se.capture),nt=!(!se||"object"!=typeof se)&&se.once,gt=Zone.current;let Ge=te[S];Ge||(Je(S,G),Ge=te[S]);const rt=Ge[xe?ce:ae];let De,me=O[rt],ot=!1;if(me){if(ot=!0,X)for(let _e=0;_e<me.length;_e++)if(C(me[_e],V))return}else me=O[rt]=[];const st=O.constructor.name,it=Ye[st];it&&(De=it[S]),De||(De=st+f+(G?G(S):S)),h.options=se,nt&&(h.options.once=!1),h.target=O,h.capture=xe,h.eventName=S,h.isExisting=ot;const be=K?ht:void 0;be&&(be.taskData=h);const he=gt.scheduleEventTask(De,V,be,g,b);return h.target=null,be&&(be.taskData=null),nt&&(se.once=!0),!ye&&"boolean"==typeof he.options||(he.options=se),he.target=O,he.capture=xe,he.eventName=S,F&&(he.originalDelegate=V),D?me.unshift(he):me.push(he),T?O:void 0}};return p[c]=u(I,v,t,r,j),z&&(p.prependListener=u(z,".prependListener:",function(s){return z.call(h.target,h.eventName,s.invoke,h.options)},r,j,!0)),p[a]=function(){const s=this||e;let f=arguments[0];_&&_.transferEventName&&(f=_.transferEventName(f));const g=arguments[2],b=!!g&&("boolean"==typeof g||g.capture),T=arguments[1];if(!T)return w.apply(this,arguments);if(x&&!x(w,T,s,arguments))return;const D=te[f];let O;D&&(O=D[b?ce:ae]);const S=O&&s[O];if(S)for(let V=0;V<S.length;V++){const F=S[V];if(C(F,T))return S.splice(V,1),F.isRemoved=!0,0===S.length&&(F.allRemoved=!0,s[O]=null,"string"==typeof f)&&(s[ke+"ON_PROPERTY"+f]=null),F.zone.cancelTask(F),j?s:void 0}return w.apply(this,arguments)},p[y]=function(){const s=this||e;let f=arguments[0];_&&_.transferEventName&&(f=_.transferEventName(f));const g=[],b=Qe(s,G?G(f):f);for(let T=0;T<b.length;T++){const D=b[T];g.push(D.originalDelegate?D.originalDelegate:D.callback)}return g},p[d]=function(){const s=this||e;let f=arguments[0];if(f){_&&_.transferEventName&&(f=_.transferEventName(f));const g=te[f];if(g){const D=s[g[ae]],O=s[g[ce]];if(D){const S=D.slice();for(let V=0;V<S.length;V++){const F=S[V];this[a].call(this,f,F.originalDelegate?F.originalDelegate:F.callback,F.options)}}if(O){const S=O.slice();for(let V=0;V<S.length;V++){const F=S[V];this[a].call(this,f,F.originalDelegate?F.originalDelegate:F.callback,F.options)}}}}else{const g=Object.keys(s);for(let b=0;b<g.length;b++){const D=$e.exec(g[b]);let O=D&&D[1];O&&"removeListener"!==O&&this[d].call(this,O)}this[d].call(this,"removeListener")}if(j)return this},ue(p[c],I),ue(p[a],w),oe&&ue(p[d],oe),Q&&ue(p[y],Q),!0}let q=[];for(let R=0;R<i.length;R++)q[R]=J(i[R],o);return q}function Qe(e,n){if(!n){const a=[];for(let y in e){const d=$e.exec(y);let P=d&&d[1];if(P&&(!n||P===n)){const v=e[y];if(v)for(let m=0;m<v.length;m++)a.push(v[m])}}return a}let i=te[n];i||(Je(n),i=te[n]);const o=e[i[ae]],c=e[i[ce]];return o?c?o.concat(c):o.slice():c?c.slice():[]}function _t(e,n){const i=e.Event;i&&i.prototype&&n.patchMethod(i.prototype,"stopImmediatePropagation",o=>function(c,a){c[Ke]=!0,o&&o.apply(c,a)})}function Et(e,n,i,o,c){const a=Zone.__symbol__(o);if(n[a])return;const y=n[a]=n[o];n[o]=function(d,P,v){return P&&P.prototype&&c.forEach(function(m){const L=`${i}.${o}::`+m,Z=P.prototype;try{if(Z.hasOwnProperty(m)){const N=e.ObjectGetOwnPropertyDescriptor(Z,m);N&&N.value?(N.value=e.wrapWithCurrentZone(N.value,L),e._redefineProperty(P.prototype,m,N)):Z[m]&&(Z[m]=e.wrapWithCurrentZone(Z[m],L))}else Z[m]&&(Z[m]=e.wrapWithCurrentZone(Z[m],L))}catch{}}),y.call(n,d,P,v)},e.attachOriginToPatched(n[o],y)}function et(e,n,i){if(!i||0===i.length)return n;const o=i.filter(a=>a.target===e);if(!o||0===o.length)return n;const c=o[0].ignoreProperties;return n.filter(a=>-1===c.indexOf(a))}function tt(e,n,i,o){e&&Xe(e,et(e,n,i),o)}function He(e){return Object.getOwnPropertyNames(e).filter(n=>n.startsWith("on")&&n.length>2).map(n=>n.substring(2))}Zone.__load_patch("util",(e,n,i)=>{const o=He(e);i.patchOnProperties=Xe,i.patchMethod=le,i.bindArguments=Le,i.patchMacroTask=lt;const c=n.__symbol__("BLACK_LISTED_EVENTS"),a=n.__symbol__("UNPATCHED_EVENTS");e[a]&&(e[c]=e[a]),e[c]&&(n[c]=n[a]=e[c]),i.patchEventPrototype=_t,i.patchEventTarget=dt,i.isIEOrEdge=ft,i.ObjectDefineProperty=Ee,i.ObjectGetOwnPropertyDescriptor=ie,i.ObjectCreate=ge,i.ArraySlice=Ve,i.patchClass=ve,i.wrapWithCurrentZone=Ie,i.filterProperties=et,i.attachOriginToPatched=ue,i._redefineProperty=Object.defineProperty,i.patchCallbacks=Et,i.getGlobalObjects=()=>({globalSources:Ye,zoneSymbolEventNames:te,eventNames:o,isBrowser:je,isMix:Ue,isNode:we,TRUE_STR:ce,FALSE_STR:ae,ZONE_SYMBOL_PREFIX:ke,ADD_EVENT_LISTENER_STR:Oe,REMOVE_EVENT_LISTENER_STR:Se})});const Ce=A("zoneTask");function pe(e,n,i,o){let c=null,a=null;i+=o;const y={};function d(v){const m=v.data;return m.args[0]=function(){return v.invoke.apply(this,arguments)},m.handleId=c.apply(e,m.args),v}function P(v){return a.call(e,v.data.handleId)}c=le(e,n+=o,v=>function(m,L){if("function"==typeof L[0]){const Z={isPeriodic:"Interval"===o,delay:"Timeout"===o||"Interval"===o?L[1]||0:void 0,args:L},N=L[0];L[0]=function(){try{return N.apply(this,arguments)}finally{Z.isPeriodic||("number"==typeof Z.handleId?delete y[Z.handleId]:Z.handleId&&(Z.handleId[Ce]=null))}};const B=Me(n,L[0],Z,d,P);if(!B)return B;const H=B.data.handleId;return"number"==typeof H?y[H]=B:H&&(H[Ce]=B),H&&H.ref&&H.unref&&"function"==typeof H.ref&&"function"==typeof H.unref&&(B.ref=H.ref.bind(H),B.unref=H.unref.bind(H)),"number"==typeof H||H?H:B}return v.apply(e,L)}),a=le(e,i,v=>function(m,L){const Z=L[0];let N;"number"==typeof Z?N=y[Z]:(N=Z&&Z[Ce],N||(N=Z)),N&&"string"==typeof N.type?"notScheduled"!==N.state&&(N.cancelFn&&N.data.isPeriodic||0===N.runCount)&&("number"==typeof Z?delete y[Z]:Z&&(Z[Ce]=null),N.zone.cancelTask(N)):v.apply(e,L)})}Zone.__load_patch("legacy",e=>{const n=e[Zone.__symbol__("legacyPatch")];n&&n()}),Zone.__load_patch("queueMicrotask",(e,n,i)=>{i.patchMethod(e,"queueMicrotask",o=>function(c,a){n.current.scheduleMicroTask("queueMicrotask",a[0])})}),Zone.__load_patch("timers",e=>{const n="set",i="clear";pe(e,n,i,"Timeout"),pe(e,n,i,"Interval"),pe(e,n,i,"Immediate")}),Zone.__load_patch("requestAnimationFrame",e=>{pe(e,"request","cancel","AnimationFrame"),pe(e,"mozRequest","mozCancel","AnimationFrame"),pe(e,"webkitRequest","webkitCancel","AnimationFrame")}),Zone.__load_patch("blocking",(e,n)=>{const i=["alert","prompt","confirm"];for(let o=0;o<i.length;o++)le(e,i[o],(a,y,d)=>function(P,v){return n.current.run(a,e,v,d)})}),Zone.__load_patch("EventTarget",(e,n,i)=>{(function mt(e,n){n.patchEventPrototype(e,n)})(e,i),function pt(e,n){if(Zone[n.symbol("patchEventTarget")])return;const{eventNames:i,zoneSymbolEventNames:o,TRUE_STR:c,FALSE_STR:a,ZONE_SYMBOL_PREFIX:y}=n.getGlobalObjects();for(let P=0;P<i.length;P++){const v=i[P],Z=y+(v+a),N=y+(v+c);o[v]={},o[v][a]=Z,o[v][c]=N}const d=e.EventTarget;d&&d.prototype&&n.patchEventTarget(e,n,[d&&d.prototype])}(e,i);const o=e.XMLHttpRequestEventTarget;o&&o.prototype&&i.patchEventTarget(e,i,[o.prototype])}),Zone.__load_patch("MutationObserver",(e,n,i)=>{ve("MutationObserver"),ve("WebKitMutationObserver")}),Zone.__load_patch("IntersectionObserver",(e,n,i)=>{ve("IntersectionObserver")}),Zone.__load_patch("FileReader",(e,n,i)=>{ve("FileReader")}),Zone.__load_patch("on_property",(e,n,i)=>{!function Tt(e,n){if(we&&!Ue||Zone[e.symbol("patchEvents")])return;const i=n.__Zone_ignore_on_properties;let o=[];if(je){const c=window;o=o.concat(["Document","SVGElement","Element","HTMLElement","HTMLBodyElement","HTMLMediaElement","HTMLFrameSetElement","HTMLFrameElement","HTMLIFrameElement","HTMLMarqueeElement","Worker"]);const a=function ut(){try{const e=Te.navigator.userAgent;if(-1!==e.indexOf("MSIE ")||-1!==e.indexOf("Trident/"))return!0}catch{}return!1}()?[{target:c,ignoreProperties:["error"]}]:[];tt(c,He(c),i&&i.concat(a),de(c))}o=o.concat(["XMLHttpRequest","XMLHttpRequestEventTarget","IDBIndex","IDBRequest","IDBOpenDBRequest","IDBDatabase","IDBTransaction","IDBCursor","WebSocket"]);for(let c=0;c<o.length;c++){const a=n[o[c]];a&&a.prototype&&tt(a.prototype,He(a.prototype),i)}}(i,e)}),Zone.__load_patch("customElements",(e,n,i)=>{!function yt(e,n){const{isBrowser:i,isMix:o}=n.getGlobalObjects();(i||o)&&e.customElements&&"customElements"in e&&n.patchCallbacks(n,e.customElements,"customElements","define",["connectedCallback","disconnectedCallback","adoptedCallback","attributeChangedCallback"])}(e,i)}),Zone.__load_patch("XHR",(e,n)=>{!function P(v){const m=v.XMLHttpRequest;if(!m)return;const L=m.prototype;let N=L[Ze],B=L[Ne];if(!N){const h=v.XMLHttpRequestEventTarget;if(h){const I=h.prototype;N=I[Ze],B=I[Ne]}}const H="readystatechange",J="scheduled";function q(h){const I=h.data,w=I.target;w[a]=!1,w[d]=!1;const Q=w[c];N||(N=w[Ze],B=w[Ne]),Q&&B.call(w,H,Q);const oe=w[c]=()=>{if(w.readyState===w.DONE)if(!I.aborted&&w[a]&&h.state===J){const U=w[n.__symbol__("loadfalse")];if(0!==w.status&&U&&U.length>0){const re=h.invoke;h.invoke=function(){const ee=w[n.__symbol__("loadfalse")];for(let W=0;W<ee.length;W++)ee[W]===h&&ee.splice(W,1);!I.aborted&&h.state===J&&re.call(h)},U.push(h)}else h.invoke()}else!I.aborted&&!1===w[a]&&(w[d]=!0)};return N.call(w,H,oe),w[i]||(w[i]=h),p.apply(w,I.args),w[a]=!0,h}function R(){}function _(h){const I=h.data;return I.aborted=!0,G.apply(I.target,I.args)}const K=le(L,"open",()=>function(h,I){return h[o]=0==I[2],h[y]=I[1],K.apply(h,I)}),X=A("fetchTaskAborting"),j=A("fetchTaskScheduling"),p=le(L,"send",()=>function(h,I){if(!0===n.current[j]||h[o])return p.apply(h,I);{const w={target:h,url:h[y],isPeriodic:!1,args:I,aborted:!1},Q=Me("XMLHttpRequest.send",R,w,q,_);h&&!0===h[d]&&!w.aborted&&Q.state===J&&Q.invoke()}}),G=le(L,"abort",()=>function(h,I){const w=function Z(h){return h[i]}(h);if(w&&"string"==typeof w.type){if(null==w.cancelFn||w.data&&w.data.aborted)return;w.zone.cancelTask(w)}else if(!0===n.current[X])return G.apply(h,I)})}(e);const i=A("xhrTask"),o=A("xhrSync"),c=A("xhrListener"),a=A("xhrScheduled"),y=A("xhrURL"),d=A("xhrErrorBeforeScheduled")}),Zone.__load_patch("geolocation",e=>{e.navigator&&e.navigator.geolocation&&function at(e,n){const i=e.constructor.name;for(let o=0;o<n.length;o++){const c=n[o],a=e[c];if(a){if(!Fe(ie(e,c)))continue;e[c]=(d=>{const P=function(){return d.apply(this,Le(arguments,i+"."+c))};return ue(P,d),P})(a)}}}(e.navigator.geolocation,["getCurrentPosition","watchPosition"])}),Zone.__load_patch("PromiseRejectionEvent",(e,n)=>{function i(o){return function(c){Qe(e,o).forEach(y=>{const d=e.PromiseRejectionEvent;if(d){const P=new d(o,{promise:c.promise,reason:c.rejection});y.invoke(P)}})}}e.PromiseRejectionEvent&&(n[A("unhandledPromiseRejectionHandler")]=i("unhandledrejection"),n[A("rejectionHandledHandler")]=i("rejectionhandled"))})}},ie=>{ie(ie.s=435)}]);
})();

// This entry need to be wrapped in an IIFE because it need to be isolated against other entry modules.
(() => {
/*!*************************!*\
  !*** ./dist/runtime.js ***!
  \*************************/
(()=>{"use strict";var e,i={},v={};function n(e){var a=v[e];if(void 0!==a)return a.exports;var r=v[e]={exports:{}};return i[e](r,r.exports,n),r.exports}n.m=i,e=[],n.O=(a,r,u,f)=>{if(!r){var _=1/0;for(l=0;l<e.length;l++){for(var[r,u,f]=e[l],c=!0,t=0;t<r.length;t++)(!1&f||_>=f)&&Object.keys(n.O).every(d=>n.O[d](r[t]))?r.splice(t--,1):(c=!1,f<_&&(_=f));if(c){e.splice(l--,1);var o=u();void 0!==o&&(a=o)}}return a}f=f||0;for(var l=e.length;l>0&&e[l-1][2]>f;l--)e[l]=e[l-1];e[l]=[r,u,f]},n.n=e=>{var a=e&&e.__esModule?()=>e.default:()=>e;return n.d(a,{a}),a},n.d=(e,a)=>{for(var r in a)n.o(a,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:a[r]})},n.o=(e,a)=>Object.prototype.hasOwnProperty.call(e,a),(()=>{var e={666:0};n.O.j=u=>0===e[u];var a=(u,f)=>{var t,o,[l,_,c]=f,s=0;if(l.some(b=>0!==e[b])){for(t in _)n.o(_,t)&&(n.m[t]=_[t]);if(c)var p=c(n)}for(u&&u(f);s<l.length;s++)n.o(e,o=l[s])&&e[o]&&e[o][0](),e[o]=0;return n.O(p)},r=self.webpackChunkng_figma_plugin_boilerplate=self.webpackChunkng_figma_plugin_boilerplate||[];r.forEach(a.bind(null,0)),r.push=a.bind(null,r.push.bind(r))})()})();
})();

/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,