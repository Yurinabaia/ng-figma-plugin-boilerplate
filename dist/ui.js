/******/ (() => { // webpackBootstrap
// This entry needs to be wrapped in an IIFE because it needs to be in strict mode.
(() => {
"use strict";
/*!**********************!*\
  !*** ./dist/main.js ***!
  \**********************/
(self.webpackChunkng_figma_plugin_boilerplate=self.webpackChunkng_figma_plugin_boilerplate||[]).push([[792],{434:()=>{let fe=null;const Me=Symbol("SIGNAL");function F(e){const t=fe;return fe=e,t}const Un={version:0,lastCleanEpoch:0,dirty:!1,producerNode:void 0,producerLastReadVersion:void 0,producerIndexOfThis:void 0,nextProducerIndex:0,liveConsumerNode:void 0,liveConsumerIndexOfThis:void 0,consumerAllowSignalWrites:!1,consumerIsAlwaysLive:!1,kind:"unknown",producerMustRecompute:()=>!1,producerRecomputeValue:()=>{},consumerMarkedDirty:()=>{},consumerOnSignalRead:()=>{}};function ro(e){if((!io(e)||e.dirty)&&(e.dirty||1!==e.lastCleanEpoch)){if(!e.producerMustRecompute(e)&&!Ti(e))return void bi(e);e.producerRecomputeValue(e),bi(e)}}function bi(e){e.dirty=!1,e.lastCleanEpoch=1}function qn(e){return e&&(e.nextProducerIndex=0),F(e)}function oo(e,t){if(F(t),e&&void 0!==e.producerNode&&void 0!==e.producerIndexOfThis&&void 0!==e.producerLastReadVersion){if(io(e))for(let n=e.nextProducerIndex;n<e.producerNode.length;n++)Ni(e.producerNode[n],e.producerIndexOfThis[n]);for(;e.producerNode.length>e.nextProducerIndex;)e.producerNode.pop(),e.producerLastReadVersion.pop(),e.producerIndexOfThis.pop()}}function Ti(e){Ai(e);for(let t=0;t<e.producerNode.length;t++){const n=e.producerNode[t],r=e.producerLastReadVersion[t];if(r!==n.version||(ro(n),r!==n.version))return!0}return!1}function Si(e){if(Ai(e),io(e))for(let t=0;t<e.producerNode.length;t++)Ni(e.producerNode[t],e.producerIndexOfThis[t]);e.producerNode.length=e.producerLastReadVersion.length=e.producerIndexOfThis.length=0,e.liveConsumerNode&&(e.liveConsumerNode.length=e.liveConsumerIndexOfThis.length=0)}function Ni(e,t){if(function hf(e){e.liveConsumerNode??=[],e.liveConsumerIndexOfThis??=[]}(e),1===e.liveConsumerNode.length&&function gf(e){return void 0!==e.producerNode}(e))for(let r=0;r<e.producerNode.length;r++)Ni(e.producerNode[r],e.producerIndexOfThis[r]);const n=e.liveConsumerNode.length-1;if(e.liveConsumerNode[t]=e.liveConsumerNode[n],e.liveConsumerIndexOfThis[t]=e.liveConsumerIndexOfThis[n],e.liveConsumerNode.length--,e.liveConsumerIndexOfThis.length--,t<e.liveConsumerNode.length){const r=e.liveConsumerIndexOfThis[t],o=e.liveConsumerNode[t];Ai(o),o.producerIndexOfThis[r]=t}}function io(e){return e.consumerIsAlwaysLive||(e?.liveConsumerNode?.length??0)>0}function Ai(e){e.producerNode??=[],e.producerIndexOfThis??=[],e.producerLastReadVersion??=[]}let mf=function FI(){throw new Error};let za;function xi(){return za}function Jt(e){const t=za;return za=e,t}const Wa=Symbol("NotFound");function Za(e){return"function"==typeof e}Error;let Qa=!1;const at={Promise:void 0,set useDeprecatedSynchronousErrorHandling(e){if(e){const t=new Error;console.warn("DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \n"+t.stack)}else Qa&&console.log("RxJS: Back to a better error behavior. Thank you. <3");Qa=e},get useDeprecatedSynchronousErrorHandling(){return Qa}};function so(e){setTimeout(()=>{throw e},0)}const Ri={closed:!0,next(e){},error(e){if(at.useDeprecatedSynchronousErrorHandling)throw e;so(e)},complete(){}},UI=Array.isArray||(e=>e&&"number"==typeof e.length),Fi=(()=>{function e(t){return Error.call(this),this.message=t?`${t.length} errors occurred during unsubscription:\n${t.map((n,r)=>`${r+1}) ${n.toString()}`).join("\n  ")}`:"",this.name="UnsubscriptionError",this.errors=t,this}return e.prototype=Object.create(Error.prototype),e})();class Ce{constructor(t){this.closed=!1,this._parentOrParents=null,this._subscriptions=null,t&&(this._ctorUnsubscribe=!0,this._unsubscribe=t)}unsubscribe(){let t;if(this.closed)return;let{_parentOrParents:n,_ctorUnsubscribe:r,_unsubscribe:o,_subscriptions:i}=this;if(this.closed=!0,this._parentOrParents=null,this._subscriptions=null,n instanceof Ce)n.remove(this);else if(null!==n)for(let s=0;s<n.length;++s)n[s].remove(this);if(Za(o)){r&&(this._unsubscribe=void 0);try{o.call(this)}catch(s){t=s instanceof Fi?If(s.errors):[s]}}if(UI(i)){let s=-1,a=i.length;for(;++s<a;){const u=i[s];if(null!==(e=u)&&"object"==typeof e)try{u.unsubscribe()}catch(c){t=t||[],c instanceof Fi?t=t.concat(If(c.errors)):t.push(c)}}}var e;if(t)throw new Fi(t)}add(t){let n=t;if(!t)return Ce.EMPTY;switch(typeof t){case"function":n=new Ce(t);case"object":if(n===this||n.closed||"function"!=typeof n.unsubscribe)return n;if(this.closed)return n.unsubscribe(),n;if(!(n instanceof Ce)){const i=n;n=new Ce,n._subscriptions=[i]}break;default:throw new Error("unrecognized teardown "+t+" added to Subscription.")}let{_parentOrParents:r}=n;if(null===r)n._parentOrParents=this;else if(r instanceof Ce){if(r===this)return n;n._parentOrParents=[r,this]}else{if(-1!==r.indexOf(this))return n;r.push(this)}const o=this._subscriptions;return null===o?this._subscriptions=[n]:o.push(n),n}remove(t){const n=this._subscriptions;if(n){const r=n.indexOf(t);-1!==r&&n.splice(r,1)}}}var e;function If(e){return e.reduce((t,n)=>t.concat(n instanceof Fi?n.errors:n),[])}Ce.EMPTY=((e=new Ce).closed=!0,e);const Oi="function"==typeof Symbol?Symbol("rxSubscriber"):"@@rxSubscriber_"+Math.random();class Et extends Ce{constructor(t,n,r){switch(super(),this.syncErrorValue=null,this.syncErrorThrown=!1,this.syncErrorThrowable=!1,this.isStopped=!1,arguments.length){case 0:this.destination=Ri;break;case 1:if(!t){this.destination=Ri;break}if("object"==typeof t){t instanceof Et?(this.syncErrorThrowable=t.syncErrorThrowable,this.destination=t,t.add(this)):(this.syncErrorThrowable=!0,this.destination=new Cf(this,t));break}default:this.syncErrorThrowable=!0,this.destination=new Cf(this,t,n,r)}}[Oi](){return this}static create(t,n,r){const o=new Et(t,n,r);return o.syncErrorThrowable=!1,o}next(t){this.isStopped||this._next(t)}error(t){this.isStopped||(this.isStopped=!0,this._error(t))}complete(){this.isStopped||(this.isStopped=!0,this._complete())}unsubscribe(){this.closed||(this.isStopped=!0,super.unsubscribe())}_next(t){this.destination.next(t)}_error(t){this.destination.error(t),this.unsubscribe()}_complete(){this.destination.complete(),this.unsubscribe()}_unsubscribeAndRecycle(){const{_parentOrParents:t}=this;return this._parentOrParents=null,this.unsubscribe(),this.closed=!1,this.isStopped=!1,this._parentOrParents=t,this}}class Cf extends Et{constructor(t,n,r,o){super(),this._parentSubscriber=t;let i,s=this;Za(n)?i=n:n&&(i=n.next,r=n.error,o=n.complete,n!==Ri&&(s=Object.create(n),Za(s.unsubscribe)&&this.add(s.unsubscribe.bind(s)),s.unsubscribe=this.unsubscribe.bind(this))),this._context=s,this._next=i,this._error=r,this._complete=o}next(t){if(!this.isStopped&&this._next){const{_parentSubscriber:n}=this;at.useDeprecatedSynchronousErrorHandling&&n.syncErrorThrowable?this.__tryOrSetError(n,this._next,t)&&this.unsubscribe():this.__tryOrUnsub(this._next,t)}}error(t){if(!this.isStopped){const{_parentSubscriber:n}=this,{useDeprecatedSynchronousErrorHandling:r}=at;if(this._error)r&&n.syncErrorThrowable?(this.__tryOrSetError(n,this._error,t),this.unsubscribe()):(this.__tryOrUnsub(this._error,t),this.unsubscribe());else if(n.syncErrorThrowable)r?(n.syncErrorValue=t,n.syncErrorThrown=!0):so(t),this.unsubscribe();else{if(this.unsubscribe(),r)throw t;so(t)}}}complete(){if(!this.isStopped){const{_parentSubscriber:t}=this;if(this._complete){const n=()=>this._complete.call(this._context);at.useDeprecatedSynchronousErrorHandling&&t.syncErrorThrowable?(this.__tryOrSetError(t,n),this.unsubscribe()):(this.__tryOrUnsub(n),this.unsubscribe())}else this.unsubscribe()}}__tryOrUnsub(t,n){try{t.call(this._context,n)}catch(r){if(this.unsubscribe(),at.useDeprecatedSynchronousErrorHandling)throw r;so(r)}}__tryOrSetError(t,n,r){if(!at.useDeprecatedSynchronousErrorHandling)throw new Error("bad call");try{n.call(this._context,r)}catch(o){return at.useDeprecatedSynchronousErrorHandling?(t.syncErrorValue=o,t.syncErrorThrown=!0,!0):(so(o),!0)}return!1}_unsubscribe(){const{_parentSubscriber:t}=this;this._context=null,this._parentSubscriber=null,t.unsubscribe()}}const WI="function"==typeof Symbol&&Symbol.observable||"@@observable";function ZI(e){return e}let _f=(()=>{class e{constructor(n){this._isScalar=!1,n&&(this._subscribe=n)}lift(n){const r=new e;return r.source=this,r.operator=n,r}subscribe(n,r,o){const{operator:i}=this,s=function zI(e,t,n){if(e){if(e instanceof Et)return e;if(e[Oi])return e[Oi]()}return e||t||n?new Et(e,t,n):new Et(Ri)}(n,r,o);if(s.add(i?i.call(s,this.source):this.source||at.useDeprecatedSynchronousErrorHandling&&!s.syncErrorThrowable?this._subscribe(s):this._trySubscribe(s)),at.useDeprecatedSynchronousErrorHandling&&s.syncErrorThrowable&&(s.syncErrorThrowable=!1,s.syncErrorThrown))throw s.syncErrorValue;return s}_trySubscribe(n){try{return this._subscribe(n)}catch(r){at.useDeprecatedSynchronousErrorHandling&&(n.syncErrorThrown=!0,n.syncErrorValue=r),function GI(e){for(;e;){const{closed:t,destination:n,isStopped:r}=e;if(t||r)return!1;e=n&&n instanceof Et?n:null}return!0}(n)?n.error(r):console.warn(r)}}forEach(n,r){return new(r=Mf(r))((o,i)=>{let s;s=this.subscribe(a=>{try{n(a)}catch(u){i(u),s&&s.unsubscribe()}},i,o)})}_subscribe(n){const{source:r}=this;return r&&r.subscribe(n)}[WI](){return this}pipe(...n){return 0===n.length?this:function wf(e){return 0===e.length?ZI:1===e.length?e[0]:function(n){return e.reduce((r,o)=>o(r),n)}}(n)(this)}toPromise(n){return new(n=Mf(n))((r,o)=>{let i;this.subscribe(s=>i=s,s=>o(s),()=>r(i))})}}return e.create=t=>new e(t),e})();function Mf(e){if(e||(e=at.Promise||Promise),!e)throw new Error("no Promise impl found");return e}const zn=(()=>{function e(){return Error.call(this),this.message="object unsubscribed",this.name="ObjectUnsubscribedError",this}return e.prototype=Object.create(Error.prototype),e})();class QI extends Ce{constructor(t,n){super(),this.subject=t,this.subscriber=n,this.closed=!1}unsubscribe(){if(this.closed)return;this.closed=!0;const t=this.subject,n=t.observers;if(this.subject=null,!n||0===n.length||t.isStopped||t.closed)return;const r=n.indexOf(this.subscriber);-1!==r&&n.splice(r,1)}}class YI extends Et{constructor(t){super(t),this.destination=t}}let ao=(()=>{class e extends _f{constructor(){super(),this.observers=[],this.closed=!1,this.isStopped=!1,this.hasError=!1,this.thrownError=null}[Oi](){return new YI(this)}lift(n){const r=new bf(this,this);return r.operator=n,r}next(n){if(this.closed)throw new zn;if(!this.isStopped){const{observers:r}=this,o=r.length,i=r.slice();for(let s=0;s<o;s++)i[s].next(n)}}error(n){if(this.closed)throw new zn;this.hasError=!0,this.thrownError=n,this.isStopped=!0;const{observers:r}=this,o=r.length,i=r.slice();for(let s=0;s<o;s++)i[s].error(n);this.observers.length=0}complete(){if(this.closed)throw new zn;this.isStopped=!0;const{observers:n}=this,r=n.length,o=n.slice();for(let i=0;i<r;i++)o[i].complete();this.observers.length=0}unsubscribe(){this.isStopped=!0,this.closed=!0,this.observers=null}_trySubscribe(n){if(this.closed)throw new zn;return super._trySubscribe(n)}_subscribe(n){if(this.closed)throw new zn;return this.hasError?(n.error(this.thrownError),Ce.EMPTY):this.isStopped?(n.complete(),Ce.EMPTY):(this.observers.push(n),new QI(this,n))}asObservable(){const n=new _f;return n.source=this,n}}return e.create=(t,n)=>new bf(t,n),e})();class bf extends ao{constructor(t,n){super(),this.destination=t,this.source=n}next(t){const{destination:n}=this;n&&n.next&&n.next(t)}error(t){const{destination:n}=this;n&&n.error&&this.destination.error(t)}complete(){const{destination:t}=this;t&&t.complete&&this.destination.complete()}_subscribe(t){const{source:n}=this;return n?this.source.subscribe(t):Ce.EMPTY}}class KI extends ao{constructor(t){super(),this._value=t}get value(){return this.getValue()}_subscribe(t){const n=super._subscribe(t);return n&&!n.closed&&t.next(this._value),n}getValue(){if(this.hasError)throw this.thrownError;if(this.closed)throw new zn;return this._value}next(t){super.next(this._value=t)}}class XI{constructor(t,n){this.project=t,this.thisArg=n}call(t,n){return n.subscribe(new eC(t,this.project,this.thisArg))}}class eC extends Et{constructor(t,n,r){super(t),this.project=n,this.count=0,this.thisArg=r||this}_next(t){let n;try{n=this.project.call(this.thisArg,t,this.count++)}catch(r){return void this.destination.error(r)}this.destination.next(n)}}class I extends Error{code;constructor(t,n){super(function xt(e,t){return`${function tC(e){return`NG0${Math.abs(e)}`}(e)}${t?": "+t:""}`}(t,n)),this.code=t}}function Rt(e){return{toString:e}.toString()}const ae=globalThis;function Z(e){for(let t in e)if(e[t]===Z)return t;throw Error("Could not find renamed property on target object.")}function me(e){if("string"==typeof e)return e;if(Array.isArray(e))return`[${e.map(me).join(", ")}]`;if(null==e)return""+e;const t=e.overriddenName||e.name;if(t)return`${t}`;const n=e.toString();if(null==n)return""+n;const r=n.indexOf("\n");return r>=0?n.slice(0,r):n}function Ka(e,t){return e?t?`${e} ${t}`:e:t||""}const rC=Z({__forward_ref__:Z});function Ja(e){return e.__forward_ref__=Ja,e.toString=function(){return me(this())},e}function A(e){return function Li(e){return"function"==typeof e&&e.hasOwnProperty(rC)&&e.__forward_ref__===Ja}(e)?e():e}function j(e){return{token:e.token,providedIn:e.providedIn||null,factory:e.factory,value:void 0}}function Kn(e){return{providers:e.providers||[],imports:e.imports||[]}}function Vi(e){return kf(e,Bi)||kf(e,xf)}function kf(e,t){return e.hasOwnProperty(t)?e[t]:null}function ji(e){return e&&(e.hasOwnProperty(Xa)||e.hasOwnProperty(uC))?e[Xa]:null}const Bi=Z({\u0275prov:Z}),Xa=Z({\u0275inj:Z}),xf=Z({ngInjectableDef:Z}),uC=Z({ngInjectorDef:Z});class _{_desc;ngMetadataName="InjectionToken";\u0275prov;constructor(t,n){this._desc=t,this.\u0275prov=void 0,"number"==typeof n?this.__NG_ELEMENT_ID__=n:void 0!==n&&(this.\u0275prov=j({token:this,providedIn:n.providedIn||"root",factory:n.factory}))}get multi(){return this}toString(){return`InjectionToken ${this._desc}`}}function nu(e){return e&&!!e.\u0275providers}const Jn=Z({\u0275cmp:Z}),ru=Z({\u0275dir:Z}),ou=Z({\u0275pipe:Z}),Ff=Z({\u0275mod:Z}),Ft=Z({\u0275fac:Z}),uo=Z({__NG_ELEMENT_ID__:Z}),Of=Z({__NG_ENV_ID__:Z});function G(e){return"function"==typeof e?e.name||e.toString():"object"==typeof e&&null!=e&&"function"==typeof e.type?e.type.name||e.type.toString():function x(e){return"string"==typeof e?e:null==e?"":String(e)}(e)}function Pf(e,t){throw new I(-200,e)}function iu(e,t){throw new I(-201,!1)}var P=function(e){return e[e.Default=0]="Default",e[e.Host=1]="Host",e[e.Self=2]="Self",e[e.SkipSelf=4]="SkipSelf",e[e.Optional=8]="Optional",e}(P||{});let su;function Lf(){return su}function Le(e){const t=su;return su=e,t}function Vf(e,t,n){const r=Vi(e);return r&&"root"==r.providedIn?void 0===r.value?r.value=r.factory():r.value:n&P.Optional?null:void 0!==t?t:void iu()}const gn={};class jf{injector;constructor(t){this.injector=t}retrieve(t,n){return this.injector.get(t,n.optional?Wa:gn,n)}}const Ui="ngTempTokenPath",pC=/\n/gm,Bf="__source";function gC(e,t=P.Default){if(void 0===xi())throw new I(-203,!1);if(null===xi())return Vf(e,void 0,t);{const n=xi();let r;return r=n instanceof jf?n.injector:n,r.get(e,t&P.Optional?null:void 0,t)}}function H(e,t=P.Default){return(Lf()||gC)(A(e),t)}function w(e,t=P.Default){return H(e,qi(t))}function qi(e){return typeof e>"u"||"number"==typeof e?e:(e.optional&&8)|(e.host&&1)|(e.self&&2)|(e.skipSelf&&4)}function uu(e){const t=[];for(let n=0;n<e.length;n++){const r=A(e[n]);if(Array.isArray(r)){if(0===r.length)throw new I(900,!1);let o,i=P.Default;for(let s=0;s<r.length;s++){const a=r[s],u=mC(a);"number"==typeof u?-1===u?o=a.token:i|=u:o=a}t.push(H(o,i))}else t.push(H(r))}return t}function mC(e){return e.__NG_DI_FLAG__}function mn(e,t){return e.hasOwnProperty(Ft)?e[Ft]:null}function Xn(e,t){e.forEach(n=>Array.isArray(n)?Xn(n,t):t(n))}function Gi(e,t){return t>=e.length-1?e.pop():e.splice(t,1)[0]}const ut={},q=[],ct=new _(""),Gf=new _("",-1),fu=new _("");class Wi{get(t,n=gn){if(n===gn){const r=new Error(`NullInjectorError: No provider for ${me(t)}!`);throw r.name="NullInjectorError",r}return n}}function L(e){return e[Jn]||null}function We(e){return e[ou]||null}function _C(...e){return{\u0275providers:pu(0,e),\u0275fromNgModule:!0}}function pu(e,...t){const n=[],r=new Set;let o;const i=s=>{n.push(s)};return Xn(t,s=>{const a=s;Zi(a,i,[],r)&&(o||=[],o.push(a))}),void 0!==o&&zf(o,i),n}function zf(e,t){for(let n=0;n<e.length;n++){const{ngModule:r,providers:o}=e[n];hu(o,i=>{t(i,r)})}}function Zi(e,t,n,r){if(!(e=A(e)))return!1;let o=null,i=ji(e);const s=!i&&L(e);if(i||s){if(s&&!s.standalone)return!1;o=e}else{const u=e.ngModule;if(i=ji(u),!i)return!1;o=u}const a=r.has(o);if(s){if(a)return!1;if(r.add(o),s.dependencies){const u="function"==typeof s.dependencies?s.dependencies():s.dependencies;for(const c of u)Zi(c,t,n,r)}}else{if(!i)return!1;{if(null!=i.imports&&!a){let c;r.add(o);try{Xn(i.imports,l=>{Zi(l,t,n,r)&&(c||=[],c.push(l))})}finally{}void 0!==c&&zf(c,t)}if(!a){const c=mn(o)||(()=>new o);t({provide:o,useFactory:c,deps:q},o),t({provide:fu,useValue:o,multi:!0},o),t({provide:ct,useValue:()=>H(o),multi:!0},o)}const u=i.providers;if(null!=u&&!a){const c=e;hu(u,l=>{t(l,c)})}}}return o!==e&&void 0!==e.providers}function hu(e,t){for(let n of e)nu(n)&&(n=n.\u0275providers),Array.isArray(n)?hu(n,t):t(n)}const MC=Z({provide:String,useValue:Z});function gu(e){return null!==e&&"object"==typeof e&&MC in e}function Dn(e){return"function"==typeof e}const mu=new _(""),Qi={},Qf={};let yu;function Yi(){return void 0===yu&&(yu=new Wi),yu}class lt{}class vn extends lt{parent;source;scopes;records=new Map;_ngOnDestroyHooks=new Set;_onDestroyHooks=[];get destroyed(){return this._destroyed}_destroyed=!1;injectorDefTypes;constructor(t,n,r,o){super(),this.parent=n,this.source=r,this.scopes=o,vu(t,s=>this.processProvider(s)),this.records.set(Gf,tr(void 0,this)),o.has("environment")&&this.records.set(lt,tr(void 0,this));const i=this.records.get(mu);null!=i&&"string"==typeof i.value&&this.scopes.add(i.value),this.injectorDefTypes=new Set(this.get(fu,q,P.Self))}retrieve(t,n){return this.get(t,n.optional?Wa:gn,n)}destroy(){fo(this),this._destroyed=!0;const t=F(null);try{for(const r of this._ngOnDestroyHooks)r.ngOnDestroy();const n=this._onDestroyHooks;this._onDestroyHooks=[];for(const r of n)r()}finally{this.records.clear(),this._ngOnDestroyHooks.clear(),this.injectorDefTypes.clear(),F(t)}}onDestroy(t){return fo(this),this._onDestroyHooks.push(t),()=>this.removeOnDestroy(t)}runInContext(t){fo(this);const n=Jt(this),r=Le(void 0);try{return t()}finally{Jt(n),Le(r)}}get(t,n=gn,r=P.Default){if(fo(this),t.hasOwnProperty(Of))return t[Of](this);r=qi(r);const i=Jt(this),s=Le(void 0);try{if(!(r&P.SkipSelf)){let u=this.records.get(t);if(void 0===u){const c=function kC(e){return"function"==typeof e||"object"==typeof e&&e instanceof _}(t)&&Vi(t);u=c&&this.injectableDefInScope(c)?tr(Du(t),Qi):null,this.records.set(t,u)}if(null!=u)return this.hydrate(t,u,r)}return(r&P.Self?Yi():this.parent).get(t,n=r&P.Optional&&n===gn?null:n)}catch(a){if("NullInjectorError"===a.name){if((a[Ui]=a[Ui]||[]).unshift(me(t)),i)throw a;return function yC(e,t,n,r){const o=e[Ui];throw t[Bf]&&o.unshift(t[Bf]),e.message=function DC(e,t,n,r=null){e=e&&"\n"===e.charAt(0)&&"\u0275"==e.charAt(1)?e.slice(2):e;let o=me(t);if(Array.isArray(t))o=t.map(me).join(" -> ");else if("object"==typeof t){let i=[];for(let s in t)if(t.hasOwnProperty(s)){let a=t[s];i.push(s+":"+("string"==typeof a?JSON.stringify(a):me(a)))}o=`{${i.join(", ")}}`}return`${n}${r?"("+r+")":""}[${o}]: ${e.replace(pC,"\n  ")}`}("\n"+e.message,o,n,r),e.ngTokenPath=o,e[Ui]=null,e}(a,t,"R3InjectorError",this.source)}throw a}finally{Le(s),Jt(i)}}resolveInjectorInitializers(){const t=F(null),n=Jt(this),r=Le(void 0);try{const i=this.get(ct,q,P.Self);for(const s of i)s()}finally{Jt(n),Le(r),F(t)}}toString(){const t=[],n=this.records;for(const r of n.keys())t.push(me(r));return`R3Injector[${t.join(", ")}]`}processProvider(t){let n=Dn(t=A(t))?t:A(t&&t.provide);const r=function SC(e){return gu(e)?tr(void 0,e.useValue):tr(function Yf(e,t,n){let r;if(Dn(e)){const o=A(e);return mn(o)||Du(o)}if(gu(e))r=()=>A(e.useValue);else if(function Zf(e){return!(!e||!e.useFactory)}(e))r=()=>e.useFactory(...uu(e.deps||[]));else if(function Wf(e){return!(!e||!e.useExisting)}(e))r=(o,i)=>H(A(e.useExisting),void 0!==i&&i&P.Optional?P.Optional:void 0);else{const o=A(e&&(e.useClass||e.provide));if(!function NC(e){return!!e.deps}(e))return mn(o)||Du(o);r=()=>new o(...uu(e.deps))}return r}(e),Qi)}(t);if(!Dn(t)&&!0===t.multi){let o=this.records.get(n);o||(o=tr(void 0,Qi,!0),o.factory=()=>uu(o.multi),this.records.set(n,o)),n=t,o.multi.push(t)}this.records.set(n,r)}hydrate(t,n,r){const o=F(null);try{return n.value===Qf?Pf(me(t)):n.value===Qi&&(n.value=Qf,n.value=n.factory(void 0,r)),"object"==typeof n.value&&n.value&&function AC(e){return null!==e&&"object"==typeof e&&"function"==typeof e.ngOnDestroy}(n.value)&&this._ngOnDestroyHooks.add(n.value),n.value}finally{F(o)}}injectableDefInScope(t){if(!t.providedIn)return!1;const n=A(t.providedIn);return"string"==typeof n?"any"===n||this.scopes.has(n):this.injectorDefTypes.has(n)}removeOnDestroy(t){const n=this._onDestroyHooks.indexOf(t);-1!==n&&this._onDestroyHooks.splice(n,1)}}function Du(e){const t=Vi(e),n=null!==t?t.factory:mn(e);if(null!==n)return n;if(e instanceof _)throw new I(204,!1);if(e instanceof Function)return function TC(e){if(e.length>0)throw new I(204,!1);const n=function aC(e){return e&&(e[Bi]||e[xf])||null}(e);return null!==n?()=>n.factory(e):()=>new e}(e);throw new I(204,!1)}function fo(e){if(e.destroyed)throw new I(205,!1)}function tr(e,t,n=!1){return{factory:e,value:t,multi:n?[]:void 0}}function vu(e,t){for(const n of e)Array.isArray(n)?vu(n,t):n&&nu(n)?vu(n.\u0275providers,t):t(n)}function Kf(e,t){let n;e instanceof vn?(fo(e),n=e):n=new jf(e);const o=Jt(n),i=Le(void 0);try{return t()}finally{Jt(o),Le(i)}}function Eu(){return void 0!==Lf()||null!=xi()}const T=11,C=26;function ue(e){return Array.isArray(e)&&"object"==typeof e[1]}function De(e){return Array.isArray(e)&&!0===e[1]}function wu(e){return!!(4&e.flags)}function ft(e){return e.componentOffset>-1}function ts(e){return!(1&~e.flags)}function Qe(e){return!!e.template}function Pt(e){return!!(512&e[2])}function Lt(e){return!(256&~e[2])}class UC{previousValue;currentValue;firstChange;constructor(t,n,r){this.previousValue=t,this.currentValue=n,this.firstChange=r}isFirstChange(){return this.firstChange}}function ip(e,t,n,r){null!==t?t.applyValueToInputSignal(t,r):e[n]=r}function qC(){const e=up(this),t=e?.current;if(t){const n=e.previous;if(n===ut)e.previous=t;else for(let r in t)n[r]=t[r];e.current=null,this.ngOnChanges(t)}}function GC(e,t,n,r,o){const i=this.declaredInputs[r],s=up(e)||function zC(e,t){return e[ap]=t}(e,{previous:ut,current:null}),a=s.current||(s.current={}),u=s.previous,c=u[i];a[i]=new UC(c&&c.currentValue,n,u===ut),ip(e,t,o,n)}const ap="__ngSimpleChanges__";function up(e){return e[ap]||null}function $(e){for(;Array.isArray(e);)e=e[0];return e}function Ne(e,t){return $(t[e.index])}function Ae(e,t){const n=t[e];return ue(n)?n:n[0]}function Su(e){return!(128&~e[2])}function Je(e,t){return null==t?null:e[t]}function dp(e){e[17]=0}function Nu(e){1024&e[2]||(e[2]|=1024,Su(e)&&lr(e))}function go(e){return!!(9216&e[2]||e[24]?.dirty)}function Au(e){e[10].changeDetectionScheduler?.notify(8),64&e[2]&&(e[2]|=1024),go(e)&&lr(e)}function lr(e){e[10].changeDetectionScheduler?.notify(0);let t=Vt(e);for(;null!==t&&!(8192&t[2])&&(t[2]|=8192,Su(t));)t=Vt(t)}function rs(e,t){if(Lt(e))throw new I(911,!1);null===e[21]&&(e[21]=[]),e[21].push(t)}function Vt(e){const t=e[3];return De(t)?t[3]:t}function xu(e){return e[7]??=[]}function Ru(e){return e.cleanup??=[]}const k={lFrame:Ip(null),bindingsEnabled:!0,skipHydrationRootTNode:null};let Ou=!1;function m(){return k.lFrame.lView}function S(){return k.lFrame.tView}function O(){let e=pp();for(;null!==e&&64===e.type;)e=e.parent;return e}function pp(){return k.lFrame.currentTNode}function pt(e,t){const n=k.lFrame;n.currentTNode=e,n.isParent=t}function Lu(){return k.lFrame.isParent}function mp(){return Ou}function is(e){const t=Ou;return Ou=e,t}function cw(e,t){const n=k.lFrame;n.bindingIndex=n.bindingRootIndex=e,ju(t)}function ju(e){k.lFrame.currentDirectiveIndex=e}function ss(e){k.lFrame.currentQueryIndex=e}function dw(e){const t=e[1];return 2===t.type?t.declTNode:1===t.type?e[5]:null}function vp(e,t,n){if(n&P.SkipSelf){let o=t,i=e;for(;!(o=o.parent,null!==o||n&P.Host||(o=dw(i),null===o||(i=i[14],10&o.type))););if(null===o)return!1;t=o,e=i}const r=k.lFrame=Ep();return r.currentTNode=t,r.lView=e,!0}function $u(e){const t=Ep(),n=e[1];k.lFrame=t,t.currentTNode=n.firstChild,t.lView=e,t.tView=n,t.contextLView=e,t.bindingIndex=n.bindingStartIndex,t.inI18n=!1}function Ep(){const e=k.lFrame,t=null===e?null:e.child;return null===t?Ip(e):t}function Ip(e){const t={currentTNode:null,isParent:!0,lView:null,tView:null,selectedIndex:-1,contextLView:null,elementDepthCount:0,currentNamespace:null,currentDirectiveIndex:-1,bindingRootIndex:-1,bindingIndex:-1,currentQueryIndex:0,parent:e,child:null,inI18n:!1};return null!==e&&(e.child=t),t}function Cp(){const e=k.lFrame;return k.lFrame=e.parent,e.currentTNode=null,e.lView=null,e}const wp=Cp;function Uu(){const e=Cp();e.isParent=!0,e.tView=null,e.selectedIndex=-1,e.contextLView=null,e.elementDepthCount=0,e.currentDirectiveIndex=-1,e.currentNamespace=null,e.bindingRootIndex=-1,e.bindingIndex=-1,e.currentQueryIndex=0}function bn(e){k.lFrame.selectedIndex=e}let Mp=!0;function yo(){return Mp}function wt(e){Mp=e}function as(e,t,n){bp(e,t,3,n)}function us(e,t,n,r){(3&e[2])===n&&bp(e,t,n,r)}function Gu(e,t){let n=e[2];(3&n)===t&&(n&=16383,n+=1,e[2]=n)}function bp(e,t,n,r){const i=r??-1,s=t.length-1;let a=0;for(let u=void 0!==r?65535&e[17]:0;u<s;u++)if("number"==typeof t[u+1]){if(a=t[u],null!=r&&a>=r)break}else t[u]<0&&(e[17]+=65536),(a<i||-1==i)&&(Dw(e,n,t,u),e[17]=(4294901760&e[17])+u+2),u++}function Tp(e,t){const n=F(null);try{t.call(e)}finally{F(n)}}function Dw(e,t,n,r){const o=n[r]<0,i=n[r+1],a=e[o?-n[r]:n[r]];o?e[2]>>14<e[17]>>16&&(3&e[2])===t&&(e[2]+=16384,Tp(a,i)):Tp(a,i)}class Do{factory;injectImpl;resolving=!1;canSeeViewProviders;multi;componentProviders;index;providerFactory;constructor(t,n,r){this.factory=t,this.canSeeViewProviders=n,this.injectImpl=r}}function Sp(e){return 3===e||4===e||6===e}function Np(e){return 64===e.charCodeAt(0)}function fr(e,t){if(null!==t&&0!==t.length)if(null===e||0===e.length)e=t.slice();else{let n=-1;for(let r=0;r<t.length;r++){const o=t[r];"number"==typeof o?n=o:0===n||Ap(e,n,o,0,-1===n||2===n?t[++r]:null)}}return e}function Ap(e,t,n,r,o){let i=0,s=e.length;if(-1===t)s=-1;else for(;i<e.length;){const a=e[i++];if("number"==typeof a){if(a===t){s=-1;break}if(a>t){s=i-1;break}}}for(;i<e.length;){const a=e[i];if("number"==typeof a)break;if(a===n)return void(null!==o&&(e[i+1]=o));i++,null!==o&&i++}-1!==s&&(e.splice(s,0,t),i=s+1),e.splice(i++,0,n),null!==o&&e.splice(i++,0,o)}function vo(e){return 32767&e}function Eo(e,t){let n=function ww(e){return e>>16}(e),r=t;for(;n>0;)r=r[14],n--;return r}let Qu=!0;function cs(e){const t=Qu;return Qu=e,t}let _w=0;const _t={};function ls(e,t){const n=Rp(e,t);if(-1!==n)return n;const r=t[1];r.firstCreatePass&&(e.injectorIndex=t.length,Yu(r.data,e),Yu(t,null),Yu(r.blueprint,null));const o=ds(e,t),i=e.injectorIndex;if(function Zu(e){return-1!==e}(o)){const s=vo(o),a=Eo(o,t),u=a[1].data;for(let c=0;c<8;c++)t[i+c]=a[s+c]|u[s+c]}return t[i+8]=o,i}function Yu(e,t){e.push(0,0,0,0,0,0,0,0,t)}function Rp(e,t){return-1===e.injectorIndex||e.parent&&e.parent.injectorIndex===e.injectorIndex||null===t[e.injectorIndex+8]?-1:e.injectorIndex}function ds(e,t){if(e.parent&&-1!==e.parent.injectorIndex)return e.parent.injectorIndex;let n=0,r=null,o=t;for(;null!==o;){if(r=Bp(o),null===r)return-1;if(n++,o=o[14],-1!==r.injectorIndex)return r.injectorIndex|n<<16}return-1}function Ku(e,t,n){!function Mw(e,t,n){let r;"string"==typeof n?r=n.charCodeAt(0)||0:n.hasOwnProperty(uo)&&(r=n[uo]),null==r&&(r=n[uo]=_w++);const o=255&r;t.data[e+(o>>5)]|=1<<o}(e,t,n)}function Fp(e,t,n){if(n&P.Optional||void 0!==e)return e;iu()}function Op(e,t,n,r){if(n&P.Optional&&void 0===r&&(r=null),!(n&(P.Self|P.Host))){const o=e[9],i=Le(void 0);try{return o?o.get(t,r,n&P.Optional):Vf(t,r,n&P.Optional)}finally{Le(i)}}return Fp(r,0,n)}function Pp(e,t,n,r=P.Default,o){if(null!==e){if(2048&t[2]&&!(r&P.Self)){const s=function kw(e,t,n,r,o){let i=e,s=t;for(;null!==i&&null!==s&&2048&s[2]&&!Pt(s);){const a=Lp(i,s,n,r|P.Self,_t);if(a!==_t)return a;let u=i.parent;if(!u){const c=s[20];if(c){const l=c.get(n,_t,r);if(l!==_t)return l}u=Bp(s),s=s[14]}i=u}return o}(e,t,n,r,_t);if(s!==_t)return s}const i=Lp(e,t,n,r,_t);if(i!==_t)return i}return Op(t,n,r,o)}function Lp(e,t,n,r,o){const i=function Sw(e){if("string"==typeof e)return e.charCodeAt(0)||0;const t=e.hasOwnProperty(uo)?e[uo]:void 0;return"number"==typeof t?t>=0?255&t:Nw:t}(n);if("function"==typeof i){if(!vp(t,e,r))return r&P.Host?Fp(o,0,r):Op(t,n,r,o);try{let s;if(s=i(r),null!=s||r&P.Optional)return s;iu()}finally{wp()}}else if("number"==typeof i){let s=null,a=Rp(e,t),u=-1,c=r&P.Host?t[15][5]:null;for((-1===a||r&P.SkipSelf)&&(u=-1===a?ds(e,t):t[a+8],-1!==u&&jp(r,!1)?(s=t[1],a=vo(u),t=Eo(u,t)):a=-1);-1!==a;){const l=t[1];if(Vp(i,a,l.data)){const d=Tw(a,t,n,s,r,c);if(d!==_t)return d}u=t[a+8],-1!==u&&jp(r,t[1].data[a+8]===c)&&Vp(i,a,t)?(s=l,a=vo(u),t=Eo(u,t)):a=-1}}return o}function Tw(e,t,n,r,o,i){const s=t[1],a=s.data[e+8],l=function fs(e,t,n,r,o){const i=e.providerIndexes,s=t.data,a=1048575&i,u=e.directiveStart,l=i>>20,p=o?a+l:e.directiveEnd;for(let f=r?a:a+l;f<p;f++){const h=s[f];if(f<u&&n===h||f>=u&&h.type===n)return f}if(o){const f=s[u];if(f&&Qe(f)&&f.type===n)return u}return null}(a,s,n,null==r?ft(a)&&Qu:r!=s&&!!(3&a.type),o&P.Host&&i===a);return null!==l?Io(t,s,l,a,o):_t}function Io(e,t,n,r,o){let i=e[n];const s=t.data;if(i instanceof Do){const a=i;a.resolving&&Pf(G(s[n]));const u=cs(a.canSeeViewProviders);a.resolving=!0;const l=a.injectImpl?Le(a.injectImpl):null;vp(e,r,P.Default);try{i=e[n]=a.factory(void 0,o,s,e,r),t.firstCreatePass&&n>=r.directiveStart&&function yw(e,t,n){const{ngOnChanges:r,ngOnInit:o,ngDoCheck:i}=t.type.prototype;if(r){const s=function sp(e){return e.type.prototype.ngOnChanges&&(e.setInput=GC),qC}(t);(n.preOrderHooks??=[]).push(e,s),(n.preOrderCheckHooks??=[]).push(e,s)}o&&(n.preOrderHooks??=[]).push(0-e,o),i&&((n.preOrderHooks??=[]).push(e,i),(n.preOrderCheckHooks??=[]).push(e,i))}(n,s[n],t)}finally{null!==l&&Le(l),cs(u),a.resolving=!1,wp()}}return i}function Vp(e,t,n){return!!(n[t+(e>>5)]&1<<e)}function jp(e,t){return!(e&P.Self||e&P.Host&&t)}class ce{_tNode;_lView;constructor(t,n){this._tNode=t,this._lView=n}get(t,n,r){return Pp(this._tNode,this._lView,t,qi(r),n)}}function Nw(){return new ce(O(),m())}function Bp(e){const t=e[1],n=t.type;return 2===n?t.declTNode:1===n?e[5]:null}function Gp(e,t=null,n=null,r){const o=zp(e,t,n,r);return o.resolveInjectorInitializers(),o}function zp(e,t=null,n=null,r,o=new Set){const i=[n||q,_C(e)];return r=r||("object"==typeof e?void 0:me(e)),new vn(i,t||Yi(),r||null,o)}class Te{static THROW_IF_NOT_FOUND=gn;static NULL=new Wi;static create(t,n){if(Array.isArray(t))return Gp({name:""},n,t,"");{const r=t.name??"";return Gp({name:r},t.parent,t.providers,r)}}static \u0275prov=j({token:Te,providedIn:"any",factory:()=>H(Gf)});static __NG_ELEMENT_ID__=-1}new _("").__NG_ELEMENT_ID__=e=>{const t=O();if(null===t)throw new I(204,!1);if(2&t.type)return t.value;if(e&P.Optional)return null;throw new I(204,!1)};const Wp=!1;let Ht=(()=>class e{static __NG_ELEMENT_ID__=Bw;static __NG_ENV_ID__=n=>n})();class Zp extends Ht{_lView;constructor(t){super(),this._lView=t}onDestroy(t){const n=this._lView;return Lt(n)?(t(),()=>{}):(rs(n,t),()=>function ku(e,t){if(null===e[21])return;const n=e[21].indexOf(t);-1!==n&&e[21].splice(n,1)}(n,t))}}function Bw(){return new Zp(m())}class $t{}const Co=new _("",{providedIn:"root",factory:()=>!1}),Qp=new _(""),ec=new _("");let pr=(()=>{class e{taskId=0;pendingTasks=new Set;get _hasPendingTasks(){return this.hasPendingTasks.value}hasPendingTasks=new KI(!1);add(){this._hasPendingTasks||this.hasPendingTasks.next(!0);const n=this.taskId++;return this.pendingTasks.add(n),n}has(n){return this.pendingTasks.has(n)}remove(n){this.pendingTasks.delete(n),0===this.pendingTasks.size&&this._hasPendingTasks&&this.hasPendingTasks.next(!1)}ngOnDestroy(){this.pendingTasks.clear(),this._hasPendingTasks&&this.hasPendingTasks.next(!1)}static \u0275prov=j({token:e,providedIn:"root",factory:()=>new e})}return e})();const tn=class Hw extends ao{__isAsync;destroyRef=void 0;pendingTasks=void 0;constructor(t=!1){super(),this.__isAsync=t,Eu()&&(this.destroyRef=w(Ht,{optional:!0})??void 0,this.pendingTasks=w(pr,{optional:!0})??void 0)}emit(t){const n=F(null);try{super.next(t)}finally{F(n)}}subscribe(t,n,r){let o=t,i=n||(()=>null),s=r;if(t&&"object"==typeof t){const u=t;o=u.next?.bind(u),i=u.error?.bind(u),s=u.complete?.bind(u)}this.__isAsync&&(i=this.wrapInTimeout(i),o&&(o=this.wrapInTimeout(o)),s&&(s=this.wrapInTimeout(s)));const a=super.subscribe({next:o,error:i,complete:s});return t instanceof Ce&&t.add(a),a}wrapInTimeout(t){return n=>{const r=this.pendingTasks?.add();setTimeout(()=>{try{t(n)}finally{void 0!==r&&this.pendingTasks?.remove(r)}})}}};function wo(...e){}function Kp(e){let t,n;function r(){e=wo;try{void 0!==n&&"function"==typeof cancelAnimationFrame&&cancelAnimationFrame(n),void 0!==t&&clearTimeout(t)}catch{}}return t=setTimeout(()=>{e(),r()}),"function"==typeof requestAnimationFrame&&(n=requestAnimationFrame(()=>{e(),r()})),()=>r()}function Jp(e){return queueMicrotask(()=>e()),()=>{e=wo}}const tc="isAngularZone",gs=tc+"_ID";let $w=0;class Y{hasPendingMacrotasks=!1;hasPendingMicrotasks=!1;isStable=!0;onUnstable=new tn(!1);onMicrotaskEmpty=new tn(!1);onStable=new tn(!1);onError=new tn(!1);constructor(t){const{enableLongStackTrace:n=!1,shouldCoalesceEventChangeDetection:r=!1,shouldCoalesceRunChangeDetection:o=!1,scheduleInRootZone:i=Wp}=t;if(typeof Zone>"u")throw new I(908,!1);Zone.assertZonePatched();const s=this;s._nesting=0,s._outer=s._inner=Zone.current,Zone.TaskTrackingZoneSpec&&(s._inner=s._inner.fork(new Zone.TaskTrackingZoneSpec)),n&&Zone.longStackTraceZoneSpec&&(s._inner=s._inner.fork(Zone.longStackTraceZoneSpec)),s.shouldCoalesceEventChangeDetection=!o&&r,s.shouldCoalesceRunChangeDetection=o,s.callbackScheduled=!1,s.scheduleInRootZone=i,function Gw(e){const t=()=>{!function qw(e){function t(){Kp(()=>{e.callbackScheduled=!1,rc(e),e.isCheckStableRunning=!0,nc(e),e.isCheckStableRunning=!1})}e.isCheckStableRunning||e.callbackScheduled||(e.callbackScheduled=!0,e.scheduleInRootZone?Zone.root.run(()=>{t()}):e._outer.run(()=>{t()}),rc(e))}(e)},n=$w++;e._inner=e._inner.fork({name:"angular",properties:{[tc]:!0,[gs]:n,[gs+n]:!0},onInvokeTask:(r,o,i,s,a,u)=>{if(function zw(e){return th(e,"__ignore_ng_zone__")}(u))return r.invokeTask(i,s,a,u);try{return Xp(e),r.invokeTask(i,s,a,u)}finally{(e.shouldCoalesceEventChangeDetection&&"eventTask"===s.type||e.shouldCoalesceRunChangeDetection)&&t(),eh(e)}},onInvoke:(r,o,i,s,a,u,c)=>{try{return Xp(e),r.invoke(i,s,a,u,c)}finally{e.shouldCoalesceRunChangeDetection&&!e.callbackScheduled&&!function Ww(e){return th(e,"__scheduler_tick__")}(u)&&t(),eh(e)}},onHasTask:(r,o,i,s)=>{r.hasTask(i,s),o===i&&("microTask"==s.change?(e._hasPendingMicrotasks=s.microTask,rc(e),nc(e)):"macroTask"==s.change&&(e.hasPendingMacrotasks=s.macroTask))},onHandleError:(r,o,i,s)=>(r.handleError(i,s),e.runOutsideAngular(()=>e.onError.emit(s)),!1)})}(s)}static isInAngularZone(){return typeof Zone<"u"&&!0===Zone.current.get(tc)}static assertInAngularZone(){if(!Y.isInAngularZone())throw new I(909,!1)}static assertNotInAngularZone(){if(Y.isInAngularZone())throw new I(909,!1)}run(t,n,r){return this._inner.run(t,n,r)}runTask(t,n,r,o){const i=this._inner,s=i.scheduleEventTask("NgZoneEvent: "+o,t,Uw,wo,wo);try{return i.runTask(s,n,r)}finally{i.cancelTask(s)}}runGuarded(t,n,r){return this._inner.runGuarded(t,n,r)}runOutsideAngular(t){return this._outer.run(t)}}const Uw={};function nc(e){if(0==e._nesting&&!e.hasPendingMicrotasks&&!e.isStable)try{e._nesting++,e.onMicrotaskEmpty.emit(null)}finally{if(e._nesting--,!e.hasPendingMicrotasks)try{e.runOutsideAngular(()=>e.onStable.emit(null))}finally{e.isStable=!0}}}function rc(e){e.hasPendingMicrotasks=!!(e._hasPendingMicrotasks||(e.shouldCoalesceEventChangeDetection||e.shouldCoalesceRunChangeDetection)&&!0===e.callbackScheduled)}function Xp(e){e._nesting++,e.isStable&&(e.isStable=!1,e.onUnstable.emit(null))}function eh(e){e._nesting--,nc(e)}class oc{hasPendingMicrotasks=!1;hasPendingMacrotasks=!1;isStable=!0;onUnstable=new tn;onMicrotaskEmpty=new tn;onStable=new tn;onError=new tn;run(t,n,r){return t.apply(n,r)}runGuarded(t,n,r){return t.apply(n,r)}runOutsideAngular(t){return t()}runTask(t,n,r,o){return t.apply(n,r)}}function th(e,t){return!(!Array.isArray(e)||1!==e.length)&&!0===e[0]?.data?.[t]}class ht{_console=console;handleError(t){this._console.error("ERROR",t)}}const Qw=new _("",{providedIn:"root",factory:()=>{const e=w(Y),t=w(ht);return n=>e.runOutsideAngular(()=>t.handleError(n))}});function Yw(){return hr(O(),m())}function hr(e,t){return new gr(Ne(e,t))}let gr=(()=>class e{nativeElement;constructor(n){this.nativeElement=n}static __NG_ELEMENT_ID__=Yw})();Symbol;var ys=function(e){return e[e.OnPush=0]="OnPush",e[e.Default=1]="Default",e}(ys||{});const Ds=new Map;let e_=0;function sc(e){Ds.delete(e[19])}const uc="__ngContext__";function Be(e,t){ue(t)?(e[uc]=t[19],function n_(e){Ds.set(e[19],e)}(t)):e[uc]=t}function hh(e){return mh(e[12])}function gh(e){return mh(e[4])}function mh(e){for(;null!==e&&!De(e);)e=e[4];return e}let lc;const Ut=new _("",{providedIn:"root",factory:()=>I_}),I_="ng",dc=new _(""),fc=new _("",{providedIn:"platform",factory:()=>"unknown"}),wh=new _("",{providedIn:"root",factory:()=>function Mt(){if(void 0!==lc)return lc;if(typeof document<"u")return document;throw new I(210,!1)}().body?.querySelector("[ngCspNonce]")?.getAttribute("ngCspNonce")||null}),Th=new _("",{providedIn:"root",factory:()=>!1});var wc=function(e){return e[e.CHANGE_DETECTION=0]="CHANGE_DETECTION",e[e.AFTER_NEXT_RENDER=1]="AFTER_NEXT_RENDER",e}(wc||{});const yr=new _(""),kh=new Set;let _c=(()=>{class e{impl=null;execute(){this.impl?.execute()}static \u0275prov=j({token:e,providedIn:"root",factory:()=>new e})}return e})();function cg(e,t){const n=e.contentQueries;if(null!==n){const r=F(null);try{for(let o=0;o<n.length;o+=2){const s=n[o+1];if(-1!==s){const a=e.data[s];ss(n[o]),a.contentQueries(2,t[s],s)}}}finally{F(r)}}}function Vc(e,t,n){ss(0);const r=F(null);try{t(e,n)}finally{F(r)}}function jc(e,t,n){if(wu(t)){const r=F(null);try{const i=t.directiveEnd;for(let s=t.directiveStart;s<i;s++){const a=e.data[s];a.contentQueries&&a.contentQueries(1,n[s],s)}}finally{F(r)}}}var et=function(e){return e[e.Emulated=0]="Emulated",e[e.None=2]="None",e[e.ShadowDom=3]="ShadowDom",e}(et||{});function KM(e,t,n){let r=e.length;for(;;){const o=e.indexOf(t,n);if(-1===o)return o;if(0===o||e.charCodeAt(o-1)<=32){const i=t.length;if(o+i===r||e.charCodeAt(o+i)<=32)return o}n=o+1}}const Rg="ng-template";function JM(e,t,n,r){let o=0;if(r){for(;o<t.length&&"string"==typeof t[o];o+=2)if("class"===t[o]&&-1!==KM(t[o+1].toLowerCase(),n,0))return!0}else if(Wc(e))return!1;if(o=t.indexOf(1,o),o>-1){let i;for(;++o<t.length&&"string"==typeof(i=t[o]);)if(i.toLowerCase()===n)return!0}return!1}function Wc(e){return 4===e.type&&e.value!==Rg}function XM(e,t,n){return t===(4!==e.type||n?e.value:Rg)}function eb(e,t,n){let r=4;const o=e.attrs,i=null!==o?function rb(e){for(let t=0;t<e.length;t++)if(Sp(e[t]))return t;return e.length}(o):0;let s=!1;for(let a=0;a<t.length;a++){const u=t[a];if("number"!=typeof u){if(!s)if(4&r){if(r=2|1&r,""!==u&&!XM(e,u,n)||""===u&&1===t.length){if(gt(r))return!1;s=!0}}else if(8&r){if(null===o||!JM(e,o,u,n)){if(gt(r))return!1;s=!0}}else{const c=t[++a],l=tb(u,o,Wc(e),n);if(-1===l){if(gt(r))return!1;s=!0;continue}if(""!==c){let d;if(d=l>i?"":o[l+1].toLowerCase(),2&r&&c!==d){if(gt(r))return!1;s=!0}}}}else{if(!s&&!gt(r)&&!gt(u))return!1;if(s&&gt(u))continue;s=!1,r=u|1&r}}return gt(r)||s}function gt(e){return!(1&e)}function tb(e,t,n,r){if(null===t)return-1;let o=0;if(r||!n){let i=!1;for(;o<t.length;){const s=t[o];if(s===e)return o;if(3===s||6===s)i=!0;else{if(1===s||2===s){let a=t[++o];for(;"string"==typeof a;)a=t[++o];continue}if(4===s)break;if(0===s){o+=4;continue}}o+=i?1:2}return-1}return function ob(e,t){let n=e.indexOf(4);if(n>-1)for(n++;n<e.length;){const r=e[n];if("number"==typeof r)return-1;if(r===t)return n;n++}return-1}(t,e)}function Fg(e,t,n=!1){for(let r=0;r<t.length;r++)if(eb(e,t[r],n))return!0;return!1}function Og(e,t){return e?":not("+t.trim()+")":t}function sb(e){let t=e[0],n=1,r=2,o="",i=!1;for(;n<e.length;){let s=e[n];if("string"==typeof s)if(2&r){const a=e[++n];o+="["+s+(a.length>0?'="'+a+'"':"")+"]"}else 8&r?o+="."+s:4&r&&(o+=" "+s);else""!==o&&!gt(s)&&(t+=Og(i,o),o=""),r=s,i=i||!gt(r);n++}return""!==o&&(t+=Og(i,o)),t}const R={};function Vs(e,t,n){return e.createElement(t,n)}function An(e,t,n,r,o){e.insertBefore(t,n,r,o)}function Lg(e,t,n){e.appendChild(t,n)}function Vg(e,t,n,r,o){null!==r?An(e,t,n,r,o):Lg(e,t,n)}function Bg(e,t,n){const{mergedAttrs:r,classes:o,styles:i}=n;null!==r&&function Cw(e,t,n){let r=0;for(;r<n.length;){const o=n[r];if("number"==typeof o){if(0!==o)break;r++;const i=n[r++],s=n[r++],a=n[r++];e.setAttribute(t,s,a,i)}else{const i=o,s=n[++r];Np(i)?e.setProperty(t,i,s):e.setAttribute(t,i,s),r++}}}(e,t,r),null!==o&&function lb(e,t,n){""===n?e.removeAttribute(t,"class"):e.setAttribute(t,"class",n)}(e,t,o),null!==i&&function cb(e,t,n){e.setAttribute(t,"style",n)}(e,t,i)}function Yc(e,t,n,r,o,i,s,a,u,c,l){const d=C+r,p=d+o,f=function db(e,t){const n=[];for(let r=0;r<t;r++)n.push(r<e?null:R);return n}(d,p),h="function"==typeof c?c():c;return f[1]={type:e,blueprint:f,template:n,queries:null,viewQuery:a,declTNode:t,data:f.slice().fill(null,d),bindingStartIndex:d,expandoStartIndex:p,hostBindingOpCodes:null,firstCreatePass:!0,firstUpdatePass:!0,staticViewQueries:!1,staticContentQueries:!1,preOrderHooks:null,preOrderCheckHooks:null,contentHooks:null,contentCheckHooks:null,viewHooks:null,viewCheckHooks:null,destroyHooks:null,cleanup:null,contentQueries:null,components:null,directiveRegistry:"function"==typeof i?i():i,pipeRegistry:"function"==typeof s?s():s,firstChild:null,schemas:u,consts:h,incompleteFirstPass:!1,ssrId:l}}function js(e,t,n,r,o,i,s,a,u,c,l){const d=t.blueprint.slice();return d[0]=o,d[2]=1228|r,(null!==c||e&&2048&e[2])&&(d[2]|=2048),dp(d),d[3]=d[14]=e,d[8]=n,d[10]=s||e&&e[10],d[T]=a||e&&e[T],d[9]=u||e&&e[9]||null,d[5]=i,d[19]=function t_(){return e_++}(),d[6]=l,d[20]=c,d[15]=2==t.type?e[15]:d,d}function Kc(e){let t=16;return e.signals?t=4096:e.onPush&&(t=64),t}function Uo(e,t,n,r){if(0===n)return-1;const o=t.length;for(let i=0;i<n;i++)t.push(r),e.blueprint.push(r),e.data.push(null);return o}var Bs=function(e){return e[e.None=0]="None",e[e.SignalBased=1]="SignalBased",e[e.HasDecoratorInputTransform=2]="HasDecoratorInputTransform",e}(Bs||{});function Xc(e,t,n,r){const o=F(null);try{const[i,s,a]=e.inputs[n];let u=null;!!(s&Bs.SignalBased)&&(u=t[i][Me]),null!==u&&void 0!==u.transformFn?r=u.transformFn(r):null!==a&&(r=a.call(t,r)),null!==e.setInput?e.setInput(t,u,r,n,i):ip(t,u,i,r)}finally{F(o)}}function Ug(e,t,n,r,o){const i=function _e(){return k.lFrame.selectedIndex}(),s=2&r;try{bn(-1),s&&t.length>C&&function $g(e,t,n,r){if(!r)if(3&~t[2]){const i=e.preOrderHooks;null!==i&&us(t,i,0,n)}else{const i=e.preOrderCheckHooks;null!==i&&as(t,i,n)}bn(n)}(e,t,C,!1),n(r,o)}finally{bn(i)}}function Hs(e,t,n){(function Eb(e,t,n){const r=n.directiveStart,o=n.directiveEnd;ft(n)&&function fb(e,t,n){const r=Ne(t,e),o=function Hg(e){const t=e.tView;return null===t||t.incompleteFirstPass?e.tView=Yc(1,null,e.template,e.decls,e.vars,e.directiveDefs,e.pipeDefs,e.viewQuery,e.schemas,e.consts,e.id):t}(n),i=e[10].rendererFactory,s=function Jc(e,t){return e[12]?e[13][4]=t:e[12]=t,e[13]=t,t}(e,js(e,o,null,Kc(n),r,t,null,i.createRenderer(r,n),null,null,null));e[t.index]=s}(t,n,e.data[r+n.componentOffset]),e.firstCreatePass||ls(n,t);const i=n.initialInputs;for(let s=r;s<o;s++){const a=e.data[s],u=Io(t,e,s,n);Be(u,t),null!==i&&wb(0,s-r,u,a,0,i),Qe(a)&&(Ae(n.index,t)[8]=Io(t,e,s,n))}})(e,t,n),!(64&~n.flags)&&function Ib(e,t,n){const r=n.directiveStart,o=n.directiveEnd,i=n.index,s=function lw(){return k.lFrame.currentDirectiveIndex}();try{bn(i);for(let a=r;a<o;a++){const u=e.data[a],c=t[a];ju(a),(null!==u.hostBindings||0!==u.hostVars||null!==u.hostAttrs)&&Cb(u,c)}}finally{bn(-1),ju(s)}}(e,t,n)}let qg=()=>null;function Cb(e,t){null!==e.hostBindings&&e.hostBindings(1,t)}function tl(e,t){const n=e.directiveRegistry;let r=null;if(n)for(let o=0;o<n.length;o++){const i=n[o];Fg(t,i.selectors,!1)&&(r??=[],Qe(i)?r.unshift(i):r.push(i))}return r}function wb(e,t,n,r,o,i){const s=i[t];if(null!==s)for(let a=0;a<s.length;a+=2)Xc(r,n,s[a],s[a+1])}function ol(e,t,n,r,o){const i=e.inputs?.[r],s=e.hostDirectiveInputs?.[r];let a=!1;if(s)for(let u=0;u<s.length;u+=2){const c=s[u];Xc(t.data[c],n[c],s[u+1],o),a=!0}if(i)for(const u of i)Xc(t.data[u],n[u],r,o),a=!0;return a}function _b(e,t){const n=Ae(t,e),r=n[1];!function Mb(e,t){for(let n=t.length;n<e.blueprint.length;n++)t.push(e.blueprint[n])}(r,n);const o=n[0];null!==o&&null===n[6]&&(n[6]=null),$s(r,n,n[8])}function $s(e,t,n){$u(t);try{const r=e.viewQuery;null!==r&&Vc(1,r,n);const o=e.template;null!==o&&Ug(e,t,o,1,n),e.firstCreatePass&&(e.firstCreatePass=!1),t[18]?.finishViewCreation(e),e.staticContentQueries&&cg(e,t),e.staticViewQueries&&Vc(2,e.viewQuery,n);const i=e.components;null!==i&&function bb(e,t){for(let n=0;n<t.length;n++)_b(e,t[n])}(t,i)}catch(r){throw e.firstCreatePass&&(e.incompleteFirstPass=!0,e.firstCreatePass=!1),r}finally{t[2]&=-5,Uu()}}function sl(e,t){return undefined(e,t)}var on=function(e){return e[e.Important=1]="Important",e[e.DashCase=2]="DashCase",e}(on||{});function sn(e){return!(32&~e.flags)}function Ar(e,t,n,r,o){if(null!=r){let i,s=!1;De(r)?i=r:ue(r)&&(s=!0,r=r[0]);const a=$(r);0===e&&null!==n?null==o?Lg(t,n,a):An(t,n,a,o||null,!0):1===e&&null!==n?An(t,n,a,o||null,!0):2===e?function $o(e,t,n){e.removeChild(null,t,n)}(t,a,s):3===e&&t.destroyNode(a),null!=i&&function Rb(e,t,n,r,o){const i=n[7];i!==$(n)&&Ar(t,e,r,i,o);for(let a=10;a<n.length;a++){const u=n[a];qs(u[1],u,e,t,r,i)}}(t,e,i,n,o)}}function Zg(e,t){t[10].changeDetectionScheduler?.notify(9),qs(e,t,t[T],2,null,null)}function al(e,t){const n=e[9],r=n.indexOf(t);n.splice(r,1)}function ul(e,t){if(Lt(t))return;const n=F(null);try{t[2]&=-129,t[2]|=256,t[24]&&Si(t[24]),function kb(e,t){let n;if(null!=e&&null!=(n=e.destroyHooks))for(let r=0;r<n.length;r+=2){const o=t[n[r]];if(!(o instanceof Do)){const i=n[r+1];if(Array.isArray(i))for(let s=0;s<i.length;s+=2){const a=o[i[s]],u=i[s+1];try{u.call(a)}finally{}}else try{i.call(o)}finally{}}}}(e,t),function Ab(e,t){const n=e.cleanup,r=t[7];if(null!==n)for(let s=0;s<n.length-1;s+=2)if("string"==typeof n[s]){const a=n[s+3];a>=0?r[a]():r[-a].unsubscribe(),s+=2}else n[s].call(r[n[s+1]]);null!==r&&(t[7]=null);const o=t[21];if(null!==o){t[21]=null;for(let s=0;s<o.length;s++)(0,o[s])()}const i=t[23];if(null!==i){t[23]=null;for(const s of i)s.destroy()}}(e,t),1===t[1].type&&t[T].destroy();const r=t[16];if(null!==r&&De(t[3])){r!==t[3]&&al(r,t);const o=t[18];null!==o&&o.detachView(e)}sc(t)}finally{F(n)}}function cl(e,t,n){return function Qg(e,t,n){let r=t;for(;null!==r&&168&r.type;)r=(t=r).parent;if(null===r)return n[0];if(ft(r)){const{encapsulation:o}=e.data[r.directiveStart+r.componentOffset];if(o===et.None||o===et.Emulated)return null}return Ne(r,n)}(e,t.parent,n)}let Jg=function Kg(e,t,n){return 40&e.type?Ne(e,n):null};function Us(e,t,n,r){const o=cl(e,r,t),i=t[T],a=function Yg(e,t,n){return Jg(e,t,n)}(r.parent||t[5],r,t);if(null!=o)if(Array.isArray(n))for(let u=0;u<n.length;u++)Vg(i,o,n[u],a,!1);else Vg(i,o,n,a,!1)}function em(e,t){return null!==t?e[15][5].projection[t.projection]:null}function fl(e,t,n,r,o,i,s){for(;null!=n;){if(128===n.type){n=n.next;continue}const a=r[n.index],u=n.type;if(s&&0===t&&(a&&Be($(a),r),n.flags|=2),!sn(n))if(8&u)fl(e,t,n.child,r,o,i,!1),Ar(t,e,o,a,i);else if(32&u){const c=sl(n,r);let l;for(;l=c();)Ar(t,e,o,l,i);Ar(t,e,o,a,i)}else 16&u?tm(e,t,r,n,o,i):Ar(t,e,o,a,i);n=s?n.projectionNext:n.next}}function qs(e,t,n,r,o,i){fl(n,r,e.firstChild,t,o,i,!1)}function tm(e,t,n,r,o,i){const s=n[15],u=s[5].projection[r.projection];if(Array.isArray(u))for(let c=0;c<u.length;c++)Ar(t,e,o,u[c],i);else{let c=u;const l=s[3];(function bo(e){return!(128&~e.flags)})(r)&&(c.flags|=128),fl(e,t,c,l,o,i,!0)}}function kr(e,t,n,r,o=!1){for(;null!==n;){if(128===n.type){n=o?n.projectionNext:n.next;continue}const i=t[n.index];null!==i&&r.push($(i)),De(i)&&pl(i,r);const s=n.type;if(8&s)kr(e,t,n.child,r);else if(32&s){const a=sl(n,t);let u;for(;u=a();)r.push(u)}else if(16&s){const a=em(t,n);if(Array.isArray(a))r.push(...a);else{const u=Vt(t[15]);kr(u[1],u,a,r,!0)}}n=o?n.projectionNext:n.next}return r}function pl(e,t){for(let n=10;n<e.length;n++){const r=e[n],o=r[1].firstChild;null!==o&&kr(r[1],r,o,t)}e[7]!==e[0]&&t.push(e[7])}function nm(e){if(null!==e[25]){for(const t of e[25])t.impl.addSequence(t);e[25].length=0}}let rm=[];const Vb={...Un,consumerIsAlwaysLive:!0,kind:"template",consumerMarkedDirty:e=>{lr(e.lView)},consumerOnSignalRead(){this.lView[24]=this}},Bb={...Un,consumerIsAlwaysLive:!0,kind:"template",consumerMarkedDirty:e=>{let t=Vt(e.lView);for(;t&&!om(t[1]);)t=Vt(t);t&&Nu(t)},consumerOnSignalRead(){this.lView[24]=this}};function om(e){return 2!==e.type}function im(e){if(null===e[23])return;let t=!0;for(;t;){let n=!1;for(const r of e[23])r.dirty&&(n=!0,null===r.zone||Zone.current===r.zone?r.run():r.zone.run(()=>r.run()));t=n&&!!(8192&e[2])}}function Gs(e,t=!0,n=0){const o=e[10].rendererFactory;o.begin?.();try{!function $b(e,t){const n=mp();try{is(!0),hl(e,t);let r=0;for(;go(e);){if(100===r)throw new I(103,!1);r++,hl(e,1)}}finally{is(n)}}(e,n)}catch(s){throw t&&function rl(e,t){const n=e[9],r=n?n.get(ht,null):null;r&&r.handleError(t)}(e,s),s}finally{o.end?.()}}function am(e,t,n,r){if(Lt(t))return;const o=t[2];$u(t);let a=!0,u=null,c=null;om(e)?(c=function Ob(e){return e[24]??function Pb(e){const t=rm.pop()??Object.create(Vb);return t.lView=e,t}(e)}(t),u=qn(c)):null===function qa(){return fe}()?(a=!1,c=function jb(e){const t=e[24]??Object.create(Bb);return t.lView=e,t}(t),u=qn(c)):t[24]&&(Si(t[24]),t[24]=null);try{dp(t),function yp(e){return k.lFrame.bindingIndex=e}(e.bindingStartIndex),null!==n&&Ug(e,t,n,2,r);const l=!(3&~o);if(l){const f=e.preOrderCheckHooks;null!==f&&as(t,f,null)}else{const f=e.preOrderHooks;null!==f&&us(t,f,0,null),Gu(t,0)}if(function Ub(e){for(let t=hh(e);null!==t;t=gh(t)){if(!(2&t[2]))continue;const n=t[9];for(let r=0;r<n.length;r++)Nu(n[r])}}(t),im(t),um(t,0),null!==e.contentQueries&&cg(e,t),l){const f=e.contentCheckHooks;null!==f&&as(t,f)}else{const f=e.contentHooks;null!==f&&us(t,f,1),Gu(t,1)}!function Gb(e,t){const n=e.hostBindingOpCodes;if(null!==n)try{for(let r=0;r<n.length;r++){const o=n[r];if(o<0)bn(~o);else{const i=o,s=n[++r],a=n[++r];cw(s,i);const u=t[i];a(2,u)}}}finally{bn(-1)}}(e,t);const d=e.components;null!==d&&lm(t,d,0);const p=e.viewQuery;if(null!==p&&Vc(2,p,r),l){const f=e.viewCheckHooks;null!==f&&as(t,f)}else{const f=e.viewHooks;null!==f&&us(t,f,2),Gu(t,2)}if(!0===e.firstUpdatePass&&(e.firstUpdatePass=!1),t[22]){for(const f of t[22])f();t[22]=null}nm(t),t[2]&=-73}catch(l){throw lr(t),l}finally{null!==c&&(oo(c,u),a&&function Lb(e){e.lView[24]!==e&&(e.lView=null,rm.push(e))}(c)),Uu()}}function um(e,t){for(let n=hh(e);null!==n;n=gh(n))for(let r=10;r<n.length;r++)cm(n[r],t)}function qb(e,t,n){const r=Ae(t,e);cm(r,n)}function cm(e,t){Su(e)&&hl(e,t)}function hl(e,t){const r=e[1],o=e[2],i=e[24];let s=!!(0===t&&16&o);if(s||=!!(64&o&&0===t),s||=!!(1024&o),s||=!(!i?.dirty||!Ti(i)),s||=!1,i&&(i.dirty=!1),e[2]&=-9217,s)am(r,e,r.template,e[8]);else if(8192&o){im(e),um(e,1);const a=r.components;null!==a&&lm(e,a,1),nm(e)}}function lm(e,t,n){for(let r=0;r<t.length;r++)qb(e,t[r],n)}function Go(e,t){const n=mp()?64:1088;for(e[10].changeDetectionScheduler?.notify(t);e;){e[2]|=n;const r=Vt(e);if(Pt(e)&&!r)return e;e=r}return null}function zo(e,t){if(e.length<=10)return;const n=10+t,r=e[n];if(r){const o=r[16];null!==o&&o!==e&&al(o,r),t>0&&(e[n-1][4]=r[4]);const i=Gi(e,10+t);!function Wg(e,t){Zg(e,t),t[0]=null,t[5]=null}(r[1],r);const s=i[18];null!==s&&s.detachView(i[1]),r[3]=null,r[4]=null,r[2]&=-129}return r}let Wo=class{_lView;_cdRefInjectingView;notifyErrorHandler;_appRef=null;_attachedToViewContainer=!1;get rootNodes(){const t=this._lView,n=t[1];return kr(n,t,n.firstChild,[])}constructor(t,n,r=!0){this._lView=t,this._cdRefInjectingView=n,this.notifyErrorHandler=r}get context(){return this._lView[8]}set context(t){this._lView[8]=t}get destroyed(){return Lt(this._lView)}destroy(){if(this._appRef)this._appRef.detachView(this);else if(this._attachedToViewContainer){const t=this._lView[3];if(De(t)){const n=t[8],r=n?n.indexOf(this):-1;r>-1&&(zo(t,r),Gi(n,r))}this._attachedToViewContainer=!1}!function qo(e,t){if(Lt(t))return;const n=t[T];n.destroyNode&&qs(e,t,n,3,null,null),function Nb(e){let t=e[12];if(!t)return ul(e[1],e);for(;t;){let n=null;if(ue(t))n=t[12];else{const r=t[10];r&&(n=r)}if(!n){for(;t&&!t[4]&&t!==e;)ue(t)&&ul(t[1],t),t=t[3];null===t&&(t=e),ue(t)&&ul(t[1],t),n=t&&t[4]}t=n}}(t)}(this._lView[1],this._lView)}onDestroy(t){rs(this._lView,t)}markForCheck(){Go(this._cdRefInjectingView||this._lView,4)}detach(){this._lView[2]&=-129}reattach(){Au(this._lView),this._lView[2]|=128}detectChanges(){this._lView[2]|=1024,Gs(this._lView,this.notifyErrorHandler)}checkNoChanges(){}attachToViewContainerRef(){if(this._appRef)throw new I(902,!1);this._attachedToViewContainer=!0}detachFromAppRef(){this._appRef=null;const t=Pt(this._lView),n=this._lView[16];null!==n&&!t&&al(n,this._lView),Zg(this._lView[1],this._lView)}attachToAppRef(t){if(this._attachedToViewContainer)throw new I(902,!1);this._appRef=t;const n=Pt(this._lView),r=this._lView[16];null!==r&&!n&&function pm(e,t){const n=e[9],r=t[3];(ue(r)||t[15]!==r[3][15])&&(e[2]|=2),null===n?e[9]=[t]:n.push(t)}(r,this._lView),Au(this._lView)}};function Rr(e,t,n,r,o){let i=e.data[t];if(null===i)i=function vl(e,t,n,r,o){const i=pp(),s=Lu(),u=e.data[t]=function iT(e,t,n,r,o,i){let s=t?t.injectorIndex:-1,a=0;return function Mn(){return null!==k.skipHydrationRootTNode}()&&(a|=128),{type:n,index:r,insertBeforeIndex:null,injectorIndex:s,directiveStart:-1,directiveEnd:-1,directiveStylingLast:-1,componentOffset:-1,propertyBindings:null,flags:a,providerIndexes:0,value:o,attrs:i,mergedAttrs:null,localNames:null,initialInputs:null,inputs:null,hostDirectiveInputs:null,outputs:null,hostDirectiveOutputs:null,directiveToIndex:null,tView:null,next:null,prev:null,projectionNext:null,child:null,parent:t,projection:null,styles:null,stylesWithoutHost:null,residualStyles:void 0,classes:null,classesWithoutHost:null,residualClasses:void 0,classBindings:0,styleBindings:0}}(0,s?i:i&&i.parent,n,t,r,o);return function oT(e,t,n,r){null===e.firstChild&&(e.firstChild=t),null!==n&&(r?null==n.child&&null!==t.parent&&(n.child=t):null===n.next&&(n.next=t,t.prev=n))}(e,u,i,s),u}(e,t,n,r,o),function uw(){return k.lFrame.inI18n}()&&(i.flags|=32);else if(64&i.type){i.type=n,i.value=r,i.attrs=o;const s=function mo(){const e=k.lFrame,t=e.currentTNode;return e.isParent?t:t.parent}();i.injectorIndex=null===s?-1:s.injectorIndex}return pt(i,!0),i}let GT=class{},Pm=class{};class zT{resolveComponentFactory(t){throw Error(`No component factory found for ${me(t)}.`)}}let Xs=class{static NULL=new zT};class Tl{}let ZT=(()=>{class e{static \u0275prov=j({token:e,providedIn:"root",factory:()=>null})}return e})();const Nl={};class Lr{injector;parentInjector;constructor(t,n){this.injector=t,this.parentInjector=n}get(t,n,r){r=qi(r);const o=this.injector.get(t,Nl,r);return o!==Nl||n===Nl?o:this.parentInjector.get(t,n,r)}}function Al(e,t,n){let r=n?e.styles:null,o=n?e.classes:null,i=0;if(null!==t)for(let s=0;s<t.length;s++){const a=t[s];"number"==typeof a?i=a:1==i?o=Ka(o,a):2==i&&(r=Ka(r,a+": "+t[++s]+";"))}n?e.styles=r:e.stylesWithoutHost=r,n?e.classes=o:e.classesWithoutHost=o}function V(e,t=P.Default){const n=m();return null===n?H(e,t):Pp(O(),n,A(e),t)}function tS(e,t,n,r){const o=t.length;e.findHostDirectiveDefs(e,t,r),n.set(e,[o,t.length-1])}function nS(e,t,n){t.componentOffset=n,(e.components??=[]).push(t.index)}function jm(e,t,n,r){const o=0===e?n.inputs:n.outputs;for(const i in o)if(o.hasOwnProperty(i)){let s;s=0===e?t.inputs??={}:t.outputs??={},s[i]??=[],s[i].push(r),Hm(t,i)}}function Bm(e,t,n,r){const o=0===e?n.inputs:n.outputs;for(const i in o)if(o.hasOwnProperty(i)){const s=o[i];let a;a=0===e?t.hostDirectiveInputs??={}:t.hostDirectiveOutputs??={},a[s]??=[],a[s].push(r,i),Hm(t,s)}}function Hm(e,t){"class"===t?e.flags|=8:"style"===t&&(e.flags|=16)}function $m(e,t,n){const{attrs:r,inputs:o,hostDirectiveInputs:i}=e;if(null===r||!n&&null===o||n&&null===i||Wc(e))return e.initialInputs??=[],void e.initialInputs.push(null);let s=null,a=0;for(;a<r.length;){const u=r[a];if(0!==u)if(5!==u){if("number"==typeof u)break;if(!n&&o.hasOwnProperty(u)){const c=o[u];for(const l of c)if(l===t){s??=[],s.push(u,r[a+1]);break}}else if(n&&i.hasOwnProperty(u)){const c=i[u];for(let l=0;l<c.length;l+=2)if(c[l]===t){s??=[],s.push(c[l+1],r[a+1]);break}}a+=2}else a+=2;else a+=4}e.initialInputs??=[],e.initialInputs.push(s)}function iS(e,t,n,r,o){e.data[r]=o;const i=o.factory||(o.factory=mn(o.type)),s=new Do(i,Qe(o),V);e.blueprint[r]=s,n[r]=s,function sS(e,t,n,r,o){const i=o.hostBindings;if(i){let s=e.hostBindingOpCodes;null===s&&(s=e.hostBindingOpCodes=[]);const a=~t.index;(function aS(e){let t=e.length;for(;t>0;){const n=e[--t];if("number"==typeof n&&n<0)return n}return 0})(s)!=a&&s.push(a),s.push(n,r,i)}}(e,t,r,Uo(e,n,o.hostVars,R),o)}function uS(e,t,n){if(n){if(t.exportAs)for(let r=0;r<t.exportAs.length;r++)n[t.exportAs[r]]=e;Qe(t)&&(n[""]=e)}}function Um(e,t,n,r,o,i,s,a){const u=t.consts,l=Rr(t,e,2,r,Je(u,s));return i&&function kl(e,t,n,r,o){const i=null===r?null:{"":-1},s=o(e,n);if(null!==s){let a,u=null,c=null;const l=function eS(e){let t=null,n=!1;for(let s=0;s<e.length;s++){const a=e[s];if(0===s&&Qe(a)&&(t=a),null!==a.findHostDirectiveDefs){n=!0;break}}if(!n)return null;let r=null,o=null,i=null;for(const s of e)null!==s.findHostDirectiveDefs&&(r??=[],o??=new Map,i??=new Map,tS(s,r,i,o)),s===t&&(r??=[],r.push(s));return null!==r?(r.push(...null===t?e:e.slice(1)),[r,o,i]):null}(s);null===l?a=s:[a,u,c]=l,function rS(e,t,n,r,o,i,s){const a=r.length;let u=!1;for(let p=0;p<a;p++){const f=r[p];!u&&Qe(f)&&(u=!0,nS(e,n,p)),Ku(ls(n,t),e,f.type)}!function cS(e,t,n){e.flags|=1,e.directiveStart=t,e.directiveEnd=t+n,e.providerIndexes=t}(n,e.data.length,a);for(let p=0;p<a;p++){const f=r[p];f.providersResolver&&f.providersResolver(f)}let c=!1,l=!1,d=Uo(e,t,a,null);a>0&&(n.directiveToIndex=new Map);for(let p=0;p<a;p++){const f=r[p];if(n.mergedAttrs=fr(n.mergedAttrs,f.hostAttrs),iS(e,n,t,d,f),uS(d,f,o),null!==s&&s.has(f)){const[g,D]=s.get(f);n.directiveToIndex.set(f.type,[d,g+n.directiveStart,D+n.directiveStart])}else(null===i||!i.has(f))&&n.directiveToIndex.set(f.type,d);null!==f.contentQueries&&(n.flags|=4),(null!==f.hostBindings||null!==f.hostAttrs||0!==f.hostVars)&&(n.flags|=64);const h=f.type.prototype;!c&&(h.ngOnChanges||h.ngOnInit||h.ngDoCheck)&&((e.preOrderHooks??=[]).push(n.index),c=!0),!l&&(h.ngOnChanges||h.ngDoCheck)&&((e.preOrderCheckHooks??=[]).push(n.index),l=!0),d++}!function oS(e,t,n){for(let r=t.directiveStart;r<t.directiveEnd;r++){const o=e.data[r];if(null!==n&&n.has(o)){const i=n.get(o);Bm(0,t,i,r),Bm(1,t,i,r),$m(t,r,!0)}else jm(0,t,o,r),jm(1,t,o,r),$m(t,r,!1)}}(e,n,i)}(e,t,n,a,i,u,c)}null!==i&&null!==r&&function XT(e,t,n){const r=e.localNames=[];for(let o=0;o<t.length;o+=2){const i=n[t[o+1]];if(null==i)throw new I(-301,!1);r.push(t[o],i)}}(n,r,i)}(t,n,l,Je(u,a),o),l.mergedAttrs=fr(l.mergedAttrs,l.attrs),null!==l.attrs&&Al(l,l.attrs,!1),null!==l.mergedAttrs&&Al(l,l.mergedAttrs,!0),null!==t.queries&&t.queries.elementStart(t,l),l}function qm(e,t){(function qu(e,t){for(let n=t.directiveStart,r=t.directiveEnd;n<r;n++){const i=e.data[n].type.prototype,{ngAfterContentInit:s,ngAfterContentChecked:a,ngAfterViewInit:u,ngAfterViewChecked:c,ngOnDestroy:l}=i;s&&(e.contentHooks??=[]).push(-n,s),a&&((e.contentHooks??=[]).push(n,a),(e.contentCheckHooks??=[]).push(n,a)),u&&(e.viewHooks??=[]).push(-n,u),c&&((e.viewHooks??=[]).push(n,c),(e.viewCheckHooks??=[]).push(n,c)),null!=l&&(e.destroyHooks??=[]).push(n,l)}})(e,t),wu(t)&&e.queries.elementEnd(t)}class Gm extends Xs{ngModule;constructor(t){super(),this.ngModule=t}resolveComponentFactory(t){const n=L(t);return new ri(n,this.ngModule)}}class ri extends Pm{componentDef;ngModule;selector;componentType;ngContentSelectors;isBoundToModule;cachedInputs=null;cachedOutputs=null;get inputs(){return this.cachedInputs??=function lS(e){return Object.keys(e).map(t=>{const[n,r,o]=e[t],i={propName:n,templateName:t,isSignal:!!(r&Bs.SignalBased)};return o&&(i.transform=o),i})}(this.componentDef.inputs),this.cachedInputs}get outputs(){return this.cachedOutputs??=function dS(e){return Object.keys(e).map(t=>({propName:e[t],templateName:t}))}(this.componentDef.outputs),this.cachedOutputs}constructor(t,n){super(),this.componentDef=t,this.ngModule=n,this.componentType=t.type,this.selector=function ab(e){return e.map(sb).join(",")}(t.selectors),this.ngContentSelectors=t.ngContentSelectors??[],this.isBoundToModule=!!n}create(t,n,r,o){const i=F(null);try{const s=this.componentDef,a=r?["ng-version","19.2.14"]:function ub(e){const t=[],n=[];let r=1,o=2;for(;r<e.length;){let i=e[r];if("string"==typeof i)2===o?""!==i&&t.push(i,e[++r]):8===o&&n.push(i);else{if(!gt(o))break;o=i}r++}return n.length&&t.push(1,...n),t}(this.componentDef.selectors[0]),u=Yc(0,null,null,1,0,null,null,null,null,[a],null),c=function fS(e,t,n){let r=t instanceof lt?t:t?.injector;return r&&null!==e.getStandaloneInjector&&(r=e.getStandaloneInjector(r)||r),r?new Lr(n,r):n}(s,o||this.ngModule,t),l=function pS(e){const t=e.get(Tl,null);if(null===t)throw new I(407,!1);return{rendererFactory:t,sanitizer:e.get(ZT,null),changeDetectionScheduler:e.get($t,null)}}(c),d=l.rendererFactory.createRenderer(null,s),p=r?function hb(e,t,n,r){const i=r.get(Th,!1)||n===et.ShadowDom,s=e.selectRootElement(t,i);return function gb(e){qg(e)}(s),s}(d,r,s.encapsulation,c):function hS(e,t){const n=(e.selectors[0][0]||"div").toLowerCase();return Vs(t,n,"svg"===n?"svg":"math"===n?"math":null)}(s,d),f=js(null,u,null,512|Kc(s),null,null,l,d,c,null,null);f[C]=p,$u(f);let h=null;try{const g=Um(C,u,f,"#host",()=>[this.componentDef],!0,0);p&&(Bg(d,p,g),Be(p,f)),Hs(u,f,g),jc(u,g,f),qm(u,g),void 0!==n&&function mS(e,t,n){const r=e.projection=[];for(let o=0;o<t.length;o++){const i=n[o];r.push(null!=i&&i.length?Array.from(i):null)}}(g,this.ngContentSelectors,n),h=Ae(g.index,f),f[8]=h[8],$s(u,f,null)}catch(g){throw null!==h&&sc(h),sc(f),g}finally{Uu()}return new gS(this.componentType,f)}finally{F(i)}}}class gS extends GT{_rootLView;instance;hostView;changeDetectorRef;componentType;location;previousInputValues=null;_tNode;constructor(t,n){super(),this._rootLView=n,this._tNode=function wn(e,t){return e.data[t]}(n[1],C),this.location=hr(this._tNode,n),this.instance=Ae(this._tNode.index,n)[8],this.hostView=this.changeDetectorRef=new Wo(n,void 0,!1),this.componentType=t}setInput(t,n){const r=this._tNode;if(this.previousInputValues??=new Map,this.previousInputValues.has(t)&&Object.is(this.previousInputValues.get(t),n))return;const o=this._rootLView;ol(r,o[1],o,t,n),this.previousInputValues.set(t,n),Go(Ae(r.index,o),1)}get injector(){return new ce(this._tNode,this._rootLView)}destroy(){this.hostView.destroy()}onDestroy(t){this.hostView.onDestroy(t)}}let Fn=class{},VS=class{};class Ul extends Fn{ngModuleType;_parent;_bootstrapComponents=[];_r3Injector;instance;destroyCbs=[];componentFactoryResolver=new Gm(this);constructor(t,n,r,o=!0){super(),this.ngModuleType=t,this._parent=n;const i=function ze(e,t){const n=e[Ff]||null;if(!n&&!0===t)throw new Error(`Type ${me(e)} does not have '\u0275mod' property.`);return n}(t);this._bootstrapComponents=function bt(e){return e instanceof Function?e():e}(i.bootstrap),this._r3Injector=zp(t,n,[{provide:Fn,useValue:this},{provide:Xs,useValue:this.componentFactoryResolver},...r],me(t),new Set(["environment"])),o&&this.resolveInjectorInitializers()}resolveInjectorInitializers(){this._r3Injector.resolveInjectorInitializers(),this.instance=this._r3Injector.get(this.ngModuleType)}get injector(){return this._r3Injector}destroy(){const t=this._r3Injector;!t.destroyed&&t.destroy(),this.destroyCbs.forEach(n=>n()),this.destroyCbs=null}onDestroy(t){this.destroyCbs.push(t)}}class ql extends VS{moduleType;constructor(t){super(),this.moduleType=t}create(t){return new Ul(this.moduleType,t,[])}}class gy extends Fn{injector;componentFactoryResolver=new Gm(this);instance=null;constructor(t){super();const n=new vn([...t.providers,{provide:Fn,useValue:this},{provide:Xs,useValue:this.componentFactoryResolver}],t.parent||Yi(),t.debugName,new Set(["environment"]));this.injector=n,t.runEnvironmentInitializers&&n.resolveInjectorInitializers()}destroy(){this.injector.destroy()}onDestroy(t){this.injector.onDestroy(t)}}let HS=(()=>{class e{_injector;cachedInjectors=new Map;constructor(n){this._injector=n}getOrCreateStandaloneInjector(n){if(!n.standalone)return null;if(!this.cachedInjectors.has(n)){const r=pu(0,n.type),o=r.length>0?function my(e,t,n=null){return new gy({providers:e,parent:t,debugName:n,runEnvironmentInitializers:!0}).injector}([r],this._injector,`Standalone[${n.type.name}]`):null;this.cachedInjectors.set(n,o)}return this.cachedInjectors.get(n)}ngOnDestroy(){try{for(const n of this.cachedInjectors.values())null!==n&&n.destroy()}finally{this.cachedInjectors.clear()}}static \u0275prov=j({token:e,providedIn:"environment",factory:()=>new e(H(lt))})}return e})();function yy(e){return Rt(()=>{const t=function Dy(e){const t={};return{type:e.type,providersResolver:null,factory:null,hostBindings:e.hostBindings||null,hostVars:e.hostVars||0,hostAttrs:e.hostAttrs||null,contentQueries:e.contentQueries||null,declaredInputs:t,inputConfig:e.inputs||ut,exportAs:e.exportAs||null,standalone:e.standalone??!0,signals:!0===e.signals,selectors:e.selectors||q,viewQuery:e.viewQuery||null,features:e.features||null,setInput:null,findHostDirectiveDefs:null,hostDirectives:null,inputs:qS(e.inputs,t),outputs:GS(e.outputs),debugInfo:null}}(e),n={...t,decls:e.decls,vars:e.vars,template:e.template,consts:e.consts||null,ngContentSelectors:e.ngContentSelectors,onPush:e.changeDetection===ys.OnPush,directiveDefs:null,pipeDefs:null,dependencies:t.standalone&&e.dependencies||null,getStandaloneInjector:t.standalone?o=>o.get(HS).getOrCreateStandaloneInjector(n):null,getExternalStyles:null,signals:e.signals??!1,data:e.data||{},encapsulation:e.encapsulation||et.Emulated,styles:e.styles||q,_:null,schemas:e.schemas||null,tView:null,id:""};t.standalone&&function Ye(e){kh.has(e)||(kh.add(e),performance?.mark?.("mark_feature_usage",{detail:{feature:e}}))}("NgStandalone"),function vy(e){e.features?.forEach(t=>t(e))}(n);const r=e.dependencies;return n.directiveDefs=ta(r,!1),n.pipeDefs=ta(r,!0),n.id=function WS(e){let t=0;const r=[e.selectors,e.ngContentSelectors,e.hostVars,e.hostAttrs,"function"==typeof e.consts?"":e.consts,e.vars,e.decls,e.encapsulation,e.standalone,e.signals,e.exportAs,JSON.stringify(e.inputs),JSON.stringify(e.outputs),Object.getOwnPropertyNames(e.type.prototype),!!e.contentQueries,!!e.viewQuery];for(const i of r.join("|"))t=Math.imul(31,t)+i.charCodeAt(0)|0;return t+=2147483648,"c"+t}(n),n})}function $S(e){return L(e)||function we(e){return e[ru]||null}(e)}function US(e){return null!==e}function ii(e){return Rt(()=>({type:e.type,bootstrap:e.bootstrap||q,declarations:e.declarations||q,imports:e.imports||q,exports:e.exports||q,transitiveCompileScopes:null,schemas:e.schemas||null,id:e.id||null}))}function qS(e,t){if(null==e)return ut;const n={};for(const r in e)if(e.hasOwnProperty(r)){const o=e[r];let i,s,a,u;Array.isArray(o)?(a=o[0],i=o[1],s=o[2]??i,u=o[3]||null):(i=o,s=o,a=Bs.None,u=null),n[i]=[r,a,u],t[i]=s}return n}function GS(e){if(null==e)return ut;const t={};for(const n in e)e.hasOwnProperty(n)&&(t[e[n]]=n);return t}function ta(e,t){if(!e)return null;const n=t?We:$S;return()=>("function"==typeof e?e():e).map(r=>n(r)).filter(US)}const $y=new _(""),aa=new _("");let td,Xl=(()=>{class e{_ngZone;registry;_isZoneStable=!0;_callbacks=[];_taskTrackingZone=null;_destroyRef;constructor(n,r,o){this._ngZone=n,this.registry=r,Eu()&&(this._destroyRef=w(Ht,{optional:!0})??void 0),td||(function s0(e){td=e}(o),o.addToWindow(r)),this._watchAngularEvents(),n.run(()=>{this._taskTrackingZone=typeof Zone>"u"?null:Zone.current.get("TaskTrackingZone")})}_watchAngularEvents(){const n=this._ngZone.onUnstable.subscribe({next:()=>{this._isZoneStable=!1}}),r=this._ngZone.runOutsideAngular(()=>this._ngZone.onStable.subscribe({next:()=>{Y.assertNotInAngularZone(),queueMicrotask(()=>{this._isZoneStable=!0,this._runCallbacksIfReady()})}}));this._destroyRef?.onDestroy(()=>{n.unsubscribe(),r.unsubscribe()})}isStable(){return this._isZoneStable&&!this._ngZone.hasPendingMacrotasks}_runCallbacksIfReady(){if(this.isStable())queueMicrotask(()=>{for(;0!==this._callbacks.length;){let n=this._callbacks.pop();clearTimeout(n.timeoutId),n.doneCb()}});else{let n=this.getPendingTasks();this._callbacks=this._callbacks.filter(r=>!r.updateCb||!r.updateCb(n)||(clearTimeout(r.timeoutId),!1))}}getPendingTasks(){return this._taskTrackingZone?this._taskTrackingZone.macroTasks.map(n=>({source:n.source,creationLocation:n.creationLocation,data:n.data})):[]}addCallback(n,r,o){let i=-1;r&&r>0&&(i=setTimeout(()=>{this._callbacks=this._callbacks.filter(s=>s.timeoutId!==i),n()},r)),this._callbacks.push({doneCb:n,timeoutId:i,updateCb:o})}whenStable(n,r,o){if(o&&!this._taskTrackingZone)throw new Error('Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?');this.addCallback(n,r,o),this._runCallbacksIfReady()}registerApplication(n){this.registry.registerApplication(n,this)}unregisterApplication(n){this.registry.unregisterApplication(n)}findProviders(n,r,o){return[]}static \u0275fac=function(r){return new(r||e)(H(Y),H(ed),H(aa))};static \u0275prov=j({token:e,factory:e.\u0275fac})}return e})(),ed=(()=>{class e{_applications=new Map;registerApplication(n,r){this._applications.set(n,r)}unregisterApplication(n){this._applications.delete(n)}unregisterAllApplications(){this._applications.clear()}getTestability(n){return this._applications.get(n)||null}getAllTestabilities(){return Array.from(this._applications.values())}getAllRootElements(){return Array.from(this._applications.keys())}findTestabilityInTree(n,r=!0){return td?.findTestabilityInTree(this,n,r)??null}static \u0275fac=function(r){return new(r||e)};static \u0275prov=j({token:e,factory:e.\u0275fac,providedIn:"platform"})}return e})(),Uy=(()=>{class e{static \u0275prov=j({token:e,providedIn:"root",factory:()=>new a0})}return e})();class a0{queuedEffectCount=0;queues=new Map;schedule(t){this.enqueue(t)}remove(t){const r=this.queues.get(t.zone);r.has(t)&&(r.delete(t),this.queuedEffectCount--)}enqueue(t){const n=t.zone;this.queues.has(n)||this.queues.set(n,new Set);const r=this.queues.get(n);r.has(t)||(this.queuedEffectCount++,r.add(t))}flush(){for(;this.queuedEffectCount>0;)for(const[t,n]of this.queues)null===t?this.flushQueue(n):t.run(()=>this.flushQueue(n))}flushQueue(t){for(const n of t)t.delete(n),this.queuedEffectCount--,n.run()}}function nd(e){return!!e&&"function"==typeof e.then}function qy(e){return!!e&&"function"==typeof e.subscribe}const Gy=new _("");let zy=(()=>{class e{resolve;reject;initialized=!1;done=!1;donePromise=new Promise((n,r)=>{this.resolve=n,this.reject=r});appInits=w(Gy,{optional:!0})??[];injector=w(Te);constructor(){}runInitializers(){if(this.initialized)return;const n=[];for(const o of this.appInits){const i=Kf(this.injector,o);if(nd(i))n.push(i);else if(qy(i)){const s=new Promise((a,u)=>{i.subscribe({complete:a,error:u})});n.push(s)}}const r=()=>{this.done=!0,this.resolve()};Promise.all(n).then(()=>{r()}).catch(o=>{this.reject(o)}),0===n.length&&r(),this.initialized=!0}static \u0275fac=function(r){return new(r||e)};static \u0275prov=j({token:e,factory:e.\u0275fac,providedIn:"root"})}return e})();const ua=new _("");function Zy(e,t){return Array.isArray(t)?t.reduce(Zy,e):{...e,...t}}let rt=(()=>{class e{_runningTick=!1;_destroyed=!1;_destroyListeners=[];_views=[];internalErrorHandler=w(Qw);afterRenderManager=w(_c);zonelessEnabled=w(Co);rootEffectScheduler=w(Uy);dirtyFlags=0;tracingSnapshot=null;externalTestViews=new Set;afterTick=new ao;get allViews(){return[...this.externalTestViews.keys(),...this._views]}get destroyed(){return this._destroyed}componentTypes=[];components=[];isStable=w(pr).hasPendingTasks.pipe(function JI(e,t){return function(r){if("function"!=typeof e)throw new TypeError("argument is not a function. Are you looking for `mapTo()`?");return r.lift(new XI(e,t))}}(n=>!n));constructor(){w(yr,{optional:!0})}whenStable(){let n;return new Promise(r=>{n=this.isStable.subscribe({next:o=>{o&&r()}})}).finally(()=>{n.unsubscribe()})}_injector=w(lt);_rendererFactory=null;get injector(){return this._injector}bootstrap(n,r){return this.bootstrapImpl(n,r)}bootstrapImpl(n,r,o=Te.NULL){const i=n instanceof Pm;if(!this._injector.get(zy).done)throw new I(405,"");let a;a=i?n:this._injector.get(Xs).resolveComponentFactory(n),this.componentTypes.push(a.componentType);const u=function u0(e){return e.isBoundToModule}(a)?void 0:this._injector.get(Fn),l=a.create(o,[],r||a.selector,u),d=l.location.nativeElement,p=l.injector.get($y,null);return p?.registerApplication(d),l.onDestroy(()=>{this.detachView(l.hostView),ca(this.components,l),p?.unregisterApplication(d)}),this._loadComponent(l),l}tick(){this.zonelessEnabled||(this.dirtyFlags|=1),this._tick()}_tick(){null!==this.tracingSnapshot?this.tracingSnapshot.run(wc.CHANGE_DETECTION,this.tickImpl):this.tickImpl()}tickImpl=()=>{if(this._runningTick)throw new I(101,!1);const n=F(null);try{this._runningTick=!0,this.synchronize()}catch(r){this.internalErrorHandler(r)}finally{this._runningTick=!1,this.tracingSnapshot?.dispose(),this.tracingSnapshot=null,F(n),this.afterTick.next()}};synchronize(){null===this._rendererFactory&&!this._injector.destroyed&&(this._rendererFactory=this._injector.get(Tl,null,{optional:!0}));let n=0;for(;0!==this.dirtyFlags&&n++<10;)this.synchronizeOnce()}synchronizeOnce(){if(16&this.dirtyFlags&&(this.dirtyFlags&=-17,this.rootEffectScheduler.flush()),7&this.dirtyFlags){const n=!!(1&this.dirtyFlags);this.dirtyFlags&=-8,this.dirtyFlags|=8;for(let{_lView:r,notifyErrorHandler:o}of this.allViews)l0(r,o,n,this.zonelessEnabled);if(this.dirtyFlags&=-5,this.syncDirtyFlagsWithViews(),23&this.dirtyFlags)return}else this._rendererFactory?.begin?.(),this._rendererFactory?.end?.();8&this.dirtyFlags&&(this.dirtyFlags&=-9,this.afterRenderManager.execute()),this.syncDirtyFlagsWithViews()}syncDirtyFlagsWithViews(){this.allViews.some(({_lView:n})=>go(n))?this.dirtyFlags|=2:this.dirtyFlags&=-8}attachView(n){const r=n;this._views.push(r),r.attachToAppRef(this)}detachView(n){const r=n;ca(this._views,r),r.detachFromAppRef()}_loadComponent(n){this.attachView(n.hostView),this.tick(),this.components.push(n),this._injector.get(ua,[]).forEach(o=>o(n))}ngOnDestroy(){if(!this._destroyed)try{this._destroyListeners.forEach(n=>n()),this._views.slice().forEach(n=>n.destroy())}finally{this._destroyed=!0,this._views=[],this._destroyListeners=[]}}onDestroy(n){return this._destroyListeners.push(n),()=>ca(this._destroyListeners,n)}destroy(){if(this._destroyed)throw new I(406,!1);const n=this._injector;n.destroy&&!n.destroyed&&n.destroy()}get viewCount(){return this._views.length}static \u0275fac=function(r){return new(r||e)};static \u0275prov=j({token:e,factory:e.\u0275fac,providedIn:"root"})}return e})();function ca(e,t){const n=e.indexOf(t);n>-1&&e.splice(n,1)}function l0(e,t,n,r){(n||go(e))&&Gs(e,t,n&&!r?0:1)}function ld(e,t,n,r,o){ol(t,e,n,o?"class":"style",r)}function pa(e,t,n,r){const o=m(),i=S(),s=C+e,a=o[T],u=i.firstCreatePass?Um(s,i,o,t,tl,function Pu(){return k.bindingsEnabled}(),n,r):i.data[s],c=RD(i,o,u,a,t,e);o[s]=c;const l=ts(u);return pt(u,!0),Bg(a,c,u),!sn(u)&&yo()&&Us(i,o,c,u),(0===function JC(){return k.lFrame.elementDepthCount}()||l)&&Be(c,o),function XC(){k.lFrame.elementDepthCount++}(),l&&(Hs(i,o,u),jc(i,u,o)),null!==r&&function el(e,t,n=Ne){const r=t.localNames;if(null!==r){let o=t.index+1;for(let i=0;i<r.length;i+=2){const s=r[i+1],a=-1===s?n(t,e):e[s];e[o++]=a}}}(o,u),pa}function ha(){let e=O();Lu()?function Vu(){k.lFrame.isParent=!1}():(e=e.parent,pt(e,!1));const t=e;(function tw(e){return k.skipHydrationRootTNode===e})(t)&&function iw(){k.skipHydrationRootTNode=null}(),function ew(){k.lFrame.elementDepthCount--}();const n=S();return n.firstCreatePass&&qm(n,t),null!=t.classesWithoutHost&&function Ew(e){return!!(8&e.flags)}(t)&&ld(n,t,m(),t.classesWithoutHost,!0),null!=t.stylesWithoutHost&&function Iw(e){return!!(16&e.flags)}(t)&&ld(n,t,m(),t.stylesWithoutHost,!1),ha}let RD=(e,t,n,r,o,i)=>(wt(!0),Vs(r,o,function _p(){return k.lFrame.currentNamespace}()));const ga="en-US";let BD=ga;function ov(e,t,n){return function r(o){if(o===Function)return n;Go(ft(e)?Ae(e.index,t):t,5);const s=t[8];let a=iv(t,s,n,o),u=r.__ngNextListenerFn__;for(;u;)a=iv(t,s,u,o)&&a,u=u.__ngNextListenerFn__;return a}}function iv(e,t,n,r){const o=F(null);try{return!1!==n(r)}catch(i){return function kk(e,t){const n=e[9],r=n?n.get(ht,null):null;r&&r.handleError(t)}(e,i),!1}finally{F(o)}}function sv(e,t,n,r,o,i){const a=t[1],l=t[n][a.data[n].outputs[r]],d=a.firstCreatePass?Ru(a):null,p=xu(t),f=l.subscribe(i),h=p.length;p.push(i,f),d&&d.push(o,e.index,h,-(h+1))}function vd(e,t,n,r){const o=m(),i=S(),s=O();return function Ed(e,t,n,r,o,i,s){const a=ts(r),c=e.firstCreatePass?Ru(e):null,l=xu(t);let d=!0;if(3&r.type||s){const p=Ne(r,t),f=s?s(p):p,h=l.length,g=s?E=>s($(E[r.index])):r.index;let D=null;if(!s&&a&&(D=function xk(e,t,n,r){const o=e.cleanup;if(null!=o)for(let i=0;i<o.length-1;i+=2){const s=o[i];if(s===n&&o[i+1]===r){const a=t[7],u=o[i+2];return a.length>u?a[u]:null}"string"==typeof s&&(i+=2)}return null}(e,t,o,r.index)),null!==D)(D.__ngLastListenerFn__||D).__ngNextListenerFn__=i,D.__ngLastListenerFn__=i,d=!1;else{i=ov(r,t,i);const E=n.listen(f,o,i);l.push(i,E),c&&c.push(o,g,h,h+1)}}else i=ov(r,t,i);if(d){const p=r.outputs?.[o],f=r.hostDirectiveOutputs?.[o];if(f&&f.length)for(let h=0;h<f.length;h+=2)sv(r,t,f[h],f[h+1],o,i);if(p&&p.length)for(const h of p)sv(r,t,h,o,o,i)}}(i,o,o[T],s,e,t,r),vd}let Tv=(e,t,n,r,o)=>(wt(!0),function Zc(e,t){return e.createText(t)}(t[T],r)),lR=(()=>{class e{zone=w(Y);changeDetectionScheduler=w($t);applicationRef=w(rt);_onMicrotaskEmptySubscription;initialize(){this._onMicrotaskEmptySubscription||(this._onMicrotaskEmptySubscription=this.zone.onMicrotaskEmpty.subscribe({next:()=>{this.changeDetectionScheduler.runningTick||this.zone.run(()=>{this.applicationRef.tick()})}}))}ngOnDestroy(){this._onMicrotaskEmptySubscription?.unsubscribe()}static \u0275fac=function(r){return new(r||e)};static \u0275prov=j({token:e,factory:e.\u0275fac,providedIn:"root"})}return e})();function kd({ngZoneFactory:e,ignoreChangesOutsideZone:t,scheduleInRootZone:n}){return e??=()=>new Y({...xd(),scheduleInRootZone:n}),[{provide:Y,useFactory:e},{provide:ct,multi:!0,useFactory:()=>{const r=w(lR,{optional:!0});return()=>r.initialize()}},{provide:ct,multi:!0,useFactory:()=>{const r=w(fR);return()=>{r.initialize()}}},!0===t?{provide:Qp,useValue:!0}:[],{provide:ec,useValue:n??Wp}]}function xd(e){return{enableLongStackTrace:!1,shouldCoalesceEventChangeDetection:e?.eventCoalescing??!1,shouldCoalesceRunChangeDetection:e?.runCoalescing??!1}}let fR=(()=>{class e{subscription=new Ce;initialized=!1;zone=w(Y);pendingTasks=w(pr);initialize(){if(this.initialized)return;this.initialized=!0;let n=null;!this.zone.isStable&&!this.zone.hasPendingMacrotasks&&!this.zone.hasPendingMicrotasks&&(n=this.pendingTasks.add()),this.zone.runOutsideAngular(()=>{this.subscription.add(this.zone.onStable.subscribe(()=>{Y.assertNotInAngularZone(),queueMicrotask(()=>{null!==n&&!this.zone.hasPendingMacrotasks&&!this.zone.hasPendingMicrotasks&&(this.pendingTasks.remove(n),n=null)})}))}),this.subscription.add(this.zone.onUnstable.subscribe(()=>{Y.assertInAngularZone(),n??=this.pendingTasks.add()}))}ngOnDestroy(){this.subscription.unsubscribe()}static \u0275fac=function(r){return new(r||e)};static \u0275prov=j({token:e,factory:e.\u0275fac,providedIn:"root"})}return e})(),vi=(()=>{class e{appRef=w(rt);taskService=w(pr);ngZone=w(Y);zonelessEnabled=w(Co);tracing=w(yr,{optional:!0});disableScheduling=w(Qp,{optional:!0})??!1;zoneIsDefined=typeof Zone<"u"&&!!Zone.root.run;schedulerTickApplyArgs=[{data:{__scheduler_tick__:!0}}];subscriptions=new Ce;angularZoneId=this.zoneIsDefined?this.ngZone._inner?.get(gs):null;scheduleInRootZone=!this.zonelessEnabled&&this.zoneIsDefined&&(w(ec,{optional:!0})??!1);cancelScheduledCallback=null;useMicrotaskScheduler=!1;runningTick=!1;pendingRenderTaskId=null;constructor(){this.subscriptions.add(this.appRef.afterTick.subscribe(()=>{this.runningTick||this.cleanup()})),this.subscriptions.add(this.ngZone.onUnstable.subscribe(()=>{this.runningTick||this.cleanup()})),this.disableScheduling||=!this.zonelessEnabled&&(this.ngZone instanceof oc||!this.zoneIsDefined)}notify(n){if(!this.zonelessEnabled&&5===n)return;let r=!1;switch(n){case 0:this.appRef.dirtyFlags|=2;break;case 3:case 2:case 4:case 5:case 1:this.appRef.dirtyFlags|=4;break;case 6:case 13:this.appRef.dirtyFlags|=2,r=!0;break;case 12:this.appRef.dirtyFlags|=16,r=!0;break;case 11:r=!0;break;default:this.appRef.dirtyFlags|=8}if(this.appRef.tracingSnapshot=this.tracing?.snapshot(this.appRef.tracingSnapshot)??null,!this.shouldScheduleTick(r))return;const o=this.useMicrotaskScheduler?Jp:Kp;this.pendingRenderTaskId=this.taskService.add(),this.cancelScheduledCallback=this.scheduleInRootZone?Zone.root.run(()=>o(()=>this.tick())):this.ngZone.runOutsideAngular(()=>o(()=>this.tick()))}shouldScheduleTick(n){return!(this.disableScheduling&&!n||this.appRef.destroyed||null!==this.pendingRenderTaskId||this.runningTick||this.appRef._runningTick||!this.zonelessEnabled&&this.zoneIsDefined&&Zone.current.get(gs+this.angularZoneId))}tick(){if(this.runningTick||this.appRef.destroyed)return;if(0===this.appRef.dirtyFlags)return void this.cleanup();!this.zonelessEnabled&&7&this.appRef.dirtyFlags&&(this.appRef.dirtyFlags|=1);const n=this.taskService.add();try{this.ngZone.run(()=>{this.runningTick=!0,this.appRef._tick()},void 0,this.schedulerTickApplyArgs)}catch(r){throw this.taskService.remove(n),r}finally{this.cleanup()}this.useMicrotaskScheduler=!0,Jp(()=>{this.useMicrotaskScheduler=!1,this.taskService.remove(n)})}ngOnDestroy(){this.subscriptions.unsubscribe(),this.cleanup()}cleanup(){if(this.runningTick=!1,this.cancelScheduledCallback?.(),this.cancelScheduledCallback=null,null!==this.pendingRenderTaskId){const n=this.pendingRenderTaskId;this.pendingRenderTaskId=null,this.taskService.remove(n)}}static \u0275fac=function(r){return new(r||e)};static \u0275prov=j({token:e,factory:e.\u0275fac,providedIn:"root"})}return e})();const dn=new _("",{providedIn:"root",factory:()=>w(dn,P.Optional|P.SkipSelf)||function pR(){return typeof $localize<"u"&&$localize.locale||ga}()}),Ca=new _(""),vR=new _("");function Ei(e){return!e.moduleRef}let mE=(()=>{class e{_injector;_modules=[];_destroyListeners=[];_destroyed=!1;constructor(n){this._injector=n}bootstrapModuleFactory(n,r){const o=r?.scheduleInRootZone,s=r?.ignoreChangesOutsideZone,a=[kd({ngZoneFactory:()=>function Zw(e="zone.js",t){return"noop"===e?new oc:"zone.js"===e?new Y(t):e}(r?.ngZone,{...xd({eventCoalescing:r?.ngZoneEventCoalescing,runCoalescing:r?.ngZoneRunCoalescing}),scheduleInRootZone:o}),ignoreChangesOutsideZone:s}),{provide:$t,useExisting:vi}],u=function BS(e,t,n){return new Ul(e,t,n,!1)}(n.moduleType,this.injector,a);return function gE(e){const t=Ei(e)?e.r3Injector:e.moduleRef.injector,n=t.get(Y);return n.run(()=>{Ei(e)?e.r3Injector.resolveInjectorInitializers():e.moduleRef.resolveInjectorInitializers();const r=t.get(ht,null);let o;if(n.runOutsideAngular(()=>{o=n.onError.subscribe({next:i=>{r.handleError(i)}})}),Ei(e)){const i=()=>t.destroy(),s=e.platformInjector.get(Ca);s.add(i),t.onDestroy(()=>{o.unsubscribe(),s.delete(i)})}else{const i=()=>e.moduleRef.destroy(),s=e.platformInjector.get(Ca);s.add(i),e.moduleRef.onDestroy(()=>{ca(e.allPlatformModules,e.moduleRef),o.unsubscribe(),s.delete(i)})}return function IR(e,t,n){try{const r=n();return nd(r)?r.catch(o=>{throw t.runOutsideAngular(()=>e.handleError(o)),o}):r}catch(r){throw t.runOutsideAngular(()=>e.handleError(r)),r}}(r,n,()=>{const i=t.get(zy);return i.runInitializers(),i.donePromise.then(()=>{if(function WA(e){"string"==typeof e&&(BD=e.toLowerCase().replace(/_/g,"-"))}(t.get(dn,ga)||ga),!t.get(vR,!0))return Ei(e)?t.get(rt):(e.allPlatformModules.push(e.moduleRef),e.moduleRef);if(Ei(e)){const u=t.get(rt);return void 0!==e.rootComponent&&u.bootstrap(e.rootComponent),u}return function ER(e,t){const n=e.injector.get(rt);if(e._bootstrapComponents.length>0)e._bootstrapComponents.forEach(r=>n.bootstrap(r));else{if(!e.instance.ngDoBootstrap)throw new I(-403,!1);e.instance.ngDoBootstrap(n)}t.push(e)}(e.moduleRef,e.allPlatformModules),e.moduleRef})})})}({moduleRef:u,allPlatformModules:this._modules,platformInjector:this.injector})}bootstrapModule(n,r=[]){const o=Zy({},r);return function cR(e,t,n){const r=new ql(n);return Promise.resolve(r)}(0,0,n).then(i=>this.bootstrapModuleFactory(i,o))}onDestroy(n){this._destroyListeners.push(n)}get injector(){return this._injector}destroy(){if(this._destroyed)throw new I(404,!1);this._modules.slice().forEach(r=>r.destroy()),this._destroyListeners.forEach(r=>r());const n=this._injector.get(Ca,null);n&&(n.forEach(r=>r()),n.clear()),this._destroyed=!0}get destroyed(){return this._destroyed}static \u0275fac=function(r){return new(r||e)(H(Te))};static \u0275prov=j({token:e,factory:e.\u0275fac,providedIn:"platform"})}return e})(),fn=null;const yE=new _("");function DE(e,t,n=[]){const r=`Platform: ${t}`,o=new _(r);return(i=[])=>{let s=Fd();if(!s||s.injector.get(yE,!1)){const a=[...n,...i,{provide:o,useValue:!0}];e?e(a):function CR(e){if(fn&&!fn.get(yE,!1))throw new I(400,!1);(function Wy(){!function OI(e){mf=e}(()=>{throw new I(600,!1)})})(),fn=e;const t=e.get(mE);(function EE(e){const t=e.get(dc,null);Kf(e,()=>{t?.forEach(n=>n())})})(e)}(function vE(e=[],t){return Te.create({name:t,providers:[{provide:mu,useValue:"platform"},{provide:Ca,useValue:new Set([()=>fn=null])},...e]})}(a,r))}return function wR(){const t=Fd();if(!t)throw new I(401,!1);return t}()}}function Fd(){return fn?.get(mE)??null}const VR=DE(null,"core",[]);let jR=(()=>{class e{constructor(n){}static \u0275fac=function(r){return new(r||e)(H(rt))};static \u0275mod=ii({type:e});static \u0275inj=Kn({})}return e})();let KE=null;function $d(){return KE}class SF{}function XE(e){return"server"===e}const Bn=new _("");let W1=(()=>{class e{static \u0275fac=function(r){return new(r||e)};static \u0275mod=ii({type:e});static \u0275inj=Kn({})}return e})();const rf=new _("");let hI=(()=>{class e{_zone;_plugins;_eventNameToPlugin=new Map;constructor(n,r){this._zone=r,n.forEach(o=>{o.manager=this}),this._plugins=n.slice().reverse()}addEventListener(n,r,o,i){return this._findPluginFor(r).addEventListener(n,r,o,i)}getZone(){return this._zone}_findPluginFor(n){let r=this._eventNameToPlugin.get(n);if(r)return r;if(r=this._plugins.find(i=>i.supports(n)),!r)throw new I(5101,!1);return this._eventNameToPlugin.set(n,r),r}static \u0275fac=function(r){return new(r||e)(H(rf),H(Y))};static \u0275prov=j({token:e,factory:e.\u0275fac})}return e})();class gI{_doc;constructor(t){this._doc=t}manager}const $a="ng-app-id";function mI(e){for(const t of e)t.remove()}function yI(e,t){const n=t.createElement("style");return n.textContent=e,n}function of(e,t){const n=t.createElement("link");return n.setAttribute("rel","stylesheet"),n.setAttribute("href",e),n}let DI=(()=>{class e{doc;appId;nonce;inline=new Map;external=new Map;hosts=new Set;isServer;constructor(n,r,o,i={}){this.doc=n,this.appId=r,this.nonce=o,this.isServer=XE(i),function Z1(e,t,n,r){const o=e.head?.querySelectorAll(`style[${$a}="${t}"],link[${$a}="${t}"]`);if(o)for(const i of o)i.removeAttribute($a),i instanceof HTMLLinkElement?r.set(i.href.slice(i.href.lastIndexOf("/")+1),{usage:0,elements:[i]}):i.textContent&&n.set(i.textContent,{usage:0,elements:[i]})}(n,r,this.inline,this.external),this.hosts.add(n.head)}addStyles(n,r){for(const o of n)this.addUsage(o,this.inline,yI);r?.forEach(o=>this.addUsage(o,this.external,of))}removeStyles(n,r){for(const o of n)this.removeUsage(o,this.inline);r?.forEach(o=>this.removeUsage(o,this.external))}addUsage(n,r,o){const i=r.get(n);i?i.usage++:r.set(n,{usage:1,elements:[...this.hosts].map(s=>this.addElement(s,o(n,this.doc)))})}removeUsage(n,r){const o=r.get(n);o&&(o.usage--,o.usage<=0&&(mI(o.elements),r.delete(n)))}ngOnDestroy(){for(const[,{elements:n}]of[...this.inline,...this.external])mI(n);this.hosts.clear()}addHost(n){this.hosts.add(n);for(const[r,{elements:o}]of this.inline)o.push(this.addElement(n,yI(r,this.doc)));for(const[r,{elements:o}]of this.external)o.push(this.addElement(n,of(r,this.doc)))}removeHost(n){this.hosts.delete(n)}addElement(n,r){return this.nonce&&r.setAttribute("nonce",this.nonce),this.isServer&&r.setAttribute($a,this.appId),n.appendChild(r)}static \u0275fac=function(r){return new(r||e)(H(Bn),H(Ut),H(wh,8),H(fc))};static \u0275prov=j({token:e,factory:e.\u0275fac})}return e})();const sf={svg:"http://www.w3.org/2000/svg",xhtml:"http://www.w3.org/1999/xhtml",xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/",math:"http://www.w3.org/1998/Math/MathML"},af=/%COMP%/g,eO=new _("",{providedIn:"root",factory:()=>!0});function EI(e,t){return t.map(n=>n.replace(af,e))}let II=(()=>{class e{eventManager;sharedStylesHost;appId;removeStylesOnCompDestroy;doc;platformId;ngZone;nonce;tracingService;rendererByCompId=new Map;defaultRenderer;platformIsServer;constructor(n,r,o,i,s,a,u,c=null,l=null){this.eventManager=n,this.sharedStylesHost=r,this.appId=o,this.removeStylesOnCompDestroy=i,this.doc=s,this.platformId=a,this.ngZone=u,this.nonce=c,this.tracingService=l,this.platformIsServer=XE(a),this.defaultRenderer=new uf(n,s,u,this.platformIsServer,this.tracingService)}createRenderer(n,r){if(!n||!r)return this.defaultRenderer;this.platformIsServer&&r.encapsulation===et.ShadowDom&&(r={...r,encapsulation:et.Emulated});const o=this.getOrCreateRenderer(n,r);return o instanceof wI?o.applyToHost(n):o instanceof cf&&o.applyStyles(),o}getOrCreateRenderer(n,r){const o=this.rendererByCompId;let i=o.get(r.id);if(!i){const s=this.doc,a=this.ngZone,u=this.eventManager,c=this.sharedStylesHost,l=this.removeStylesOnCompDestroy,d=this.platformIsServer,p=this.tracingService;switch(r.encapsulation){case et.Emulated:i=new wI(u,c,r,this.appId,l,s,a,d,p);break;case et.ShadowDom:return new oO(u,c,n,r,s,a,this.nonce,d,p);default:i=new cf(u,c,r,l,s,a,d,p)}o.set(r.id,i)}return i}ngOnDestroy(){this.rendererByCompId.clear()}componentReplaced(n){this.rendererByCompId.delete(n)}static \u0275fac=function(r){return new(r||e)(H(hI),H(DI),H(Ut),H(eO),H(Bn),H(fc),H(Y),H(wh),H(yr,8))};static \u0275prov=j({token:e,factory:e.\u0275fac})}return e})();class uf{eventManager;doc;ngZone;platformIsServer;tracingService;data=Object.create(null);throwOnSyntheticProps=!0;constructor(t,n,r,o,i){this.eventManager=t,this.doc=n,this.ngZone=r,this.platformIsServer=o,this.tracingService=i}destroy(){}destroyNode=null;createElement(t,n){return n?this.doc.createElementNS(sf[n]||n,t):this.doc.createElement(t)}createComment(t){return this.doc.createComment(t)}createText(t){return this.doc.createTextNode(t)}appendChild(t,n){(CI(t)?t.content:t).appendChild(n)}insertBefore(t,n,r){t&&(CI(t)?t.content:t).insertBefore(n,r)}removeChild(t,n){n.remove()}selectRootElement(t,n){let r="string"==typeof t?this.doc.querySelector(t):t;if(!r)throw new I(-5104,!1);return n||(r.textContent=""),r}parentNode(t){return t.parentNode}nextSibling(t){return t.nextSibling}setAttribute(t,n,r,o){if(o){n=o+":"+n;const i=sf[o];i?t.setAttributeNS(i,n,r):t.setAttribute(n,r)}else t.setAttribute(n,r)}removeAttribute(t,n,r){if(r){const o=sf[r];o?t.removeAttributeNS(o,n):t.removeAttribute(`${r}:${n}`)}else t.removeAttribute(n)}addClass(t,n){t.classList.add(n)}removeClass(t,n){t.classList.remove(n)}setStyle(t,n,r,o){o&(on.DashCase|on.Important)?t.style.setProperty(n,r,o&on.Important?"important":""):t.style[n]=r}removeStyle(t,n,r){r&on.DashCase?t.style.removeProperty(n):t.style[n]=""}setProperty(t,n,r){null!=t&&(t[n]=r)}setValue(t,n){t.nodeValue=n}listen(t,n,r,o){if("string"==typeof t&&!(t=$d().getGlobalEventTarget(this.doc,t)))throw new I(5102,!1);let i=this.decoratePreventDefault(r);return this.tracingService?.wrapEventListener&&(i=this.tracingService.wrapEventListener(t,n,i)),this.eventManager.addEventListener(t,n,i,o)}decoratePreventDefault(t){return n=>{if("__ngUnwrap__"===n)return t;!1===(this.platformIsServer?this.ngZone.runGuarded(()=>t(n)):t(n))&&n.preventDefault()}}}function CI(e){return"TEMPLATE"===e.tagName&&void 0!==e.content}class oO extends uf{sharedStylesHost;hostEl;shadowRoot;constructor(t,n,r,o,i,s,a,u,c){super(t,i,s,u,c),this.sharedStylesHost=n,this.hostEl=r,this.shadowRoot=r.attachShadow({mode:"open"}),this.sharedStylesHost.addHost(this.shadowRoot);let l=o.styles;l=EI(o.id,l);for(const p of l){const f=document.createElement("style");a&&f.setAttribute("nonce",a),f.textContent=p,this.shadowRoot.appendChild(f)}const d=o.getExternalStyles?.();if(d)for(const p of d){const f=of(p,i);a&&f.setAttribute("nonce",a),this.shadowRoot.appendChild(f)}}nodeOrShadowRoot(t){return t===this.hostEl?this.shadowRoot:t}appendChild(t,n){return super.appendChild(this.nodeOrShadowRoot(t),n)}insertBefore(t,n,r){return super.insertBefore(this.nodeOrShadowRoot(t),n,r)}removeChild(t,n){return super.removeChild(null,n)}parentNode(t){return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(t)))}destroy(){this.sharedStylesHost.removeHost(this.shadowRoot)}}class cf extends uf{sharedStylesHost;removeStylesOnCompDestroy;styles;styleUrls;constructor(t,n,r,o,i,s,a,u,c){super(t,i,s,a,u),this.sharedStylesHost=n,this.removeStylesOnCompDestroy=o;let l=r.styles;this.styles=c?EI(c,l):l,this.styleUrls=r.getExternalStyles?.(c)}applyStyles(){this.sharedStylesHost.addStyles(this.styles,this.styleUrls)}destroy(){this.removeStylesOnCompDestroy&&this.sharedStylesHost.removeStyles(this.styles,this.styleUrls)}}class wI extends cf{contentAttr;hostAttr;constructor(t,n,r,o,i,s,a,u,c){const l=o+"-"+r.id;super(t,n,r,i,s,a,u,c,l),this.contentAttr=function tO(e){return"_ngcontent-%COMP%".replace(af,e)}(l),this.hostAttr=function nO(e){return"_nghost-%COMP%".replace(af,e)}(l)}applyToHost(t){this.applyStyles(),this.setAttribute(t,this.hostAttr,"")}createElement(t,n){const r=super.createElement(t,n);return super.setAttribute(r,this.contentAttr,""),r}}class lf extends SF{supportsDOMEvents=!0;static makeCurrent(){!function TF(e){KE??=e}(new lf)}onAndCancel(t,n,r,o){return t.addEventListener(n,r,o),()=>{t.removeEventListener(n,r,o)}}dispatchEvent(t,n){t.dispatchEvent(n)}remove(t){t.remove()}createElement(t,n){return(n=n||this.getDefaultDocument()).createElement(t)}createHtmlDocument(){return document.implementation.createHTMLDocument("fakeTitle")}getDefaultDocument(){return document}isElementNode(t){return t.nodeType===Node.ELEMENT_NODE}isShadowRoot(t){return t instanceof DocumentFragment}getGlobalEventTarget(t,n){return"window"===n?window:"document"===n?t:"body"===n?t.body:null}getBaseHref(t){const n=function iO(){return wi=wi||document.head.querySelector("base"),wi?wi.getAttribute("href"):null}();return null==n?null:function sO(e){return new URL(e,document.baseURI).pathname}(n)}resetBaseElement(){wi=null}getUserAgent(){return window.navigator.userAgent}getCookie(t){return function kF(e,t){t=encodeURIComponent(t);for(const n of e.split(";")){const r=n.indexOf("="),[o,i]=-1==r?[n,""]:[n.slice(0,r),n.slice(r+1)];if(o.trim()===t)return decodeURIComponent(i)}return null}(document.cookie,t)}}let wi=null,uO=(()=>{class e{build(){return new XMLHttpRequest}static \u0275fac=function(r){return new(r||e)};static \u0275prov=j({token:e,factory:e.\u0275fac})}return e})(),cO=(()=>{class e extends gI{constructor(n){super(n)}supports(n){return!0}addEventListener(n,r,o,i){return n.addEventListener(r,o,i),()=>this.removeEventListener(n,r,o,i)}removeEventListener(n,r,o,i){return n.removeEventListener(r,o,i)}static \u0275fac=function(r){return new(r||e)(H(Bn))};static \u0275prov=j({token:e,factory:e.\u0275fac})}return e})();const _I=["alt","control","meta","shift"],lO={"\b":"Backspace","\t":"Tab","\x7f":"Delete","\x1b":"Escape",Del:"Delete",Esc:"Escape",Left:"ArrowLeft",Right:"ArrowRight",Up:"ArrowUp",Down:"ArrowDown",Menu:"ContextMenu",Scroll:"ScrollLock",Win:"OS"},dO={alt:e=>e.altKey,control:e=>e.ctrlKey,meta:e=>e.metaKey,shift:e=>e.shiftKey};let fO=(()=>{class e extends gI{constructor(n){super(n)}supports(n){return null!=e.parseEventName(n)}addEventListener(n,r,o,i){const s=e.parseEventName(r),a=e.eventCallback(s.fullKey,o,this.manager.getZone());return this.manager.getZone().runOutsideAngular(()=>$d().onAndCancel(n,s.domEventName,a,i))}static parseEventName(n){const r=n.toLowerCase().split("."),o=r.shift();if(0===r.length||"keydown"!==o&&"keyup"!==o)return null;const i=e._normalizeKey(r.pop());let s="",a=r.indexOf("code");if(a>-1&&(r.splice(a,1),s="code."),_I.forEach(c=>{const l=r.indexOf(c);l>-1&&(r.splice(l,1),s+=c+".")}),s+=i,0!=r.length||0===i.length)return null;const u={};return u.domEventName=o,u.fullKey=s,u}static matchEventFullKeyCode(n,r){let o=lO[n.key]||n.key,i="";return r.indexOf("code.")>-1&&(o=n.code,i="code."),!(null==o||!o)&&(o=o.toLowerCase()," "===o?o="space":"."===o&&(o="dot"),_I.forEach(s=>{s!==o&&(0,dO[s])(n)&&(i+=s+".")}),i+=o,i===r)}static eventCallback(n,r,o){return i=>{e.matchEventFullKeyCode(i,n)&&o.runGuarded(()=>r(i))}}static _normalizeKey(n){return"esc"===n?"escape":n}static \u0275fac=function(r){return new(r||e)(H(Bn))};static \u0275prov=j({token:e,factory:e.\u0275fac})}return e})();const bI=[{provide:fc,useValue:"browser"},{provide:dc,useValue:function pO(){lf.makeCurrent()},multi:!0},{provide:Bn,useFactory:function gO(){return function E_(e){lc=e}(document),document}}],mO=DE(VR,"browser",bI),TI=[{provide:aa,useClass:class aO{addToWindow(t){ae.getAngularTestability=(r,o=!0)=>{const i=t.findTestabilityInTree(r,o);if(null==i)throw new I(5103,!1);return i},ae.getAllAngularTestabilities=()=>t.getAllTestabilities(),ae.getAllAngularRootElements=()=>t.getAllRootElements(),ae.frameworkStabilizers||(ae.frameworkStabilizers=[]),ae.frameworkStabilizers.push(r=>{const o=ae.getAllAngularTestabilities();let i=o.length;const s=function(){i--,0==i&&r()};o.forEach(a=>{a.whenStable(s)})})}findTestabilityInTree(t,n,r){return null==n?null:t.getTestability(n)??(r?$d().isShadowRoot(n)?this.findTestabilityInTree(t,n.host,!0):this.findTestabilityInTree(t,n.parentElement,!0):null)}}},{provide:$y,useClass:Xl,deps:[Y,ed,aa]},{provide:Xl,useClass:Xl,deps:[Y,ed,aa]}],SI=[{provide:mu,useValue:"root"},{provide:ht,useFactory:function hO(){return new ht}},{provide:rf,useClass:cO,multi:!0,deps:[Bn]},{provide:rf,useClass:fO,multi:!0,deps:[Bn]},II,DI,hI,{provide:Tl,useExisting:II},{provide:class RF{},useClass:uO},[]];let yO=(()=>{class e{constructor(){}static \u0275fac=function(r){return new(r||e)};static \u0275mod=ii({type:e});static \u0275inj=Kn({providers:[...SI,...TI],imports:[W1,jR]})}return e})(),DO=(()=>{class e{constructor(){this.title="Teste",this.target="https://www.figma.com",this.handleMessage=n=>{if("https://www.figma.com"===n.origin&&(console.log("Message received from Figma plugin:",n.data),n.data.pluginMessage)){const{type:r,data:o}=n.data.pluginMessage;switch(r){case"selection-changed":this.handleSelectionChanged(o);break;case"node-created":this.handleNodeCreated(o);break;case"plugin-data":this.handlePluginData(o);break;default:console.log("Unknown message type:",r)}}}}ngOnInit(){console.log("AppComponent initialized"),this.setupMessageListener()}ngOnDestroy(){window.removeEventListener("message",this.handleMessage)}setupMessageListener(){window.addEventListener("message",this.handleMessage.bind(this))}handleSelectionChanged(n){console.log("Selection changed:",n)}handleNodeCreated(n){console.log("Node created:",n)}handlePluginData(n){console.log("Plugin data received:",n)}testeClick(){console.log("Button clicked, sending message to Figma plugin"),parent.postMessage({pluginMessage:{type:"create-rectangles",count:10}},this.target)}static{this.\u0275fac=function(r){return new(r||e)}}static{this.\u0275cmp=yy({type:e,selectors:[["app-root"]],standalone:!1,decls:2,vars:0,consts:[[3,"click"]],template:function(r,o){1&r&&(pa(0,"button",0),vd("click",function(){return o.testeClick()}),function bv(e,t=""){const n=m(),r=S(),o=e+C,i=r.firstCreatePass?Rr(r,o,1,t,null):r.data[o],s=Tv(r,n,i,t,e);n[o]=s,yo()&&Us(r,n,s,i),pt(i,!1)}(1,"Toggle"),ha())},encapsulation:2})}}return e})(),vO=(()=>{class e{static{this.\u0275fac=function(r){return new(r||e)}}static{this.\u0275mod=ii({type:e,bootstrap:[DO]})}static{this.\u0275inj=Kn({imports:[yO]})}}return e})();mO().bootstrapModule(vO).catch(e=>console.error(e))}},to=>{to(to.s=434)}]);
})();

// This entry needs to be wrapped in an IIFE because it needs to be in strict mode.
(() => {
"use strict";
/*!***************************!*\
  !*** ./dist/polyfills.js ***!
  \***************************/
(self.webpackChunkng_figma_plugin_boilerplate=self.webpackChunkng_figma_plugin_boilerplate||[]).push([[461],{50:(te,Q,me)=>{me(935)},935:()=>{const te=globalThis;function Q(e){return(te.__Zone_symbol_prefix||"__zone_symbol__")+e}const Ee=Object.getOwnPropertyDescriptor,Ne=Object.defineProperty,Ze=Object.getPrototypeOf,_t=Object.create,dt=Array.prototype.slice,Le="addEventListener",Ie="removeEventListener",Me=Q(Le),Ae=Q(Ie),ae="true",le="false",ve=Q("");function je(e,r){return Zone.current.wrap(e,r)}function He(e,r,c,t,i){return Zone.current.scheduleMacroTask(e,r,c,t,i)}const j=Q,we=typeof window<"u",be=we?window:void 0,$=we&&be||globalThis;function xe(e,r){for(let c=e.length-1;c>=0;c--)"function"==typeof e[c]&&(e[c]=je(e[c],r+"_"+c));return e}function Ue(e){return!e||!1!==e.writable&&!("function"==typeof e.get&&typeof e.set>"u")}const We=typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope,Ce=!("nw"in $)&&typeof $.process<"u"&&"[object process]"===$.process.toString(),Ve=!Ce&&!We&&!(!we||!be.HTMLElement),qe=typeof $.process<"u"&&"[object process]"===$.process.toString()&&!We&&!(!we||!be.HTMLElement),De={},gt=j("enable_beforeunload"),Xe=function(e){if(!(e=e||$.event))return;let r=De[e.type];r||(r=De[e.type]=j("ON_PROPERTY"+e.type));const c=this||e.target||$,t=c[r];let i;return Ve&&c===be&&"error"===e.type?(i=t&&t.call(this,e.message,e.filename,e.lineno,e.colno,e.error),!0===i&&e.preventDefault()):(i=t&&t.apply(this,arguments),"beforeunload"===e.type&&$[gt]&&"string"==typeof i?e.returnValue=i:null!=i&&!i&&e.preventDefault()),i};function Ye(e,r,c){let t=Ee(e,r);if(!t&&c&&Ee(c,r)&&(t={enumerable:!0,configurable:!0}),!t||!t.configurable)return;const i=j("on"+r+"patched");if(e.hasOwnProperty(i)&&e[i])return;delete t.writable,delete t.value;const u=t.get,E=t.set,T=r.slice(2);let p=De[T];p||(p=De[T]=j("ON_PROPERTY"+T)),t.set=function(D){let _=this;!_&&e===$&&(_=$),_&&("function"==typeof _[p]&&_.removeEventListener(T,Xe),E?.call(_,null),_[p]=D,"function"==typeof D&&_.addEventListener(T,Xe,!1))},t.get=function(){let D=this;if(!D&&e===$&&(D=$),!D)return null;const _=D[p];if(_)return _;if(u){let R=u.call(this);if(R)return t.set.call(this,R),"function"==typeof D.removeAttribute&&D.removeAttribute(r),R}return null},Ne(e,r,t),e[i]=!0}function $e(e,r,c){if(r)for(let t=0;t<r.length;t++)Ye(e,"on"+r[t],c);else{const t=[];for(const i in e)"on"==i.slice(0,2)&&t.push(i);for(let i=0;i<t.length;i++)Ye(e,t[i],c)}}const re=j("originalInstance");function Pe(e){const r=$[e];if(!r)return;$[j(e)]=r,$[e]=function(){const i=xe(arguments,e);switch(i.length){case 0:this[re]=new r;break;case 1:this[re]=new r(i[0]);break;case 2:this[re]=new r(i[0],i[1]);break;case 3:this[re]=new r(i[0],i[1],i[2]);break;case 4:this[re]=new r(i[0],i[1],i[2],i[3]);break;default:throw new Error("Arg list too long.")}},fe($[e],r);const c=new r(function(){});let t;for(t in c)"XMLHttpRequest"===e&&"responseBlob"===t||function(i){"function"==typeof c[i]?$[e].prototype[i]=function(){return this[re][i].apply(this[re],arguments)}:Ne($[e].prototype,i,{set:function(u){"function"==typeof u?(this[re][i]=je(u,e+"."+i),fe(this[re][i],u)):this[re][i]=u},get:function(){return this[re][i]}})}(t);for(t in r)"prototype"!==t&&r.hasOwnProperty(t)&&($[e][t]=r[t])}function ue(e,r,c){let t=e;for(;t&&!t.hasOwnProperty(r);)t=Ze(t);!t&&e[r]&&(t=e);const i=j(r);let u=null;if(t&&(!(u=t[i])||!t.hasOwnProperty(i))&&(u=t[i]=t[r],Ue(t&&Ee(t,r)))){const T=c(u,i,r);t[r]=function(){return T(this,arguments)},fe(t[r],u)}return u}function kt(e,r,c){let t=null;function i(u){const E=u.data;return E.args[E.cbIdx]=function(){u.invoke.apply(this,arguments)},t.apply(E.target,E.args),u}t=ue(e,r,u=>function(E,T){const p=c(E,T);return p.cbIdx>=0&&"function"==typeof T[p.cbIdx]?He(p.name,T[p.cbIdx],p,i):u.apply(E,T)})}function fe(e,r){e[j("OriginalDelegate")]=r}let Ke=!1,Fe=!1;function pt(){if(Ke)return Fe;Ke=!0;try{const e=be.navigator.userAgent;(-1!==e.indexOf("MSIE ")||-1!==e.indexOf("Trident/")||-1!==e.indexOf("Edge/"))&&(Fe=!0)}catch{}return Fe}function Je(e){return"function"==typeof e}function Qe(e){return"number"==typeof e}const mt={useG:!0},ne={},et={},tt=new RegExp("^"+ve+"(\\w+)(true|false)$"),nt=j("propagationStopped");function rt(e,r){const c=(r?r(e):e)+le,t=(r?r(e):e)+ae,i=ve+c,u=ve+t;ne[e]={},ne[e][le]=i,ne[e][ae]=u}function yt(e,r,c,t){const i=t&&t.add||Le,u=t&&t.rm||Ie,E=t&&t.listeners||"eventListeners",T=t&&t.rmAll||"removeAllListeners",p=j(i),D="."+i+":",_="prependListener",R="."+_+":",M=function(y,h,H){if(y.isRemoved)return;const V=y.callback;let Y;"object"==typeof V&&V.handleEvent&&(y.callback=g=>V.handleEvent(g),y.originalDelegate=V);try{y.invoke(y,h,[H])}catch(g){Y=g}const F=y.options;return F&&"object"==typeof F&&F.once&&h[u].call(h,H.type,y.originalDelegate?y.originalDelegate:y.callback,F),Y};function x(y,h,H){if(!(h=h||e.event))return;const V=y||h.target||e,Y=V[ne[h.type][H?ae:le]];if(Y){const F=[];if(1===Y.length){const g=M(Y[0],V,h);g&&F.push(g)}else{const g=Y.slice();for(let U=0;U<g.length&&(!h||!0!==h[nt]);U++){const O=M(g[U],V,h);O&&F.push(O)}}if(1===F.length)throw F[0];for(let g=0;g<F.length;g++){const U=F[g];r.nativeScheduleMicroTask(()=>{throw U})}}}const z=function(y){return x(this,y,!1)},K=function(y){return x(this,y,!0)};function J(y,h){if(!y)return!1;let H=!0;h&&void 0!==h.useG&&(H=h.useG);const V=h&&h.vh;let Y=!0;h&&void 0!==h.chkDup&&(Y=h.chkDup);let F=!1;h&&void 0!==h.rt&&(F=h.rt);let g=y;for(;g&&!g.hasOwnProperty(i);)g=Ze(g);if(!g&&y[i]&&(g=y),!g||g[p])return!1;const U=h&&h.eventNameToString,O={},w=g[p]=g[i],b=g[j(u)]=g[u],S=g[j(E)]=g[E],ee=g[j(T)]=g[T];let W;h&&h.prepend&&(W=g[j(h.prepend)]=g[h.prepend]);const q=H?function(s){if(!O.isExisting)return w.call(O.target,O.eventName,O.capture?K:z,O.options)}:function(s){return w.call(O.target,O.eventName,s.invoke,O.options)},A=H?function(s){if(!s.isRemoved){const l=ne[s.eventName];let v;l&&(v=l[s.capture?ae:le]);const C=v&&s.target[v];if(C)for(let k=0;k<C.length;k++)if(C[k]===s){C.splice(k,1),s.isRemoved=!0,s.removeAbortListener&&(s.removeAbortListener(),s.removeAbortListener=null),0===C.length&&(s.allRemoved=!0,s.target[v]=null);break}}if(s.allRemoved)return b.call(s.target,s.eventName,s.capture?K:z,s.options)}:function(s){return b.call(s.target,s.eventName,s.invoke,s.options)},he=h?.diff||function(s,l){const v=typeof l;return"function"===v&&s.callback===l||"object"===v&&s.originalDelegate===l},_e=Zone[j("UNPATCHED_EVENTS")],oe=e[j("PASSIVE_EVENTS")],a=function(s,l,v,C,k=!1,Z=!1){return function(){const L=this||e;let I=arguments[0];h&&h.transferEventName&&(I=h.transferEventName(I));let G=arguments[1];if(!G)return s.apply(this,arguments);if(Ce&&"uncaughtException"===I)return s.apply(this,arguments);let B=!1;if("function"!=typeof G){if(!G.handleEvent)return s.apply(this,arguments);B=!0}if(V&&!V(s,G,L,arguments))return;const Te=!!oe&&-1!==oe.indexOf(I),ie=function f(s){if("object"==typeof s&&null!==s){const l={...s};return s.signal&&(l.signal=s.signal),l}return s}(function N(s,l){return l?"boolean"==typeof s?{capture:s,passive:!0}:s?"object"==typeof s&&!1!==s.passive?{...s,passive:!0}:s:{passive:!0}:s}(arguments[2],Te)),ke=ie?.signal;if(ke?.aborted)return;if(_e)for(let ce=0;ce<_e.length;ce++)if(I===_e[ce])return Te?s.call(L,I,G,ie):s.apply(this,arguments);const Be=!!ie&&("boolean"==typeof ie||ie.capture),at=!(!ie||"object"!=typeof ie)&&ie.once,It=Zone.current;let ze=ne[I];ze||(rt(I,U),ze=ne[I]);const lt=ze[Be?ae:le];let Oe,pe=L[lt],ut=!1;if(pe){if(ut=!0,Y)for(let ce=0;ce<pe.length;ce++)if(he(pe[ce],G))return}else pe=L[lt]=[];const ft=L.constructor.name,ht=et[ft];ht&&(Oe=ht[I]),Oe||(Oe=ft+l+(U?U(I):I)),O.options=ie,at&&(O.options.once=!1),O.target=L,O.capture=Be,O.eventName=I,O.isExisting=ut;const Re=H?mt:void 0;Re&&(Re.taskData=O),ke&&(O.options.signal=void 0);const se=It.scheduleEventTask(Oe,G,Re,v,C);if(ke){O.options.signal=ke;const ce=()=>se.zone.cancelTask(se);s.call(ke,"abort",ce,{once:!0}),se.removeAbortListener=()=>ke.removeEventListener("abort",ce)}return O.target=null,Re&&(Re.taskData=null),at&&(O.options.once=!0),"boolean"!=typeof se.options&&(se.options=ie),se.target=L,se.capture=Be,se.eventName=I,B&&(se.originalDelegate=G),Z?pe.unshift(se):pe.push(se),k?L:void 0}};return g[i]=a(w,D,q,A,F),W&&(g[_]=a(W,R,function(s){return W.call(O.target,O.eventName,s.invoke,O.options)},A,F,!0)),g[u]=function(){const s=this||e;let l=arguments[0];h&&h.transferEventName&&(l=h.transferEventName(l));const v=arguments[2],C=!!v&&("boolean"==typeof v||v.capture),k=arguments[1];if(!k)return b.apply(this,arguments);if(V&&!V(b,k,s,arguments))return;const Z=ne[l];let L;Z&&(L=Z[C?ae:le]);const I=L&&s[L];if(I)for(let G=0;G<I.length;G++){const B=I[G];if(he(B,k))return I.splice(G,1),B.isRemoved=!0,0!==I.length||(B.allRemoved=!0,s[L]=null,C||"string"!=typeof l)||(s[ve+"ON_PROPERTY"+l]=null),B.zone.cancelTask(B),F?s:void 0}return b.apply(this,arguments)},g[E]=function(){const s=this||e;let l=arguments[0];h&&h.transferEventName&&(l=h.transferEventName(l));const v=[],C=ot(s,U?U(l):l);for(let k=0;k<C.length;k++){const Z=C[k];v.push(Z.originalDelegate?Z.originalDelegate:Z.callback)}return v},g[T]=function(){const s=this||e;let l=arguments[0];if(l){h&&h.transferEventName&&(l=h.transferEventName(l));const v=ne[l];if(v){const Z=s[v[le]],L=s[v[ae]];if(Z){const I=Z.slice();for(let G=0;G<I.length;G++){const B=I[G];this[u].call(this,l,B.originalDelegate?B.originalDelegate:B.callback,B.options)}}if(L){const I=L.slice();for(let G=0;G<I.length;G++){const B=I[G];this[u].call(this,l,B.originalDelegate?B.originalDelegate:B.callback,B.options)}}}}else{const v=Object.keys(s);for(let C=0;C<v.length;C++){const Z=tt.exec(v[C]);let L=Z&&Z[1];L&&"removeListener"!==L&&this[T].call(this,L)}this[T].call(this,"removeListener")}if(F)return this},fe(g[i],w),fe(g[u],b),ee&&fe(g[T],ee),S&&fe(g[E],S),!0}let X=[];for(let y=0;y<c.length;y++)X[y]=J(c[y],t);return X}function ot(e,r){if(!r){const u=[];for(let E in e){const T=tt.exec(E);let p=T&&T[1];if(p&&(!r||p===r)){const D=e[E];if(D)for(let _=0;_<D.length;_++)u.push(D[_])}}return u}let c=ne[r];c||(rt(r),c=ne[r]);const t=e[c[le]],i=e[c[ae]];return t?i?t.concat(i):t.slice():i?i.slice():[]}function vt(e,r){const c=e.Event;c&&c.prototype&&r.patchMethod(c.prototype,"stopImmediatePropagation",t=>function(i,u){i[nt]=!0,t&&t.apply(i,u)})}const Se=j("zoneTask");function ge(e,r,c,t){let i=null,u=null;c+=t;const E={};function T(D){const _=D.data;_.args[0]=function(){return D.invoke.apply(this,arguments)};const R=i.apply(e,_.args);return Qe(R)?_.handleId=R:(_.handle=R,_.isRefreshable=Je(R.refresh)),D}function p(D){const{handle:_,handleId:R}=D.data;return u.call(e,_??R)}i=ue(e,r+=t,D=>function(_,R){if(Je(R[0])){const M={isRefreshable:!1,isPeriodic:"Interval"===t,delay:"Timeout"===t||"Interval"===t?R[1]||0:void 0,args:R},x=R[0];R[0]=function(){try{return x.apply(this,arguments)}finally{const{handle:H,handleId:V,isPeriodic:Y,isRefreshable:F}=M;!Y&&!F&&(V?delete E[V]:H&&(H[Se]=null))}};const z=He(r,R[0],M,T,p);if(!z)return z;const{handleId:K,handle:J,isRefreshable:X,isPeriodic:y}=z.data;if(K)E[K]=z;else if(J&&(J[Se]=z,X&&!y)){const h=J.refresh;J.refresh=function(){const{zone:H,state:V}=z;return"notScheduled"===V?(z._state="scheduled",H._updateTaskCount(z,1)):"running"===V&&(z._state="scheduling"),h.call(this)}}return J??K??z}return D.apply(e,R)}),u=ue(e,c,D=>function(_,R){const M=R[0];let x;Qe(M)?(x=E[M],delete E[M]):(x=M?.[Se],x?M[Se]=null:x=M),x?.type?x.cancelFn&&x.zone.cancelTask(x):D.apply(e,R)})}function st(e,r,c){if(!c||0===c.length)return r;const t=c.filter(u=>u.target===e);if(0===t.length)return r;const i=t[0].ignoreProperties;return r.filter(u=>-1===i.indexOf(u))}function it(e,r,c,t){e&&$e(e,st(e,r,c),t)}function Ge(e){return Object.getOwnPropertyNames(e).filter(r=>r.startsWith("on")&&r.length>2).map(r=>r.substring(2))}function Nt(e,r,c,t,i){const u=Zone.__symbol__(t);if(r[u])return;const E=r[u]=r[t];r[t]=function(T,p,D){return p&&p.prototype&&i.forEach(function(_){const R=`${c}.${t}::`+_,M=p.prototype;try{if(M.hasOwnProperty(_)){const x=e.ObjectGetOwnPropertyDescriptor(M,_);x&&x.value?(x.value=e.wrapWithCurrentZone(x.value,R),e._redefineProperty(p.prototype,_,x)):M[_]&&(M[_]=e.wrapWithCurrentZone(M[_],R))}else M[_]&&(M[_]=e.wrapWithCurrentZone(M[_],R))}catch{}}),E.call(r,T,p,D)},e.attachOriginToPatched(r[t],E)}const ct=function ye(){const e=globalThis,r=!0===e[Q("forceDuplicateZoneCheck")];if(e.Zone&&(r||"function"!=typeof e.Zone.__symbol__))throw new Error("Zone already loaded.");return e.Zone??=function me(){const e=te.performance;function r(N){e&&e.mark&&e.mark(N)}function c(N,d){e&&e.measure&&e.measure(N,d)}r("Zone");let t=(()=>{class N{static __symbol__=Q;static assertZonePatched(){if(te.Promise!==O.ZoneAwarePromise)throw new Error("Zone.js has detected that ZoneAwarePromise `(window|global).Promise` has been overwritten.\nMost likely cause is that a Promise polyfill has been loaded after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. If you must load one, do so before loading zone.js.)")}static get root(){let n=N.current;for(;n.parent;)n=n.parent;return n}static get current(){return b.zone}static get currentTask(){return S}static __load_patch(n,o,m=!1){if(O.hasOwnProperty(n)){const P=!0===te[Q("forceDuplicateZoneCheck")];if(!m&&P)throw Error("Already loaded patch: "+n)}else if(!te["__Zone_disable_"+n]){const P="Zone:"+n;r(P),O[n]=o(te,N,w),c(P,P)}}get parent(){return this._parent}get name(){return this._name}_parent;_name;_properties;_zoneDelegate;constructor(n,o){this._parent=n,this._name=o?o.name||"unnamed":"<root>",this._properties=o&&o.properties||{},this._zoneDelegate=new u(this,this._parent&&this._parent._zoneDelegate,o)}get(n){const o=this.getZoneWith(n);if(o)return o._properties[n]}getZoneWith(n){let o=this;for(;o;){if(o._properties.hasOwnProperty(n))return o;o=o._parent}return null}fork(n){if(!n)throw new Error("ZoneSpec required!");return this._zoneDelegate.fork(this,n)}wrap(n,o){if("function"!=typeof n)throw new Error("Expecting function got: "+n);const m=this._zoneDelegate.intercept(this,n,o),P=this;return function(){return P.runGuarded(m,this,arguments,o)}}run(n,o,m,P){b={parent:b,zone:this};try{return this._zoneDelegate.invoke(this,n,o,m,P)}finally{b=b.parent}}runGuarded(n,o=null,m,P){b={parent:b,zone:this};try{try{return this._zoneDelegate.invoke(this,n,o,m,P)}catch(q){if(this._zoneDelegate.handleError(this,q))throw q}}finally{b=b.parent}}runTask(n,o,m){if(n.zone!=this)throw new Error("A task can only be run in the zone of creation! (Creation: "+(n.zone||J).name+"; Execution: "+this.name+")");const P=n,{type:q,data:{isPeriodic:A=!1,isRefreshable:de=!1}={}}=n;if(n.state===X&&(q===U||q===g))return;const he=n.state!=H;he&&P._transitionTo(H,h);const _e=S;S=P,b={parent:b,zone:this};try{q==g&&n.data&&!A&&!de&&(n.cancelFn=void 0);try{return this._zoneDelegate.invokeTask(this,P,o,m)}catch(oe){if(this._zoneDelegate.handleError(this,oe))throw oe}}finally{const oe=n.state;if(oe!==X&&oe!==Y)if(q==U||A||de&&oe===y)he&&P._transitionTo(h,H,y);else{const f=P._zoneDelegates;this._updateTaskCount(P,-1),he&&P._transitionTo(X,H,X),de&&(P._zoneDelegates=f)}b=b.parent,S=_e}}scheduleTask(n){if(n.zone&&n.zone!==this){let m=this;for(;m;){if(m===n.zone)throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${n.zone.name}`);m=m.parent}}n._transitionTo(y,X);const o=[];n._zoneDelegates=o,n._zone=this;try{n=this._zoneDelegate.scheduleTask(this,n)}catch(m){throw n._transitionTo(Y,y,X),this._zoneDelegate.handleError(this,m),m}return n._zoneDelegates===o&&this._updateTaskCount(n,1),n.state==y&&n._transitionTo(h,y),n}scheduleMicroTask(n,o,m,P){return this.scheduleTask(new E(F,n,o,m,P,void 0))}scheduleMacroTask(n,o,m,P,q){return this.scheduleTask(new E(g,n,o,m,P,q))}scheduleEventTask(n,o,m,P,q){return this.scheduleTask(new E(U,n,o,m,P,q))}cancelTask(n){if(n.zone!=this)throw new Error("A task can only be cancelled in the zone of creation! (Creation: "+(n.zone||J).name+"; Execution: "+this.name+")");if(n.state===h||n.state===H){n._transitionTo(V,h,H);try{this._zoneDelegate.cancelTask(this,n)}catch(o){throw n._transitionTo(Y,V),this._zoneDelegate.handleError(this,o),o}return this._updateTaskCount(n,-1),n._transitionTo(X,V),n.runCount=-1,n}}_updateTaskCount(n,o){const m=n._zoneDelegates;-1==o&&(n._zoneDelegates=null);for(let P=0;P<m.length;P++)m[P]._updateTaskCount(n.type,o)}}return N})();const i={name:"",onHasTask:(N,d,n,o)=>N.hasTask(n,o),onScheduleTask:(N,d,n,o)=>N.scheduleTask(n,o),onInvokeTask:(N,d,n,o,m,P)=>N.invokeTask(n,o,m,P),onCancelTask:(N,d,n,o)=>N.cancelTask(n,o)};class u{get zone(){return this._zone}_zone;_taskCounts={microTask:0,macroTask:0,eventTask:0};_parentDelegate;_forkDlgt;_forkZS;_forkCurrZone;_interceptDlgt;_interceptZS;_interceptCurrZone;_invokeDlgt;_invokeZS;_invokeCurrZone;_handleErrorDlgt;_handleErrorZS;_handleErrorCurrZone;_scheduleTaskDlgt;_scheduleTaskZS;_scheduleTaskCurrZone;_invokeTaskDlgt;_invokeTaskZS;_invokeTaskCurrZone;_cancelTaskDlgt;_cancelTaskZS;_cancelTaskCurrZone;_hasTaskDlgt;_hasTaskDlgtOwner;_hasTaskZS;_hasTaskCurrZone;constructor(d,n,o){this._zone=d,this._parentDelegate=n,this._forkZS=o&&(o&&o.onFork?o:n._forkZS),this._forkDlgt=o&&(o.onFork?n:n._forkDlgt),this._forkCurrZone=o&&(o.onFork?this._zone:n._forkCurrZone),this._interceptZS=o&&(o.onIntercept?o:n._interceptZS),this._interceptDlgt=o&&(o.onIntercept?n:n._interceptDlgt),this._interceptCurrZone=o&&(o.onIntercept?this._zone:n._interceptCurrZone),this._invokeZS=o&&(o.onInvoke?o:n._invokeZS),this._invokeDlgt=o&&(o.onInvoke?n:n._invokeDlgt),this._invokeCurrZone=o&&(o.onInvoke?this._zone:n._invokeCurrZone),this._handleErrorZS=o&&(o.onHandleError?o:n._handleErrorZS),this._handleErrorDlgt=o&&(o.onHandleError?n:n._handleErrorDlgt),this._handleErrorCurrZone=o&&(o.onHandleError?this._zone:n._handleErrorCurrZone),this._scheduleTaskZS=o&&(o.onScheduleTask?o:n._scheduleTaskZS),this._scheduleTaskDlgt=o&&(o.onScheduleTask?n:n._scheduleTaskDlgt),this._scheduleTaskCurrZone=o&&(o.onScheduleTask?this._zone:n._scheduleTaskCurrZone),this._invokeTaskZS=o&&(o.onInvokeTask?o:n._invokeTaskZS),this._invokeTaskDlgt=o&&(o.onInvokeTask?n:n._invokeTaskDlgt),this._invokeTaskCurrZone=o&&(o.onInvokeTask?this._zone:n._invokeTaskCurrZone),this._cancelTaskZS=o&&(o.onCancelTask?o:n._cancelTaskZS),this._cancelTaskDlgt=o&&(o.onCancelTask?n:n._cancelTaskDlgt),this._cancelTaskCurrZone=o&&(o.onCancelTask?this._zone:n._cancelTaskCurrZone),this._hasTaskZS=null,this._hasTaskDlgt=null,this._hasTaskDlgtOwner=null,this._hasTaskCurrZone=null;const m=o&&o.onHasTask;(m||n&&n._hasTaskZS)&&(this._hasTaskZS=m?o:i,this._hasTaskDlgt=n,this._hasTaskDlgtOwner=this,this._hasTaskCurrZone=this._zone,o.onScheduleTask||(this._scheduleTaskZS=i,this._scheduleTaskDlgt=n,this._scheduleTaskCurrZone=this._zone),o.onInvokeTask||(this._invokeTaskZS=i,this._invokeTaskDlgt=n,this._invokeTaskCurrZone=this._zone),o.onCancelTask||(this._cancelTaskZS=i,this._cancelTaskDlgt=n,this._cancelTaskCurrZone=this._zone))}fork(d,n){return this._forkZS?this._forkZS.onFork(this._forkDlgt,this.zone,d,n):new t(d,n)}intercept(d,n,o){return this._interceptZS?this._interceptZS.onIntercept(this._interceptDlgt,this._interceptCurrZone,d,n,o):n}invoke(d,n,o,m,P){return this._invokeZS?this._invokeZS.onInvoke(this._invokeDlgt,this._invokeCurrZone,d,n,o,m,P):n.apply(o,m)}handleError(d,n){return!this._handleErrorZS||this._handleErrorZS.onHandleError(this._handleErrorDlgt,this._handleErrorCurrZone,d,n)}scheduleTask(d,n){let o=n;if(this._scheduleTaskZS)this._hasTaskZS&&o._zoneDelegates.push(this._hasTaskDlgtOwner),o=this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt,this._scheduleTaskCurrZone,d,n),o||(o=n);else if(n.scheduleFn)n.scheduleFn(n);else{if(n.type!=F)throw new Error("Task is missing scheduleFn.");z(n)}return o}invokeTask(d,n,o,m){return this._invokeTaskZS?this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt,this._invokeTaskCurrZone,d,n,o,m):n.callback.apply(o,m)}cancelTask(d,n){let o;if(this._cancelTaskZS)o=this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt,this._cancelTaskCurrZone,d,n);else{if(!n.cancelFn)throw Error("Task is not cancelable");o=n.cancelFn(n)}return o}hasTask(d,n){try{this._hasTaskZS&&this._hasTaskZS.onHasTask(this._hasTaskDlgt,this._hasTaskCurrZone,d,n)}catch(o){this.handleError(d,o)}}_updateTaskCount(d,n){const o=this._taskCounts,m=o[d],P=o[d]=m+n;if(P<0)throw new Error("More tasks executed then were scheduled.");0!=m&&0!=P||this.hasTask(this._zone,{microTask:o.microTask>0,macroTask:o.macroTask>0,eventTask:o.eventTask>0,change:d})}}class E{type;source;invoke;callback;data;scheduleFn;cancelFn;_zone=null;runCount=0;_zoneDelegates=null;_state="notScheduled";constructor(d,n,o,m,P,q){if(this.type=d,this.source=n,this.data=m,this.scheduleFn=P,this.cancelFn=q,!o)throw new Error("callback is not defined");this.callback=o;const A=this;this.invoke=d===U&&m&&m.useG?E.invokeTask:function(){return E.invokeTask.call(te,A,this,arguments)}}static invokeTask(d,n,o){d||(d=this),ee++;try{return d.runCount++,d.zone.runTask(d,n,o)}finally{1==ee&&K(),ee--}}get zone(){return this._zone}get state(){return this._state}cancelScheduleRequest(){this._transitionTo(X,y)}_transitionTo(d,n,o){if(this._state!==n&&this._state!==o)throw new Error(`${this.type} '${this.source}': can not transition to '${d}', expecting state '${n}'${o?" or '"+o+"'":""}, was '${this._state}'.`);this._state=d,d==X&&(this._zoneDelegates=null)}toString(){return this.data&&typeof this.data.handleId<"u"?this.data.handleId.toString():Object.prototype.toString.call(this)}toJSON(){return{type:this.type,state:this.state,source:this.source,zone:this.zone.name,runCount:this.runCount}}}const T=Q("setTimeout"),p=Q("Promise"),D=Q("then");let M,_=[],R=!1;function x(N){if(M||te[p]&&(M=te[p].resolve(0)),M){let d=M[D];d||(d=M.then),d.call(M,N)}else te[T](N,0)}function z(N){0===ee&&0===_.length&&x(K),N&&_.push(N)}function K(){if(!R){for(R=!0;_.length;){const N=_;_=[];for(let d=0;d<N.length;d++){const n=N[d];try{n.zone.runTask(n,null,null)}catch(o){w.onUnhandledError(o)}}}w.microtaskDrainDone(),R=!1}}const J={name:"NO ZONE"},X="notScheduled",y="scheduling",h="scheduled",H="running",V="canceling",Y="unknown",F="microTask",g="macroTask",U="eventTask",O={},w={symbol:Q,currentZoneFrame:()=>b,onUnhandledError:W,microtaskDrainDone:W,scheduleMicroTask:z,showUncaughtError:()=>!t[Q("ignoreConsoleErrorUncaughtError")],patchEventTarget:()=>[],patchOnProperties:W,patchMethod:()=>W,bindArguments:()=>[],patchThen:()=>W,patchMacroTask:()=>W,patchEventPrototype:()=>W,isIEOrEdge:()=>!1,getGlobalObjects:()=>{},ObjectDefineProperty:()=>W,ObjectGetOwnPropertyDescriptor:()=>{},ObjectCreate:()=>{},ArraySlice:()=>[],patchClass:()=>W,wrapWithCurrentZone:()=>W,filterProperties:()=>[],attachOriginToPatched:()=>W,_redefineProperty:()=>W,patchCallbacks:()=>W,nativeScheduleMicroTask:x};let b={parent:null,zone:new t(null,null)},S=null,ee=0;function W(){}return c("Zone","Zone"),t}(),e.Zone}();(function Lt(e){(function St(e){e.__load_patch("ZoneAwarePromise",(r,c,t)=>{const i=Object.getOwnPropertyDescriptor,u=Object.defineProperty,T=t.symbol,p=[],D=!1!==r[T("DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION")],_=T("Promise"),R=T("then");t.onUnhandledError=f=>{if(t.showUncaughtError()){const a=f&&f.rejection;a?console.error("Unhandled Promise rejection:",a instanceof Error?a.message:a,"; Zone:",f.zone.name,"; Task:",f.task&&f.task.source,"; Value:",a,a instanceof Error?a.stack:void 0):console.error(f)}},t.microtaskDrainDone=()=>{for(;p.length;){const f=p.shift();try{f.zone.runGuarded(()=>{throw f.throwOriginal?f.rejection:f})}catch(a){z(a)}}};const x=T("unhandledPromiseRejectionHandler");function z(f){t.onUnhandledError(f);try{const a=c[x];"function"==typeof a&&a.call(this,f)}catch{}}function K(f){return f&&"function"==typeof f.then}function J(f){return f}function X(f){return A.reject(f)}const y=T("state"),h=T("value"),H=T("finally"),V=T("parentPromiseValue"),Y=T("parentPromiseState"),g=null,U=!0,O=!1;function b(f,a){return s=>{try{N(f,a,s)}catch(l){N(f,!1,l)}}}const S=function(){let f=!1;return function(s){return function(){f||(f=!0,s.apply(null,arguments))}}},ee="Promise resolved with itself",W=T("currentTaskTrace");function N(f,a,s){const l=S();if(f===s)throw new TypeError(ee);if(f[y]===g){let v=null;try{("object"==typeof s||"function"==typeof s)&&(v=s&&s.then)}catch(C){return l(()=>{N(f,!1,C)})(),f}if(a!==O&&s instanceof A&&s.hasOwnProperty(y)&&s.hasOwnProperty(h)&&s[y]!==g)n(s),N(f,s[y],s[h]);else if(a!==O&&"function"==typeof v)try{v.call(s,l(b(f,a)),l(b(f,!1)))}catch(C){l(()=>{N(f,!1,C)})()}else{f[y]=a;const C=f[h];if(f[h]=s,f[H]===H&&a===U&&(f[y]=f[Y],f[h]=f[V]),a===O&&s instanceof Error){const k=c.currentTask&&c.currentTask.data&&c.currentTask.data.__creationTrace__;k&&u(s,W,{configurable:!0,enumerable:!1,writable:!0,value:k})}for(let k=0;k<C.length;)o(f,C[k++],C[k++],C[k++],C[k++]);if(0==C.length&&a==O){f[y]=0;let k=s;try{throw new Error("Uncaught (in promise): "+function E(f){return f&&f.toString===Object.prototype.toString?(f.constructor&&f.constructor.name||"")+": "+JSON.stringify(f):f?f.toString():Object.prototype.toString.call(f)}(s)+(s&&s.stack?"\n"+s.stack:""))}catch(Z){k=Z}D&&(k.throwOriginal=!0),k.rejection=s,k.promise=f,k.zone=c.current,k.task=c.currentTask,p.push(k),t.scheduleMicroTask()}}}return f}const d=T("rejectionHandledHandler");function n(f){if(0===f[y]){try{const a=c[d];a&&"function"==typeof a&&a.call(this,{rejection:f[h],promise:f})}catch{}f[y]=O;for(let a=0;a<p.length;a++)f===p[a].promise&&p.splice(a,1)}}function o(f,a,s,l,v){n(f);const C=f[y],k=C?"function"==typeof l?l:J:"function"==typeof v?v:X;a.scheduleMicroTask("Promise.then",()=>{try{const Z=f[h],L=!!s&&H===s[H];L&&(s[V]=Z,s[Y]=C);const I=a.run(k,void 0,L&&k!==X&&k!==J?[]:[Z]);N(s,!0,I)}catch(Z){N(s,!1,Z)}},s)}const P=function(){},q=r.AggregateError;class A{static toString(){return"function ZoneAwarePromise() { [native code] }"}static resolve(a){return a instanceof A?a:N(new this(null),U,a)}static reject(a){return N(new this(null),O,a)}static withResolvers(){const a={};return a.promise=new A((s,l)=>{a.resolve=s,a.reject=l}),a}static any(a){if(!a||"function"!=typeof a[Symbol.iterator])return Promise.reject(new q([],"All promises were rejected"));const s=[];let l=0;try{for(let k of a)l++,s.push(A.resolve(k))}catch{return Promise.reject(new q([],"All promises were rejected"))}if(0===l)return Promise.reject(new q([],"All promises were rejected"));let v=!1;const C=[];return new A((k,Z)=>{for(let L=0;L<s.length;L++)s[L].then(I=>{v||(v=!0,k(I))},I=>{C.push(I),l--,0===l&&(v=!0,Z(new q(C,"All promises were rejected")))})})}static race(a){let s,l,v=new this((Z,L)=>{s=Z,l=L});function C(Z){s(Z)}function k(Z){l(Z)}for(let Z of a)K(Z)||(Z=this.resolve(Z)),Z.then(C,k);return v}static all(a){return A.allWithCallback(a)}static allSettled(a){return(this&&this.prototype instanceof A?this:A).allWithCallback(a,{thenCallback:l=>({status:"fulfilled",value:l}),errorCallback:l=>({status:"rejected",reason:l})})}static allWithCallback(a,s){let l,v,C=new this((I,G)=>{l=I,v=G}),k=2,Z=0;const L=[];for(let I of a){K(I)||(I=this.resolve(I));const G=Z;try{I.then(B=>{L[G]=s?s.thenCallback(B):B,k--,0===k&&l(L)},B=>{s?(L[G]=s.errorCallback(B),k--,0===k&&l(L)):v(B)})}catch(B){v(B)}k++,Z++}return k-=2,0===k&&l(L),C}constructor(a){const s=this;if(!(s instanceof A))throw new Error("Must be an instanceof Promise.");s[y]=g,s[h]=[];try{const l=S();a&&a(l(b(s,U)),l(b(s,O)))}catch(l){N(s,!1,l)}}get[Symbol.toStringTag](){return"Promise"}get[Symbol.species](){return A}then(a,s){let l=this.constructor?.[Symbol.species];(!l||"function"!=typeof l)&&(l=this.constructor||A);const v=new l(P),C=c.current;return this[y]==g?this[h].push(C,v,a,s):o(this,C,v,a,s),v}catch(a){return this.then(null,a)}finally(a){let s=this.constructor?.[Symbol.species];(!s||"function"!=typeof s)&&(s=A);const l=new s(P);l[H]=H;const v=c.current;return this[y]==g?this[h].push(v,l,a,a):o(this,v,l,a,a),l}}A.resolve=A.resolve,A.reject=A.reject,A.race=A.race,A.all=A.all;const de=r[_]=r.Promise;r.Promise=A;const he=T("thenPatched");function _e(f){const a=f.prototype,s=i(a,"then");if(s&&(!1===s.writable||!s.configurable))return;const l=a.then;a[R]=l,f.prototype.then=function(v,C){return new A((Z,L)=>{l.call(this,Z,L)}).then(v,C)},f[he]=!0}return t.patchThen=_e,de&&(_e(de),ue(r,"fetch",f=>function oe(f){return function(a,s){let l=f.apply(a,s);if(l instanceof A)return l;let v=l.constructor;return v[he]||_e(v),l}}(f))),Promise[c.__symbol__("uncaughtPromiseErrors")]=p,A})})(e),function Ot(e){e.__load_patch("toString",r=>{const c=Function.prototype.toString,t=j("OriginalDelegate"),i=j("Promise"),u=j("Error"),E=function(){if("function"==typeof this){const _=this[t];if(_)return"function"==typeof _?c.call(_):Object.prototype.toString.call(_);if(this===Promise){const R=r[i];if(R)return c.call(R)}if(this===Error){const R=r[u];if(R)return c.call(R)}}return c.call(this)};E[t]=c,Function.prototype.toString=E;const T=Object.prototype.toString;Object.prototype.toString=function(){return"function"==typeof Promise&&this instanceof Promise?"[object Promise]":T.call(this)}})}(e),function Zt(e){e.__load_patch("util",(r,c,t)=>{const i=Ge(r);t.patchOnProperties=$e,t.patchMethod=ue,t.bindArguments=xe,t.patchMacroTask=kt;const u=c.__symbol__("BLACK_LISTED_EVENTS"),E=c.__symbol__("UNPATCHED_EVENTS");r[E]&&(r[u]=r[E]),r[u]&&(c[u]=c[E]=r[u]),t.patchEventPrototype=vt,t.patchEventTarget=yt,t.isIEOrEdge=pt,t.ObjectDefineProperty=Ne,t.ObjectGetOwnPropertyDescriptor=Ee,t.ObjectCreate=_t,t.ArraySlice=dt,t.patchClass=Pe,t.wrapWithCurrentZone=je,t.filterProperties=st,t.attachOriginToPatched=fe,t._redefineProperty=Object.defineProperty,t.patchCallbacks=Nt,t.getGlobalObjects=()=>({globalSources:et,zoneSymbolEventNames:ne,eventNames:i,isBrowser:Ve,isMix:qe,isNode:Ce,TRUE_STR:ae,FALSE_STR:le,ZONE_SYMBOL_PREFIX:ve,ADD_EVENT_LISTENER_STR:Le,REMOVE_EVENT_LISTENER_STR:Ie})})}(e)})(ct),function Dt(e){e.__load_patch("legacy",r=>{const c=r[e.__symbol__("legacyPatch")];c&&c()}),e.__load_patch("timers",r=>{const c="set",t="clear";ge(r,c,t,"Timeout"),ge(r,c,t,"Interval"),ge(r,c,t,"Immediate")}),e.__load_patch("requestAnimationFrame",r=>{ge(r,"request","cancel","AnimationFrame"),ge(r,"mozRequest","mozCancel","AnimationFrame"),ge(r,"webkitRequest","webkitCancel","AnimationFrame")}),e.__load_patch("blocking",(r,c)=>{const t=["alert","prompt","confirm"];for(let i=0;i<t.length;i++)ue(r,t[i],(E,T,p)=>function(D,_){return c.current.run(E,r,_,p)})}),e.__load_patch("EventTarget",(r,c,t)=>{(function wt(e,r){r.patchEventPrototype(e,r)})(r,t),function Rt(e,r){if(Zone[r.symbol("patchEventTarget")])return;const{eventNames:c,zoneSymbolEventNames:t,TRUE_STR:i,FALSE_STR:u,ZONE_SYMBOL_PREFIX:E}=r.getGlobalObjects();for(let p=0;p<c.length;p++){const D=c[p],M=E+(D+u),x=E+(D+i);t[D]={},t[D][u]=M,t[D][i]=x}const T=e.EventTarget;T&&T.prototype&&r.patchEventTarget(e,r,[T&&T.prototype])}(r,t);const i=r.XMLHttpRequestEventTarget;i&&i.prototype&&t.patchEventTarget(r,t,[i.prototype])}),e.__load_patch("MutationObserver",(r,c,t)=>{Pe("MutationObserver"),Pe("WebKitMutationObserver")}),e.__load_patch("IntersectionObserver",(r,c,t)=>{Pe("IntersectionObserver")}),e.__load_patch("FileReader",(r,c,t)=>{Pe("FileReader")}),e.__load_patch("on_property",(r,c,t)=>{!function Ct(e,r){if(Ce&&!qe||Zone[e.symbol("patchEvents")])return;const c=r.__Zone_ignore_on_properties;let t=[];if(Ve){const i=window;t=t.concat(["Document","SVGElement","Element","HTMLElement","HTMLBodyElement","HTMLMediaElement","HTMLFrameSetElement","HTMLFrameElement","HTMLIFrameElement","HTMLMarqueeElement","Worker"]);const u=[];it(i,Ge(i),c&&c.concat(u),Ze(i))}t=t.concat(["XMLHttpRequest","XMLHttpRequestEventTarget","IDBIndex","IDBRequest","IDBOpenDBRequest","IDBDatabase","IDBTransaction","IDBCursor","WebSocket"]);for(let i=0;i<t.length;i++){const u=r[t[i]];u?.prototype&&it(u.prototype,Ge(u.prototype),c)}}(t,r)}),e.__load_patch("customElements",(r,c,t)=>{!function Pt(e,r){const{isBrowser:c,isMix:t}=r.getGlobalObjects();(c||t)&&e.customElements&&"customElements"in e&&r.patchCallbacks(r,e.customElements,"customElements","define",["connectedCallback","disconnectedCallback","adoptedCallback","attributeChangedCallback","formAssociatedCallback","formDisabledCallback","formResetCallback","formStateRestoreCallback"])}(r,t)}),e.__load_patch("XHR",(r,c)=>{!function D(_){const R=_.XMLHttpRequest;if(!R)return;const M=R.prototype;let z=M[Me],K=M[Ae];if(!z){const w=_.XMLHttpRequestEventTarget;if(w){const b=w.prototype;z=b[Me],K=b[Ae]}}const J="readystatechange",X="scheduled";function y(w){const b=w.data,S=b.target;S[E]=!1,S[p]=!1;const ee=S[u];z||(z=S[Me],K=S[Ae]),ee&&K.call(S,J,ee);const W=S[u]=()=>{if(S.readyState===S.DONE)if(!b.aborted&&S[E]&&w.state===X){const d=S[c.__symbol__("loadfalse")];if(0!==S.status&&d&&d.length>0){const n=w.invoke;w.invoke=function(){const o=S[c.__symbol__("loadfalse")];for(let m=0;m<o.length;m++)o[m]===w&&o.splice(m,1);!b.aborted&&w.state===X&&n.call(w)},d.push(w)}else w.invoke()}else!b.aborted&&!1===S[E]&&(S[p]=!0)};return z.call(S,J,W),S[t]||(S[t]=w),U.apply(S,b.args),S[E]=!0,w}function h(){}function H(w){const b=w.data;return b.aborted=!0,O.apply(b.target,b.args)}const V=ue(M,"open",()=>function(w,b){return w[i]=0==b[2],w[T]=b[1],V.apply(w,b)}),F=j("fetchTaskAborting"),g=j("fetchTaskScheduling"),U=ue(M,"send",()=>function(w,b){if(!0===c.current[g]||w[i])return U.apply(w,b);{const S={target:w,url:w[T],isPeriodic:!1,args:b,aborted:!1},ee=He("XMLHttpRequest.send",h,S,y,H);w&&!0===w[p]&&!S.aborted&&ee.state===X&&ee.invoke()}}),O=ue(M,"abort",()=>function(w,b){const S=function x(w){return w[t]}(w);if(S&&"string"==typeof S.type){if(null==S.cancelFn||S.data&&S.data.aborted)return;S.zone.cancelTask(S)}else if(!0===c.current[F])return O.apply(w,b)})}(r);const t=j("xhrTask"),i=j("xhrSync"),u=j("xhrListener"),E=j("xhrScheduled"),T=j("xhrURL"),p=j("xhrErrorBeforeScheduled")}),e.__load_patch("geolocation",r=>{r.navigator&&r.navigator.geolocation&&function Et(e,r){const c=e.constructor.name;for(let t=0;t<r.length;t++){const i=r[t],u=e[i];if(u){if(!Ue(Ee(e,i)))continue;e[i]=(T=>{const p=function(){return T.apply(this,xe(arguments,c+"."+i))};return fe(p,T),p})(u)}}}(r.navigator.geolocation,["getCurrentPosition","watchPosition"])}),e.__load_patch("PromiseRejectionEvent",(r,c)=>{function t(i){return function(u){ot(r,i).forEach(T=>{const p=r.PromiseRejectionEvent;if(p){const D=new p(i,{promise:u.promise,reason:u.rejection});T.invoke(D)}})}}r.PromiseRejectionEvent&&(c[j("unhandledPromiseRejectionHandler")]=t("unhandledrejection"),c[j("rejectionHandledHandler")]=t("rejectionhandled"))}),e.__load_patch("queueMicrotask",(r,c,t)=>{!function bt(e,r){r.patchMethod(e,"queueMicrotask",c=>function(t,i){Zone.current.scheduleMicroTask("queueMicrotask",i[0])})}(r,t)})}(ct)}},te=>{te(te.s=50)}]);
})();

// This entry needs to be wrapped in an IIFE because it needs to be isolated against other entry modules.
(() => {
/*!*************************!*\
  !*** ./dist/runtime.js ***!
  \*************************/
(()=>{"use strict";var e,i={},v={};function n(e){var a=v[e];if(void 0!==a)return a.exports;var r=v[e]={exports:{}};return i[e](r,r.exports,n),r.exports}n.m=i,e=[],n.O=(a,r,u,f)=>{if(!r){var _=1/0;for(l=0;l<e.length;l++){for(var[r,u,f]=e[l],c=!0,t=0;t<r.length;t++)(!1&f||_>=f)&&Object.keys(n.O).every(d=>n.O[d](r[t]))?r.splice(t--,1):(c=!1,f<_&&(_=f));if(c){e.splice(l--,1);var o=u();void 0!==o&&(a=o)}}return a}f=f||0;for(var l=e.length;l>0&&e[l-1][2]>f;l--)e[l]=e[l-1];e[l]=[r,u,f]},n.n=e=>{var a=e&&e.__esModule?()=>e.default:()=>e;return n.d(a,{a}),a},n.d=(e,a)=>{for(var r in a)n.o(a,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:a[r]})},n.o=(e,a)=>Object.prototype.hasOwnProperty.call(e,a),(()=>{var e={121:0};n.O.j=u=>0===e[u];var a=(u,f)=>{var t,o,[l,_,c]=f,s=0;if(l.some(b=>0!==e[b])){for(t in _)n.o(_,t)&&(n.m[t]=_[t]);if(c)var p=c(n)}for(u&&u(f);s<l.length;s++)n.o(e,o=l[s])&&e[o]&&e[o][0](),e[o]=0;return n.O(p)},r=self.webpackChunkng_figma_plugin_boilerplate=self.webpackChunkng_figma_plugin_boilerplate||[];r.forEach(a.bind(null,0)),r.push=a.bind(null,r.push.bind(r))})()})();
})();

/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,